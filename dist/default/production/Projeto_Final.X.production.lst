

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Dec 04 19:50:01 2023

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           ; Version 1.45
    44                           ; Generated 16/11/2017 GMT
    45                           ; 
    46                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4550 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     
    78                           	psect	idataBANK0
    79  00174C                     __pidataBANK0:
    80                           	opt stack 0
    81                           
    82                           ;initializer for _temperaturaReferencia
    83  00174C  0023               	dw	35
    84                           
    85                           ;initializer for _Kp
    86  00174E  0005               	dw	5
    87                           
    88                           ;initializer for _razaoCiclicaCCP1
    89  001750  0064               	dw	100
    90                           
    91                           	psect	nvBANK0
    92  0000B8                     __pnvBANK0:
    93                           	opt stack 0
    94  0000B8                     _attRazaoCiclicaCCP2:
    95                           	opt stack 0
    96  0000B8                     	ds	2
    97  0000BA                     _attRazaoCiclicaCCP1:
    98                           	opt stack 0
    99  0000BA                     	ds	2
   100  0000                     _CCPR1L	set	4030
   101  0000                     _CCPR2L	set	4027
   102  0000                     _ADRESL	set	4035
   103  0000                     _CCP1CONbits	set	4029
   104  0000                     _CCP2CONbits	set	4026
   105  0000                     _PR2	set	4043
   106  0000                     _T2CONbits	set	4042
   107  0000                     _INTCON2bits	set	4081
   108  0000                     _T0CONbits	set	4053
   109  0000                     _IPR1bits	set	3999
   110  0000                     _PIE1bits	set	3997
   111  0000                     _ADCON2bits	set	4032
   112  0000                     _ADCON1bits	set	4033
   113  0000                     _RCONbits	set	4048
   114  0000                     _TRISBbits	set	3987
   115  0000                     _TRISCbits	set	3988
   116  0000                     _TRISAbits	set	3986
   117  0000                     _INTCON3bits	set	4080
   118  0000                     _TMR0L	set	4054
   119  0000                     _ADCON0bits	set	4034
   120  0000                     _INTCONbits	set	4082
   121  0000                     _PIR1bits	set	3998
   122  0000                     _LATEbits	set	3981
   123  0000                     _TRISEbits	set	3990
   124  0000                     _TRISD	set	3989
   125  0000                     _PORTD	set	3971
   126  0000                     _ADRESH	set	4036
   127                           
   128                           	psect	smallconst
   129  000800                     __psmallconst:
   130                           	opt stack 0
   131  000800  00                 	db	0
   132  000801                     STR_1:
   133  000801  54                 	db	84	;'T'
   134  000802  72                 	db	114	;'r'
   135  000803  65                 	db	101	;'e'
   136  000804  66                 	db	102	;'f'
   137  000805  3A                 	db	58	;':'
   138  000806  00                 	db	0
   139  000807                     STR_4:
   140  000807  54                 	db	84	;'T'
   141  000808  65                 	db	101	;'e'
   142  000809  6D                 	db	109	;'m'
   143  00080A  70                 	db	112	;'p'
   144  00080B  3A                 	db	58	;':'
   145  00080C  00                 	db	0
   146  00080D                     STR_2:
   147  00080D  50                 	db	80	;'P'
   148  00080E  57                 	db	87	;'W'
   149  00080F  3A                 	db	58	;':'
   150  000810  00                 	db	0
   151  000811                     STR_3:
   152  000811  25                 	db	37
   153  000812  00                 	db	0
   154  000813                     STR_5:
   155  000813  43                 	db	67	;'C'
   156  000814  00                 	db	0
   157                           
   158                           ; #config settings
   159  000815  00                 	db	0	; dummy byte at the end
   160  0000                     
   161                           	psect	cinit
   162  001504                     __pcinit:
   163                           	opt stack 0
   164  001504                     start_initialization:
   165                           	opt stack 0
   166  001504                     __initialization:
   167                           	opt stack 0
   168                           
   169                           ; Initialize objects allocated to BANK0 (6 bytes)
   170                           ; load TBLPTR registers with __pidataBANK0
   171  001504  0E4C               	movlw	low __pidataBANK0
   172  001506  6EF6               	movwf	tblptrl,c
   173  001508  0E17               	movlw	high __pidataBANK0
   174  00150A  6EF7               	movwf	tblptrh,c
   175  00150C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   176  00150E  6EF8               	movwf	tblptru,c
   177  001510  EE00  F0B2         	lfsr	0,__pdataBANK0
   178  001514  EE10 F006          	lfsr	1,6
   179  001518                     copy_data0:
   180  001518  0009               	tblrd		*+
   181  00151A  CFF5 FFEE          	movff	tablat,postinc0
   182  00151E  50E5               	movf	postdec1,w,c
   183  001520  50E1               	movf	fsr1l,w,c
   184  001522  E1FA               	bnz	copy_data0
   185                           
   186                           ; Clear objects allocated to BANK0 (24 bytes)
   187  001524  EE00  F09A         	lfsr	0,__pbssBANK0
   188  001528  0E18               	movlw	24
   189  00152A                     clear_0:
   190  00152A  6AEE               	clrf	postinc0,c
   191  00152C  06E8               	decf	wreg,f,c
   192  00152E  E1FD               	bnz	clear_0
   193                           
   194                           ; Clear objects allocated to COMRAM (2 bytes)
   195  001530  6A37               	clrf	(__pbssCOMRAM+1)& (0+255),c
   196  001532  6A36               	clrf	__pbssCOMRAM& (0+255),c
   197  001534                     end_of_initialization:
   198                           	opt stack 0
   199  001534                     __end_of__initialization:
   200                           	opt stack 0
   201  001534  9038               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   202  001536  9238               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   203  001538  0E00               	movlw	low (__Lsmallconst shr (0+16))
   204  00153A  6EF8               	movwf	tblptru,c
   205  00153C  0E08               	movlw	high __Lsmallconst
   206  00153E  6EF7               	movwf	tblptrh,c
   207  001540  0100               	movlb	0
   208  001542  EF0B  F004         	goto	_main	;jump to C main() function
   209                           tblptru	equ	0xFF8
   210                           tblptrh	equ	0xFF7
   211                           tblptrl	equ	0xFF6
   212                           tablat	equ	0xFF5
   213                           postinc0	equ	0xFEE
   214                           wreg	equ	0xFE8
   215                           postdec1	equ	0xFE5
   216                           fsr1l	equ	0xFE1
   217                           
   218                           	psect	bssCOMRAM
   219  000036                     __pbssCOMRAM:
   220                           	opt stack 0
   221  000036                     _estouros:
   222                           	opt stack 0
   223  000036                     	ds	2
   224                           tblptru	equ	0xFF8
   225                           tblptrh	equ	0xFF7
   226                           tblptrl	equ	0xFF6
   227                           tablat	equ	0xFF5
   228                           postinc0	equ	0xFEE
   229                           wreg	equ	0xFE8
   230                           postdec1	equ	0xFE5
   231                           fsr1l	equ	0xFE1
   232                           
   233                           	psect	bssBANK0
   234  00009A                     __pbssBANK0:
   235                           	opt stack 0
   236  00009A                     _temperaturaAtual:
   237                           	opt stack 0
   238  00009A                     	ds	3
   239  00009D                     _potencia:
   240                           	opt stack 0
   241  00009D                     	ds	2
   242  00009F                     _controlador:
   243                           	opt stack 0
   244  00009F                     	ds	2
   245  0000A1                     _conversor_temp:
   246                           	opt stack 0
   247  0000A1                     	ds	2
   248  0000A3                     _funcdisp:
   249                           	opt stack 0
   250  0000A3                     	ds	2
   251  0000A5                     _diminui:
   252                           	opt stack 0
   253  0000A5                     	ds	2
   254  0000A7                     _aumenta:
   255                           	opt stack 0
   256  0000A7                     	ds	2
   257  0000A9                     _valorLido2:
   258                           	opt stack 0
   259  0000A9                     	ds	2
   260  0000AB                     _valorLido1:
   261                           	opt stack 0
   262  0000AB                     	ds	2
   263  0000AD                     _controleProporcional:
   264                           	opt stack 0
   265  0000AD                     	ds	2
   266  0000AF                     _voltage:
   267                           	opt stack 0
   268  0000AF                     	ds	3
   269                           tblptru	equ	0xFF8
   270                           tblptrh	equ	0xFF7
   271                           tblptrl	equ	0xFF6
   272                           tablat	equ	0xFF5
   273                           postinc0	equ	0xFEE
   274                           wreg	equ	0xFE8
   275                           postdec1	equ	0xFE5
   276                           fsr1l	equ	0xFE1
   277                           
   278                           	psect	dataBANK0
   279  0000B2                     __pdataBANK0:
   280                           	opt stack 0
   281  0000B2                     _temperaturaReferencia:
   282                           	opt stack 0
   283  0000B2                     	ds	2
   284  0000B4                     _Kp:
   285                           	opt stack 0
   286  0000B4                     	ds	2
   287  0000B6                     _razaoCiclicaCCP1:
   288                           	opt stack 0
   289  0000B6                     	ds	2
   290                           tblptru	equ	0xFF8
   291                           tblptrh	equ	0xFF7
   292                           tblptrl	equ	0xFF6
   293                           tablat	equ	0xFF5
   294                           postinc0	equ	0xFEE
   295                           wreg	equ	0xFE8
   296                           postdec1	equ	0xFE5
   297                           fsr1l	equ	0xFE1
   298                           
   299                           	psect	cstackBANK0
   300  000060                     __pcstackBANK0:
   301                           	opt stack 0
   302  000060                     ?___ftmul:
   303                           	opt stack 0
   304  000060                     ___ftmul@f1:
   305                           	opt stack 0
   306                           
   307                           ; 3 bytes @ 0x0
   308  000060                     	ds	3
   309  000063                     ___ftmul@f2:
   310                           	opt stack 0
   311                           
   312                           ; 3 bytes @ 0x3
   313  000063                     	ds	3
   314  000066                     ___ftmul@exp:
   315                           	opt stack 0
   316                           
   317                           ; 1 bytes @ 0x6
   318  000066                     	ds	1
   319  000067                     ___ftmul@f3_as_product:
   320                           	opt stack 0
   321                           
   322                           ; 3 bytes @ 0x7
   323  000067                     	ds	3
   324  00006A                     ___ftmul@cntr:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0xA
   328  00006A                     	ds	1
   329  00006B                     ___ftmul@sign:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0xB
   333  00006B                     	ds	1
   334  00006C                     ?___ftadd:
   335                           	opt stack 0
   336  00006C                     ?___ftdiv:
   337                           	opt stack 0
   338  00006C                     ___ftadd@f1:
   339                           	opt stack 0
   340  00006C                     ___ftdiv@f1:
   341                           	opt stack 0
   342                           
   343                           ; 3 bytes @ 0xC
   344  00006C                     	ds	3
   345  00006F                     ___ftadd@f2:
   346                           	opt stack 0
   347  00006F                     ___ftdiv@f2:
   348                           	opt stack 0
   349                           
   350                           ; 3 bytes @ 0xF
   351  00006F                     	ds	3
   352  000072                     ??___ftadd:
   353  000072                     ??___ftdiv:
   354                           
   355                           ; 1 bytes @ 0x12
   356  000072                     	ds	3
   357  000075                     ___ftadd@sign:
   358                           	opt stack 0
   359  000075                     ___ftdiv@cntr:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x15
   363  000075                     	ds	1
   364  000076                     ___ftadd@exp2:
   365                           	opt stack 0
   366  000076                     ___ftdiv@f3:
   367                           	opt stack 0
   368                           
   369                           ; 3 bytes @ 0x16
   370  000076                     	ds	1
   371  000077                     ___ftadd@exp1:
   372                           	opt stack 0
   373                           
   374                           ; 1 bytes @ 0x17
   375  000077                     	ds	2
   376  000079                     ___ftdiv@exp:
   377                           	opt stack 0
   378                           
   379                           ; 1 bytes @ 0x19
   380  000079                     	ds	1
   381  00007A                     ___ftdiv@sign:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0x1A
   385  00007A                     	ds	1
   386  00007B                     ?___fttol:
   387                           	opt stack 0
   388  00007B                     ___fttol@f1:
   389                           	opt stack 0
   390                           
   391                           ; 3 bytes @ 0x1B
   392  00007B                     	ds	4
   393  00007F                     ??___fttol:
   394                           
   395                           ; 1 bytes @ 0x1F
   396  00007F                     	ds	5
   397  000084                     ___fttol@sign1:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0x24
   401  000084                     	ds	1
   402  000085                     ___fttol@lval:
   403                           	opt stack 0
   404                           
   405                           ; 4 bytes @ 0x25
   406  000085                     	ds	4
   407  000089                     ___fttol@exp1:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x29
   411  000089                     	ds	1
   412  00008A                     ?___awdiv:
   413                           	opt stack 0
   414  00008A                     ?___awmod:
   415                           	opt stack 0
   416  00008A                     ___awdiv@dividend:
   417                           	opt stack 0
   418  00008A                     ___awmod@dividend:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x2A
   422  00008A                     	ds	2
   423  00008C                     ___awdiv@divisor:
   424                           	opt stack 0
   425  00008C                     ___awmod@divisor:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x2C
   429  00008C                     	ds	2
   430  00008E                     ___awdiv@counter:
   431                           	opt stack 0
   432  00008E                     ___awmod@counter:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x2E
   436  00008E                     	ds	1
   437  00008F                     ___awdiv@sign:
   438                           	opt stack 0
   439  00008F                     ___awmod@sign:
   440                           	opt stack 0
   441                           
   442                           ; 1 bytes @ 0x2F
   443  00008F                     	ds	1
   444  000090                     ___awdiv@quotient:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x30
   448  000090                     	ds	2
   449  000092                     ??_main:
   450                           
   451                           ; 1 bytes @ 0x32
   452  000092                     	ds	2
   453  000094                     main@dutyCicle:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0x34
   457  000094                     	ds	2
   458  000096                     main@dutyCicle_983:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0x36
   462  000096                     	ds	2
   463  000098                     main@erro:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x38
   467  000098                     	ds	2
   468                           tblptru	equ	0xFF8
   469                           tblptrh	equ	0xFF7
   470                           tblptrl	equ	0xFF6
   471                           tablat	equ	0xFF5
   472                           postinc0	equ	0xFEE
   473                           wreg	equ	0xFE8
   474                           postdec1	equ	0xFE5
   475                           fsr1l	equ	0xFE1
   476                           
   477                           	psect	cstackCOMRAM
   478  000001                     __pcstackCOMRAM:
   479                           	opt stack 0
   480  000001                     ??_HighPriorityISR:
   481  000001                     
   482                           ; 1 bytes @ 0x0
   483  000001                     	ds	18
   484  000013                     ??_LowPriorityISR:
   485                           
   486                           ; 1 bytes @ 0x12
   487  000013                     	ds	21
   488  000028                     ??_DelayPORXLCD:
   489  000028                     ??_DelayXLCD:
   490  000028                     ?___wmul:
   491                           	opt stack 0
   492  000028                     ?___lwmod:
   493                           	opt stack 0
   494  000028                     ?___ftpack:
   495                           	opt stack 0
   496  000028                     SetDDRamAddr@DDaddr:
   497                           	opt stack 0
   498  000028                     WriteCmdXLCD@cmd:
   499                           	opt stack 0
   500  000028                     WriteDataXLCD@data:
   501                           	opt stack 0
   502  000028                     ___wmul@multiplier:
   503                           	opt stack 0
   504  000028                     ___lwmod@dividend:
   505                           	opt stack 0
   506  000028                     ___ftpack@arg:
   507                           	opt stack 0
   508                           
   509                           ; 3 bytes @ 0x27
   510  000028                     	ds	1
   511  000029                     OpenXLCD@lcdtype:
   512                           	opt stack 0
   513  000029                     putrsXLCD@buffer:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x28
   517  000029                     	ds	1
   518  00002A                     ___wmul@multiplicand:
   519                           	opt stack 0
   520  00002A                     ___lwmod@divisor:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0x29
   524  00002A                     	ds	1
   525  00002B                     ___ftpack@exp:
   526                           	opt stack 0
   527                           
   528                           ; 1 bytes @ 0x2A
   529  00002B                     	ds	1
   530  00002C                     ___ftpack@sign:
   531                           	opt stack 0
   532  00002C                     ___lwmod@counter:
   533                           	opt stack 0
   534  00002C                     ___wmul@product:
   535                           	opt stack 0
   536                           
   537                           ; 2 bytes @ 0x2B
   538  00002C                     	ds	1
   539  00002D                     ??___ftpack:
   540                           
   541                           ; 1 bytes @ 0x2C
   542  00002D                     	ds	1
   543  00002E                     ?___lwdiv:
   544                           	opt stack 0
   545  00002E                     ___lwdiv@dividend:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x2D
   549  00002E                     	ds	2
   550  000030                     ?___lwtoft:
   551                           	opt stack 0
   552  000030                     ___lwdiv@divisor:
   553                           	opt stack 0
   554  000030                     ___lwtoft@c:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0x2F
   558  000030                     	ds	2
   559  000032                     ___lwdiv@quotient:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x31
   563  000032                     	ds	1
   564  000033                     ??___ftmul:
   565  000033                     ?___ftneg:
   566                           	opt stack 0
   567  000033                     ___ftneg@f1:
   568                           	opt stack 0
   569                           
   570                           ; 3 bytes @ 0x32
   571  000033                     	ds	1
   572  000034                     ___lwdiv@counter:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x33
   576  000034                     	ds	2
   577  000036                     tblptru	equ	0xFF8
   578                           tblptrh	equ	0xFF7
   579                           tblptrl	equ	0xFF6
   580                           tablat	equ	0xFF5
   581                           postinc0	equ	0xFEE
   582                           wreg	equ	0xFE8
   583                           postdec1	equ	0xFE5
   584                           fsr1l	equ	0xFE1
   585                           
   586                           ; 1 bytes @ 0x35
   587 ;;
   588 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   589 ;;
   590 ;; *************** function _main *****************
   591 ;; Defined at:
   592 ;;		line 61 in file "main.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;  erro            2   56[BANK0 ] int 
   597 ;;  dutyCicle       2   54[BANK0 ] int 
   598 ;;  dutyCicle       2   52[BANK0 ] int 
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   608 ;;      Params:         0       0       0       0       0       0       0       0       0
   609 ;;      Locals:         0       6       0       0       0       0       0       0       0
   610 ;;      Temps:          0       2       0       0       0       0       0       0       0
   611 ;;      Totals:         0       8       0       0       0       0       0       0       0
   612 ;;Total ram usage:        8 bytes
   613 ;; Hardware stack levels required when called:    5
   614 ;; This function calls:
   615 ;;		_OpenXLCD
   616 ;;		_WriteCmdXLCD
   617 ;;		_WriteDataXLCD
   618 ;;		___awdiv
   619 ;;		___awmod
   620 ;;		___ftadd
   621 ;;		___ftdiv
   622 ;;		___ftmul
   623 ;;		___ftneg
   624 ;;		___fttol
   625 ;;		___lwdiv
   626 ;;		___lwmod
   627 ;;		___lwtoft
   628 ;;		___wmul
   629 ;;		_putrsXLCD
   630 ;; This function is called by:
   631 ;;		Startup code after reset
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text0
   636  000816                     __ptext0:
   637                           	opt stack 0
   638  000816                     _main:
   639                           	opt stack 26
   640                           
   641                           ;main.c: 64: TRISAbits.RA3 = 1;
   642                           
   643                           ;incstack = 0
   644  000816  8692               	bsf	3986,3,c	;volatile
   645                           
   646                           ;main.c: 65: TRISCbits.RC1 = 0;
   647  000818  9294               	bcf	3988,1,c	;volatile
   648                           
   649                           ;main.c: 69: TRISCbits.RC2 = 0;
   650  00081A  9494               	bcf	3988,2,c	;volatile
   651                           
   652                           ;main.c: 72: TRISBbits.RB0 = 1;
   653  00081C  8093               	bsf	3987,0,c	;volatile
   654                           
   655                           ;main.c: 73: TRISBbits.RB1 = 1;
   656  00081E  8293               	bsf	3987,1,c	;volatile
   657                           
   658                           ;main.c: 77: RCONbits.IPEN = 1;
   659  000820  8ED0               	bsf	4048,7,c	;volatile
   660                           
   661                           ;main.c: 78: INTCONbits.GIEH = 1;
   662  000822  8EF2               	bsf	intcon,7,c	;volatile
   663                           
   664                           ;main.c: 79: INTCONbits.GIEL = 1;
   665  000824  8CF2               	bsf	intcon,6,c	;volatile
   666                           
   667                           ;main.c: 85: ADCON1bits.PCFG3 = 1;
   668  000826  86C1               	bsf	4033,3,c	;volatile
   669                           
   670                           ;main.c: 86: ADCON1bits.PCFG2 = 0;
   671  000828  94C1               	bcf	4033,2,c	;volatile
   672                           
   673                           ;main.c: 87: ADCON1bits.PCFG1 = 1;
   674  00082A  82C1               	bsf	4033,1,c	;volatile
   675                           
   676                           ;main.c: 88: ADCON1bits.PCFG0 = 1;
   677  00082C  80C1               	bsf	4033,0,c	;volatile
   678                           
   679                           ;main.c: 90: ADCON0bits.ADON = 1;
   680  00082E  80C2               	bsf	4034,0,c	;volatile
   681                           
   682                           ;main.c: 91: ADCON1bits.VCFG0 = 0;
   683  000830  98C1               	bcf	4033,4,c	;volatile
   684                           
   685                           ;main.c: 92: ADCON1bits.VCFG1 = 0;
   686  000832  9AC1               	bcf	4033,5,c	;volatile
   687                           
   688                           ;main.c: 94: ADCON0bits.CHS3 = 0;
   689  000834  9AC2               	bcf	4034,5,c	;volatile
   690                           
   691                           ;main.c: 95: ADCON0bits.CHS2 = 0;
   692  000836  98C2               	bcf	4034,4,c	;volatile
   693                           
   694                           ;main.c: 97: ADCON2bits.ADFM = 1;
   695  000838  8EC0               	bsf	4032,7,c	;volatile
   696                           
   697                           ;main.c: 98: ADCON2bits.ACQT2 = 0;
   698  00083A  9AC0               	bcf	4032,5,c	;volatile
   699                           
   700                           ;main.c: 99: ADCON2bits.ACQT1 = 1;
   701  00083C  88C0               	bsf	4032,4,c	;volatile
   702                           
   703                           ;main.c: 100: ADCON2bits.ACQT0 = 0;
   704  00083E  96C0               	bcf	4032,3,c	;volatile
   705                           
   706                           ;main.c: 101: ADCON2bits.ADCS2 = 1;
   707  000840  84C0               	bsf	4032,2,c	;volatile
   708                           
   709                           ;main.c: 102: ADCON2bits.ADCS1 = 0;
   710  000842  92C0               	bcf	4032,1,c	;volatile
   711                           
   712                           ;main.c: 103: ADCON2bits.ADCS0 = 1;
   713  000844  80C0               	bsf	4032,0,c	;volatile
   714                           
   715                           ;main.c: 105: PIE1bits.ADIE = 1;
   716  000846  8C9D               	bsf	3997,6,c	;volatile
   717                           
   718                           ;main.c: 106: PIR1bits.ADIF = 0;
   719  000848  9C9E               	bcf	3998,6,c	;volatile
   720                           
   721                           ;main.c: 107: IPR1bits.ADIP = 1;
   722  00084A  8C9F               	bsf	3999,6,c	;volatile
   723                           
   724                           ;main.c: 111: T0CONbits.TMR0ON = 1;
   725  00084C  8ED5               	bsf	4053,7,c	;volatile
   726                           
   727                           ;main.c: 112: T0CONbits.T08BIT = 1;
   728  00084E  8CD5               	bsf	4053,6,c	;volatile
   729                           
   730                           ;main.c: 113: T0CONbits.T0CS = 0;
   731  000850  9AD5               	bcf	4053,5,c	;volatile
   732                           
   733                           ;main.c: 114: T0CONbits.PSA = 0;
   734  000852  96D5               	bcf	4053,3,c	;volatile
   735                           
   736                           ;main.c: 115: T0CONbits.T0PS2 = 0;
   737  000854  94D5               	bcf	4053,2,c	;volatile
   738                           
   739                           ;main.c: 116: T0CONbits.T0PS1 = 1;
   740  000856  82D5               	bsf	4053,1,c	;volatile
   741                           
   742                           ;main.c: 117: T0CONbits.T0PS0 = 1;
   743  000858  80D5               	bsf	4053,0,c	;volatile
   744                           
   745                           ;main.c: 119: INTCONbits.TMR0IE = 1;
   746  00085A  8AF2               	bsf	intcon,5,c	;volatile
   747                           
   748                           ;main.c: 120: INTCONbits.TMR0IF = 0;
   749  00085C  94F2               	bcf	intcon,2,c	;volatile
   750                           
   751                           ;main.c: 121: INTCON2bits.TMR0IP = 0;
   752  00085E  94F1               	bcf	intcon2,2,c	;volatile
   753                           
   754                           ;main.c: 127: TMR0L = 0x30;
   755  000860  0E30               	movlw	48
   756  000862  6ED6               	movwf	4054,c	;volatile
   757                           
   758                           ;main.c: 131: INTCON2bits.RBPU = 0;
   759  000864  9EF1               	bcf	intcon2,7,c	;volatile
   760                           
   761                           ;main.c: 134: INTCON3bits.INT1E = 1;
   762  000866  86F0               	bsf	intcon3,3,c	;volatile
   763                           
   764                           ;main.c: 135: INTCON3bits.INT1IF = 0;
   765  000868  90F0               	bcf	intcon3,0,c	;volatile
   766                           
   767                           ;main.c: 136: INTCON3bits.INT1IP = 0;
   768  00086A  9CF0               	bcf	intcon3,6,c	;volatile
   769                           
   770                           ;main.c: 137: INTCON2bits.INTEDG1 = 0;
   771  00086C  9AF1               	bcf	intcon2,5,c	;volatile
   772                           
   773                           ;main.c: 140: INTCON3bits.INT2IE = 1;
   774  00086E  88F0               	bsf	intcon3,4,c	;volatile
   775                           
   776                           ;main.c: 141: INTCON3bits.INT2IF = 0;
   777  000870  92F0               	bcf	intcon3,1,c	;volatile
   778                           
   779                           ;main.c: 142: INTCON3bits.INT2IP = 0;
   780  000872  9EF0               	bcf	intcon3,7,c	;volatile
   781                           
   782                           ;main.c: 143: INTCON2bits.INTEDG2 = 0;
   783  000874  98F1               	bcf	intcon2,4,c	;volatile
   784                           
   785                           ;main.c: 149: T2CONbits.TMR2ON = 1;
   786  000876  84CA               	bsf	4042,2,c	;volatile
   787                           
   788                           ;main.c: 150: T2CONbits.T2CKPS1 = 1;
   789  000878  82CA               	bsf	4042,1,c	;volatile
   790                           
   791                           ;main.c: 152: PR2 = 47;
   792  00087A  0E2F               	movlw	47
   793  00087C  6ECB               	movwf	4043,c	;volatile
   794                           
   795                           ;main.c: 153: CCP2CONbits.CCP2M3 = 1;
   796  00087E  86BA               	bsf	4026,3,c	;volatile
   797                           
   798                           ;main.c: 154: CCP2CONbits.CCP2M2 = 1;
   799  000880  84BA               	bsf	4026,2,c	;volatile
   800                           
   801                           ;main.c: 157: CCP1CONbits.CCP1M3 = 1;
   802  000882  86BD               	bsf	4029,3,c	;volatile
   803                           
   804                           ;main.c: 158: CCP1CONbits.CCP1M2 = 1;
   805  000884  84BD               	bsf	4029,2,c	;volatile
   806                           
   807                           ;main.c: 159: CCP1CONbits.CCP1M1 = 0;
   808  000886  92BD               	bcf	4029,1,c	;volatile
   809                           
   810                           ;main.c: 160: CCP1CONbits.CCP1M0 = 0;
   811  000888  90BD               	bcf	4029,0,c	;volatile
   812                           
   813                           ;main.c: 162: attRazaoCiclicaCCP1 = 1;
   814  00088A  0E00               	movlw	0
   815  00088C  0100               	movlb	0	; () banked
   816  00088E  6FBB               	movwf	(_attRazaoCiclicaCCP1+1)& (0+255),b
   817  000890  0E01               	movlw	1
   818  000892  6FBA               	movwf	_attRazaoCiclicaCCP1& (0+255),b
   819                           
   820                           ;main.c: 163: attRazaoCiclicaCCP2 = 1;
   821  000894  0E00               	movlw	0
   822  000896  6FB9               	movwf	(_attRazaoCiclicaCCP2+1)& (0+255),b
   823  000898  0E01               	movlw	1
   824  00089A  6FB8               	movwf	_attRazaoCiclicaCCP2& (0+255),b
   825                           
   826                           ; BSR set to: 0
   827                           ;main.c: 165: OpenXLCD(0b00101100 & 0b00111000);
   828  00089C  0E28               	movlw	40
   829  00089E  EC89  F009         	call	_OpenXLCD
   830                           
   831                           ;main.c: 166: WriteCmdXLCD(0x01);
   832  0008A2  0E01               	movlw	1
   833  0008A4  EC03  F00B         	call	_WriteCmdXLCD
   834                           
   835                           ;main.c: 167: WriteCmdXLCD(0x0C);
   836  0008A8  0E0C               	movlw	12
   837  0008AA  EC03  F00B         	call	_WriteCmdXLCD
   838                           
   839                           ;main.c: 168: _delay((unsigned long)((2)*(20000000/4000.0)));
   840  0008AE  0E0D               	movlw	13
   841  0008B0  0100               	movlb	0	; () banked
   842  0008B2  6F92               	movwf	??_main& (0+255),b
   843  0008B4  0EFB               	movlw	251
   844  0008B6                     u2137:
   845  0008B6  2EE8               	decfsz	wreg,f,c
   846  0008B8  D7FE               	bra	u2137
   847  0008BA  2F92               	decfsz	??_main& (0+255),f,b
   848  0008BC  D7FC               	bra	u2137
   849  0008BE  D000               	nop2	
   850  0008C0                     
   851                           ;main.c: 171: if(aumenta){
   852  0008C0  0100               	movlb	0	; () banked
   853  0008C2  51A7               	movf	_aumenta& (0+255),w,b
   854  0008C4  11A8               	iorwf	(_aumenta+1)& (0+255),w,b
   855  0008C6  B4D8               	btfsc	status,2,c
   856  0008C8  D011               	goto	l206
   857                           
   858                           ; BSR set to: 0
   859                           ;main.c: 172: aumenta = 0;
   860  0008CA  0E00               	movlw	0
   861  0008CC  6FA8               	movwf	(_aumenta+1)& (0+255),b
   862  0008CE  0E00               	movlw	0
   863  0008D0  6FA7               	movwf	_aumenta& (0+255),b
   864                           
   865                           ; BSR set to: 0
   866                           ;main.c: 173: if(temperaturaReferencia<50){
   867  0008D2  51B3               	movf	(_temperaturaReferencia+1)& (0+255),w,b
   868  0008D4  E107               	bnz	l2608
   869  0008D6  0E32               	movlw	50
   870  0008D8  5DB2               	subwf	_temperaturaReferencia& (0+255),w,b
   871  0008DA  B0D8               	btfsc	status,0,c
   872  0008DC  D003               	goto	l205
   873                           
   874                           ; BSR set to: 0
   875                           ;main.c: 174: temperaturaReferencia++;
   876  0008DE  4BB2               	infsnz	_temperaturaReferencia& (0+255),f,b
   877  0008E0  2BB3               	incf	(_temperaturaReferencia+1)& (0+255),f,b
   878                           
   879                           ;main.c: 175: }else{
   880  0008E2  D004               	goto	l206
   881  0008E4                     l205:
   882  0008E4                     l2608:
   883                           
   884                           ; BSR set to: 0
   885                           ;main.c: 176: temperaturaReferencia = 50;
   886  0008E4  0E00               	movlw	0
   887  0008E6  6FB3               	movwf	(_temperaturaReferencia+1)& (0+255),b
   888  0008E8  0E32               	movlw	50
   889  0008EA  6FB2               	movwf	_temperaturaReferencia& (0+255),b
   890  0008EC                     l206:
   891                           
   892                           ; BSR set to: 0
   893                           ;main.c: 177: }
   894                           ;main.c: 178: }
   895                           ;main.c: 179: if(diminui){
   896                           
   897                           ; BSR set to: 0
   898                           
   899                           ; BSR set to: 0
   900  0008EC  51A5               	movf	_diminui& (0+255),w,b
   901  0008EE  11A6               	iorwf	(_diminui+1)& (0+255),w,b
   902  0008F0  B4D8               	btfsc	status,2,c
   903  0008F2  D012               	goto	l209
   904                           
   905                           ; BSR set to: 0
   906                           ;main.c: 180: diminui = 0;
   907  0008F4  0E00               	movlw	0
   908  0008F6  6FA6               	movwf	(_diminui+1)& (0+255),b
   909  0008F8  0E00               	movlw	0
   910  0008FA  6FA5               	movwf	_diminui& (0+255),b
   911                           
   912                           ; BSR set to: 0
   913                           ;main.c: 181: if(temperaturaReferencia>35){
   914  0008FC  51B3               	movf	(_temperaturaReferencia+1)& (0+255),w,b
   915  0008FE  E104               	bnz	u2040
   916  000900  0E24               	movlw	36
   917  000902  5DB2               	subwf	_temperaturaReferencia& (0+255),w,b
   918  000904  A0D8               	btfss	status,0,c
   919  000906  D004               	goto	l208
   920  000908                     u2040:
   921                           
   922                           ; BSR set to: 0
   923                           ;main.c: 182: temperaturaReferencia--;
   924  000908  07B2               	decf	_temperaturaReferencia& (0+255),f,b
   925  00090A  A0D8               	btfss	status,0,c
   926  00090C  07B3               	decf	(_temperaturaReferencia+1)& (0+255),f,b
   927                           
   928                           ;main.c: 183: }else{
   929  00090E  D004               	goto	l209
   930  000910                     l208:
   931                           
   932                           ; BSR set to: 0
   933                           ;main.c: 184: temperaturaReferencia = 35;
   934                           
   935                           ; BSR set to: 0
   936  000910  0E00               	movlw	0
   937  000912  6FB3               	movwf	(_temperaturaReferencia+1)& (0+255),b
   938  000914  0E23               	movlw	35
   939  000916  6FB2               	movwf	_temperaturaReferencia& (0+255),b
   940  000918                     l209:
   941                           
   942                           ; BSR set to: 0
   943                           ;main.c: 185: }
   944                           ;main.c: 186: }
   945                           ;main.c: 187: if(conversor_temp){
   946                           
   947                           ; BSR set to: 0
   948                           
   949                           ; BSR set to: 0
   950  000918  51A1               	movf	_conversor_temp& (0+255),w,b
   951  00091A  11A2               	iorwf	(_conversor_temp+1)& (0+255),w,b
   952  00091C  B4D8               	btfsc	status,2,c
   953  00091E  D028               	goto	l210
   954                           
   955                           ; BSR set to: 0
   956                           ;main.c: 188: conversor_temp = 0;
   957  000920  0E00               	movlw	0
   958  000922  6FA2               	movwf	(_conversor_temp+1)& (0+255),b
   959  000924  0E00               	movlw	0
   960  000926  6FA1               	movwf	_conversor_temp& (0+255),b
   961                           
   962                           ; BSR set to: 0
   963                           ;main.c: 189: valorLido1 = 256 * ADRESH + ADRESL;
   964  000928  50C4               	movf	4036,w,c	;volatile
   965  00092A  6F93               	movwf	(??_main+1)& (0+255),b
   966  00092C  6B92               	clrf	??_main& (0+255),b
   967  00092E  50C3               	movf	4035,w,c	;volatile
   968  000930  2592               	addwf	??_main& (0+255),w,b
   969  000932  6FAB               	movwf	_valorLido1& (0+255),b
   970  000934  0E00               	movlw	0
   971  000936  2193               	addwfc	(??_main+1)& (0+255),w,b
   972  000938  6FAC               	movwf	(_valorLido1+1)& (0+255),b
   973                           
   974                           ; BSR set to: 0
   975                           ;main.c: 190: temperaturaAtual = valorLido1 * 0.4887585533;
   976  00093A  C0AB  F030         	movff	_valorLido1,___lwtoft@c
   977  00093E  C0AC  F031         	movff	_valorLido1+1,___lwtoft@c+1
   978  000942  EC6C  F00B         	call	___lwtoft	;wreg free
   979  000946  C030  F060         	movff	?___lwtoft,___ftmul@f1
   980  00094A  C031  F061         	movff	?___lwtoft+1,___ftmul@f1+1
   981  00094E  C032  F062         	movff	?___lwtoft+2,___ftmul@f1+2
   982  000952  0E3F               	movlw	63
   983  000954  0100               	movlb	0	; () banked
   984  000956  6F63               	movwf	___ftmul@f2& (0+255),b
   985  000958  0EFA               	movlw	250
   986  00095A  6F64               	movwf	(___ftmul@f2+1)& (0+255),b
   987  00095C  0E3E               	movlw	62
   988  00095E  6F65               	movwf	(___ftmul@f2+2)& (0+255),b
   989  000960  ECDF  F007         	call	___ftmul	;wreg free
   990  000964  C060  F09A         	movff	?___ftmul,_temperaturaAtual
   991  000968  C061  F09B         	movff	?___ftmul+1,_temperaturaAtual+1
   992  00096C  C062  F09C         	movff	?___ftmul+2,_temperaturaAtual+2
   993  000970                     l210:
   994                           
   995                           ;main.c: 191: }
   996                           ;main.c: 192: if(potencia){
   997  000970  0100               	movlb	0	; () banked
   998  000972  519D               	movf	_potencia& (0+255),w,b
   999  000974  119E               	iorwf	(_potencia+1)& (0+255),w,b
  1000  000976  B4D8               	btfsc	status,2,c
  1001  000978  D03F               	goto	l211
  1002                           
  1003                           ; BSR set to: 0
  1004                           ;main.c: 193: potencia = 0;
  1005  00097A  0E00               	movlw	0
  1006  00097C  6F9E               	movwf	(_potencia+1)& (0+255),b
  1007  00097E  0E00               	movlw	0
  1008  000980  6F9D               	movwf	_potencia& (0+255),b
  1009                           
  1010                           ; BSR set to: 0
  1011                           ;main.c: 194: valorLido2 = 256 * ADRESH + ADRESL;
  1012  000982  50C4               	movf	4036,w,c	;volatile
  1013  000984  6F93               	movwf	(??_main+1)& (0+255),b
  1014  000986  6B92               	clrf	??_main& (0+255),b
  1015  000988  50C3               	movf	4035,w,c	;volatile
  1016  00098A  2592               	addwf	??_main& (0+255),w,b
  1017  00098C  6FA9               	movwf	_valorLido2& (0+255),b
  1018  00098E  0E00               	movlw	0
  1019  000990  2193               	addwfc	(??_main+1)& (0+255),w,b
  1020  000992  6FAA               	movwf	(_valorLido2+1)& (0+255),b
  1021                           
  1022                           ; BSR set to: 0
  1023                           ;main.c: 195: voltage = 70 + (valorLido2 * 0.0293255132);
  1024  000994  0E3C               	movlw	60
  1025  000996  6F63               	movwf	___ftmul@f2& (0+255),b
  1026  000998  0EF0               	movlw	240
  1027  00099A  6F64               	movwf	(___ftmul@f2+1)& (0+255),b
  1028  00099C  0E3C               	movlw	60
  1029  00099E  6F65               	movwf	(___ftmul@f2+2)& (0+255),b
  1030  0009A0  C0A9  F030         	movff	_valorLido2,___lwtoft@c
  1031  0009A4  C0AA  F031         	movff	_valorLido2+1,___lwtoft@c+1
  1032  0009A8  EC6C  F00B         	call	___lwtoft	;wreg free
  1033  0009AC  C030  F060         	movff	?___lwtoft,___ftmul@f1
  1034  0009B0  C031  F061         	movff	?___lwtoft+1,___ftmul@f1+1
  1035  0009B4  C032  F062         	movff	?___lwtoft+2,___ftmul@f1+2
  1036  0009B8  ECDF  F007         	call	___ftmul	;wreg free
  1037  0009BC  C060  F06C         	movff	?___ftmul,___ftadd@f1
  1038  0009C0  C061  F06D         	movff	?___ftmul+1,___ftadd@f1+1
  1039  0009C4  C062  F06E         	movff	?___ftmul+2,___ftadd@f1+2
  1040  0009C8  0E00               	movlw	0
  1041  0009CA  0100               	movlb	0	; () banked
  1042  0009CC  6F6F               	movwf	___ftadd@f2& (0+255),b
  1043  0009CE  0E8C               	movlw	140
  1044  0009D0  6F70               	movwf	(___ftadd@f2+1)& (0+255),b
  1045  0009D2  0E42               	movlw	66
  1046  0009D4  6F71               	movwf	(___ftadd@f2+2)& (0+255),b
  1047  0009D6  EC8C  F006         	call	___ftadd	;wreg free
  1048  0009DA  C06C  F0AF         	movff	?___ftadd,_voltage
  1049  0009DE  C06D  F0B0         	movff	?___ftadd+1,_voltage+1
  1050  0009E2  C06E  F0B1         	movff	?___ftadd+2,_voltage+2
  1051                           
  1052                           ;main.c: 196: attRazaoCiclicaCCP2 = 1;
  1053  0009E6  0E00               	movlw	0
  1054  0009E8  0100               	movlb	0	; () banked
  1055  0009EA  6FB9               	movwf	(_attRazaoCiclicaCCP2+1)& (0+255),b
  1056  0009EC  0E01               	movlw	1
  1057  0009EE  6FB8               	movwf	_attRazaoCiclicaCCP2& (0+255),b
  1058                           
  1059                           ; BSR set to: 0
  1060                           ;main.c: 197: funcdisp = 1;
  1061  0009F0  0E00               	movlw	0
  1062  0009F2  6FA4               	movwf	(_funcdisp+1)& (0+255),b
  1063  0009F4  0E01               	movlw	1
  1064  0009F6  6FA3               	movwf	_funcdisp& (0+255),b
  1065  0009F8                     l211:
  1066                           
  1067                           ; BSR set to: 0
  1068                           ;main.c: 198: }
  1069                           ;main.c: 199: if(attRazaoCiclicaCCP2){
  1070                           
  1071                           ; BSR set to: 0
  1072  0009F8  51B8               	movf	_attRazaoCiclicaCCP2& (0+255),w,b
  1073  0009FA  11B9               	iorwf	(_attRazaoCiclicaCCP2+1)& (0+255),w,b
  1074  0009FC  B4D8               	btfsc	status,2,c
  1075  0009FE  D051               	goto	l212
  1076                           
  1077                           ; BSR set to: 0
  1078                           ;main.c: 200: attRazaoCiclicaCCP2 = 0;
  1079  000A00  0E00               	movlw	0
  1080  000A02  6FB9               	movwf	(_attRazaoCiclicaCCP2+1)& (0+255),b
  1081  000A04  0E00               	movlw	0
  1082  000A06  6FB8               	movwf	_attRazaoCiclicaCCP2& (0+255),b
  1083                           
  1084                           ; BSR set to: 0
  1085                           ;main.c: 201: int dutyCicle = 4 * 48 * voltage / 100;
  1086  000A08  0E00               	movlw	0
  1087  000A0A  6F6F               	movwf	___ftdiv@f2& (0+255),b
  1088  000A0C  0EC8               	movlw	200
  1089  000A0E  6F70               	movwf	(___ftdiv@f2+1)& (0+255),b
  1090  000A10  0E42               	movlw	66
  1091  000A12  6F71               	movwf	(___ftdiv@f2+2)& (0+255),b
  1092  000A14  0E00               	movlw	0
  1093  000A16  6F63               	movwf	___ftmul@f2& (0+255),b
  1094  000A18  0E40               	movlw	64
  1095  000A1A  6F64               	movwf	(___ftmul@f2+1)& (0+255),b
  1096  000A1C  0E43               	movlw	67
  1097  000A1E  6F65               	movwf	(___ftmul@f2+2)& (0+255),b
  1098  000A20  C0AF  F060         	movff	_voltage,___ftmul@f1
  1099  000A24  C0B0  F061         	movff	_voltage+1,___ftmul@f1+1
  1100  000A28  C0B1  F062         	movff	_voltage+2,___ftmul@f1+2
  1101  000A2C  ECDF  F007         	call	___ftmul	;wreg free
  1102  000A30  C060  F06C         	movff	?___ftmul,___ftdiv@f1
  1103  000A34  C061  F06D         	movff	?___ftmul+1,___ftdiv@f1+1
  1104  000A38  C062  F06E         	movff	?___ftmul+2,___ftdiv@f1+2
  1105  000A3C  EC5A  F008         	call	___ftdiv	;wreg free
  1106  000A40  C06C  F07B         	movff	?___ftdiv,___fttol@f1
  1107  000A44  C06D  F07C         	movff	?___ftdiv+1,___fttol@f1+1
  1108  000A48  C06E  F07D         	movff	?___ftdiv+2,___fttol@f1+2
  1109  000A4C  EC63  F007         	call	___fttol	;wreg free
  1110  000A50  C07B  F094         	movff	?___fttol,main@dutyCicle
  1111  000A54  C07C  F095         	movff	?___fttol+1,main@dutyCicle+1
  1112                           
  1113                           ;main.c: 202: CCPR2L = (char)(dutyCicle >> 2);
  1114  000A58  C094  F092         	movff	main@dutyCicle,??_main
  1115  000A5C  C095  F093         	movff	main@dutyCicle+1,??_main+1
  1116  000A60  0100               	movlb	0	; () banked
  1117  000A62  3593               	rlcf	(??_main+1)& (0+255),w,b
  1118  000A64  3393               	rrcf	(??_main+1)& (0+255),f,b
  1119  000A66  3392               	rrcf	??_main& (0+255),f,b
  1120  000A68  3593               	rlcf	(??_main+1)& (0+255),w,b
  1121  000A6A  3393               	rrcf	(??_main+1)& (0+255),f,b
  1122  000A6C  3392               	rrcf	??_main& (0+255),f,b
  1123  000A6E  5192               	movf	??_main& (0+255),w,b
  1124  000A70  6EBB               	movwf	4027,c	;volatile
  1125                           
  1126                           ; BSR set to: 0
  1127                           ;main.c: 203: CCP2CONbits.DC2B1 = (dutyCicle >> 1) % 2;
  1128  000A72  3595               	rlcf	(main@dutyCicle+1)& (0+255),w,b
  1129  000A74  3195               	rrcf	(main@dutyCicle+1)& (0+255),w,b
  1130  000A76  6F93               	movwf	(??_main+1)& (0+255),b
  1131  000A78  3194               	rrcf	main@dutyCicle& (0+255),w,b
  1132  000A7A  6F92               	movwf	??_main& (0+255),b
  1133  000A7C  0E01               	movlw	1
  1134  000A7E  1792               	andwf	??_main& (0+255),f,b
  1135  000A80  3B92               	swapf	??_main& (0+255),f,b
  1136  000A82  4792               	rlncf	??_main& (0+255),f,b
  1137  000A84  50BA               	movf	4026,w,c	;volatile
  1138  000A86  1992               	xorwf	??_main& (0+255),w,b
  1139  000A88  0BDF               	andlw	-33
  1140  000A8A  1992               	xorwf	??_main& (0+255),w,b
  1141  000A8C  6EBA               	movwf	4026,c	;volatile
  1142                           
  1143                           ; BSR set to: 0
  1144                           ;main.c: 204: CCP2CONbits.DC2B0 = dutyCicle % 2;
  1145  000A8E  C094  F092         	movff	main@dutyCicle,??_main
  1146  000A92  0E01               	movlw	1
  1147  000A94  1792               	andwf	??_main& (0+255),f,b
  1148  000A96  3B92               	swapf	??_main& (0+255),f,b
  1149  000A98  50BA               	movf	4026,w,c	;volatile
  1150  000A9A  1992               	xorwf	??_main& (0+255),w,b
  1151  000A9C  0BEF               	andlw	-17
  1152  000A9E  1992               	xorwf	??_main& (0+255),w,b
  1153  000AA0  6EBA               	movwf	4026,c	;volatile
  1154  000AA2                     l212:
  1155                           
  1156                           ; BSR set to: 0
  1157                           ;main.c: 205: }
  1158                           ;main.c: 207: if(attRazaoCiclicaCCP1){
  1159                           
  1160                           ; BSR set to: 0
  1161  000AA2  51BA               	movf	_attRazaoCiclicaCCP1& (0+255),w,b
  1162  000AA4  11BB               	iorwf	(_attRazaoCiclicaCCP1+1)& (0+255),w,b
  1163  000AA6  B4D8               	btfsc	status,2,c
  1164  000AA8  D041               	goto	l213
  1165                           
  1166                           ; BSR set to: 0
  1167                           ;main.c: 208: attRazaoCiclicaCCP1 = 0;
  1168  000AAA  0E00               	movlw	0
  1169  000AAC  6FBB               	movwf	(_attRazaoCiclicaCCP1+1)& (0+255),b
  1170  000AAE  0E00               	movlw	0
  1171  000AB0  6FBA               	movwf	_attRazaoCiclicaCCP1& (0+255),b
  1172                           
  1173                           ; BSR set to: 0
  1174                           ;main.c: 209: int dutyCicle = 4 * 48 * razaoCiclicaCCP1 / 100;
  1175  000AB2  C0B6  F028         	movff	_razaoCiclicaCCP1,___wmul@multiplier
  1176  000AB6  C0B7  F029         	movff	_razaoCiclicaCCP1+1,___wmul@multiplier+1
  1177  000ABA  0E00               	movlw	0
  1178  000ABC  6E2B               	movwf	___wmul@multiplicand+1,c
  1179  000ABE  0EC0               	movlw	192
  1180  000AC0  6E2A               	movwf	___wmul@multiplicand,c
  1181  000AC2  EC59  F00B         	call	___wmul	;wreg free
  1182  000AC6  C028  F02E         	movff	?___wmul,___lwdiv@dividend
  1183  000ACA  C029  F02F         	movff	?___wmul+1,___lwdiv@dividend+1
  1184  000ACE  0E00               	movlw	0
  1185  000AD0  6E31               	movwf	___lwdiv@divisor+1,c
  1186  000AD2  0E64               	movlw	100
  1187  000AD4  6E30               	movwf	___lwdiv@divisor,c
  1188  000AD6  EC59  F00A         	call	___lwdiv	;wreg free
  1189  000ADA  C02E  F096         	movff	?___lwdiv,main@dutyCicle_983
  1190  000ADE  C02F  F097         	movff	?___lwdiv+1,main@dutyCicle_983+1
  1191                           
  1192                           ;main.c: 210: CCPR1L = (char)(dutyCicle >> 2);
  1193  000AE2  C096  F092         	movff	main@dutyCicle_983,??_main
  1194  000AE6  C097  F093         	movff	main@dutyCicle_983+1,??_main+1
  1195  000AEA  0100               	movlb	0	; () banked
  1196  000AEC  3593               	rlcf	(??_main+1)& (0+255),w,b
  1197  000AEE  3393               	rrcf	(??_main+1)& (0+255),f,b
  1198  000AF0  3392               	rrcf	??_main& (0+255),f,b
  1199  000AF2  3593               	rlcf	(??_main+1)& (0+255),w,b
  1200  000AF4  3393               	rrcf	(??_main+1)& (0+255),f,b
  1201  000AF6  3392               	rrcf	??_main& (0+255),f,b
  1202  000AF8  5192               	movf	??_main& (0+255),w,b
  1203  000AFA  6EBE               	movwf	4030,c	;volatile
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;main.c: 211: CCP1CONbits.DC1B1 = (dutyCicle >> 1) % 2;
  1207  000AFC  3597               	rlcf	(main@dutyCicle_983+1)& (0+255),w,b
  1208  000AFE  3197               	rrcf	(main@dutyCicle_983+1)& (0+255),w,b
  1209  000B00  6F93               	movwf	(??_main+1)& (0+255),b
  1210  000B02  3196               	rrcf	main@dutyCicle_983& (0+255),w,b
  1211  000B04  6F92               	movwf	??_main& (0+255),b
  1212  000B06  0E01               	movlw	1
  1213  000B08  1792               	andwf	??_main& (0+255),f,b
  1214  000B0A  3B92               	swapf	??_main& (0+255),f,b
  1215  000B0C  4792               	rlncf	??_main& (0+255),f,b
  1216  000B0E  50BD               	movf	4029,w,c	;volatile
  1217  000B10  1992               	xorwf	??_main& (0+255),w,b
  1218  000B12  0BDF               	andlw	-33
  1219  000B14  1992               	xorwf	??_main& (0+255),w,b
  1220  000B16  6EBD               	movwf	4029,c	;volatile
  1221                           
  1222                           ; BSR set to: 0
  1223                           ;main.c: 212: CCP1CONbits.DC1B0 = dutyCicle % 2;
  1224  000B18  C096  F092         	movff	main@dutyCicle_983,??_main
  1225  000B1C  0E01               	movlw	1
  1226  000B1E  1792               	andwf	??_main& (0+255),f,b
  1227  000B20  3B92               	swapf	??_main& (0+255),f,b
  1228  000B22  50BD               	movf	4029,w,c	;volatile
  1229  000B24  1992               	xorwf	??_main& (0+255),w,b
  1230  000B26  0BEF               	andlw	-17
  1231  000B28  1992               	xorwf	??_main& (0+255),w,b
  1232  000B2A  6EBD               	movwf	4029,c	;volatile
  1233  000B2C                     l213:
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;main.c: 213: }
  1237                           ;main.c: 214: if(controlador){
  1238                           
  1239                           ; BSR set to: 0
  1240  000B2C  519F               	movf	_controlador& (0+255),w,b
  1241  000B2E  11A0               	iorwf	(_controlador+1)& (0+255),w,b
  1242  000B30  B4D8               	btfsc	status,2,c
  1243  000B32  D057               	goto	l214
  1244                           
  1245                           ; BSR set to: 0
  1246                           ;main.c: 215: controlador = 0;
  1247  000B34  0E00               	movlw	0
  1248  000B36  6FA0               	movwf	(_controlador+1)& (0+255),b
  1249  000B38  0E00               	movlw	0
  1250  000B3A  6F9F               	movwf	_controlador& (0+255),b
  1251                           
  1252                           ; BSR set to: 0
  1253                           ;main.c: 217: int erro = temperaturaAtual - temperaturaReferencia;
  1254  000B3C  C09A  F06F         	movff	_temperaturaAtual,___ftadd@f2
  1255  000B40  C09B  F070         	movff	_temperaturaAtual+1,___ftadd@f2+1
  1256  000B44  C09C  F071         	movff	_temperaturaAtual+2,___ftadd@f2+2
  1257  000B48  C0B2  F030         	movff	_temperaturaReferencia,___lwtoft@c
  1258  000B4C  C0B3  F031         	movff	_temperaturaReferencia+1,___lwtoft@c+1
  1259  000B50  EC6C  F00B         	call	___lwtoft	;wreg free
  1260  000B54  C030  F033         	movff	?___lwtoft,___ftneg@f1
  1261  000B58  C031  F034         	movff	?___lwtoft+1,___ftneg@f1+1
  1262  000B5C  C032  F035         	movff	?___lwtoft+2,___ftneg@f1+2
  1263  000B60  EC7E  F00B         	call	___ftneg	;wreg free
  1264  000B64  C033  F06C         	movff	?___ftneg,___ftadd@f1
  1265  000B68  C034  F06D         	movff	?___ftneg+1,___ftadd@f1+1
  1266  000B6C  C035  F06E         	movff	?___ftneg+2,___ftadd@f1+2
  1267  000B70  EC8C  F006         	call	___ftadd	;wreg free
  1268  000B74  C06C  F07B         	movff	?___ftadd,___fttol@f1
  1269  000B78  C06D  F07C         	movff	?___ftadd+1,___fttol@f1+1
  1270  000B7C  C06E  F07D         	movff	?___ftadd+2,___fttol@f1+2
  1271  000B80  EC63  F007         	call	___fttol	;wreg free
  1272  000B84  C07B  F098         	movff	?___fttol,main@erro
  1273  000B88  C07C  F099         	movff	?___fttol+1,main@erro+1
  1274                           
  1275                           ;main.c: 219: controleProporcional = Kp * erro;
  1276  000B8C  C098  F028         	movff	main@erro,___wmul@multiplier
  1277  000B90  C099  F029         	movff	main@erro+1,___wmul@multiplier+1
  1278  000B94  C0B4  F02A         	movff	_Kp,___wmul@multiplicand
  1279  000B98  C0B5  F02B         	movff	_Kp+1,___wmul@multiplicand+1
  1280  000B9C  EC59  F00B         	call	___wmul	;wreg free
  1281  000BA0  C028  F0AD         	movff	?___wmul,_controleProporcional
  1282  000BA4  C029  F0AE         	movff	?___wmul+1,_controleProporcional+1
  1283                           
  1284                           ;main.c: 221: if(erro > 0){
  1285  000BA8  0100               	movlb	0	; () banked
  1286  000BAA  BF99               	btfsc	(main@erro+1)& (0+255),7,b
  1287  000BAC  D00B               	goto	l215
  1288  000BAE  5199               	movf	(main@erro+1)& (0+255),w,b
  1289  000BB0  E103               	bnz	u2100
  1290  000BB2  0598               	decf	main@erro& (0+255),w,b
  1291  000BB4  A0D8               	btfss	status,0,c
  1292  000BB6  D006               	goto	l215
  1293  000BB8                     u2100:
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;main.c: 222: razaoCiclicaCCP1 = controleProporcional + 20;
  1297  000BB8  0E14               	movlw	20
  1298  000BBA  25AD               	addwf	_controleProporcional& (0+255),w,b
  1299  000BBC  6FB6               	movwf	_razaoCiclicaCCP1& (0+255),b
  1300  000BBE  0E00               	movlw	0
  1301  000BC0  21AE               	addwfc	(_controleProporcional+1)& (0+255),w,b
  1302  000BC2  6FB7               	movwf	(_razaoCiclicaCCP1+1)& (0+255),b
  1303  000BC4                     l215:
  1304                           
  1305                           ; BSR set to: 0
  1306                           ;main.c: 223: }
  1307                           ;main.c: 224: if(erro <= 0){
  1308  000BC4  BF99               	btfsc	(main@erro+1)& (0+255),7,b
  1309  000BC6  D005               	goto	u2110
  1310  000BC8  5199               	movf	(main@erro+1)& (0+255),w,b
  1311  000BCA  E107               	bnz	l216
  1312  000BCC  0598               	decf	main@erro& (0+255),w,b
  1313  000BCE  B0D8               	btfsc	status,0,c
  1314  000BD0  D004               	goto	l216
  1315  000BD2                     u2110:
  1316                           
  1317                           ; BSR set to: 0
  1318                           ;main.c: 225: razaoCiclicaCCP1 = 20;
  1319  000BD2  0E00               	movlw	0
  1320  000BD4  6FB7               	movwf	(_razaoCiclicaCCP1+1)& (0+255),b
  1321  000BD6  0E14               	movlw	20
  1322  000BD8  6FB6               	movwf	_razaoCiclicaCCP1& (0+255),b
  1323  000BDA                     l216:
  1324                           
  1325                           ; BSR set to: 0
  1326                           ;main.c: 226: }
  1327                           ;main.c: 228: attRazaoCiclicaCCP1 = 1;
  1328  000BDA  0E00               	movlw	0
  1329  000BDC  6FBB               	movwf	(_attRazaoCiclicaCCP1+1)& (0+255),b
  1330  000BDE  0E01               	movlw	1
  1331  000BE0  6FBA               	movwf	_attRazaoCiclicaCCP1& (0+255),b
  1332  000BE2                     l214:
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;main.c: 229: }
  1336                           ;main.c: 230: if(funcdisp){
  1337                           
  1338                           ; BSR set to: 0
  1339  000BE2  51A3               	movf	_funcdisp& (0+255),w,b
  1340  000BE4  11A4               	iorwf	(_funcdisp+1)& (0+255),w,b
  1341  000BE6  B4D8               	btfsc	status,2,c
  1342  000BE8  D66B               	goto	l203
  1343                           
  1344                           ; BSR set to: 0
  1345                           ;main.c: 231: funcdisp = 0;
  1346  000BEA  0E00               	movlw	0
  1347  000BEC  6FA4               	movwf	(_funcdisp+1)& (0+255),b
  1348  000BEE  0E00               	movlw	0
  1349  000BF0  6FA3               	movwf	_funcdisp& (0+255),b
  1350                           
  1351                           ; BSR set to: 0
  1352                           ;main.c: 232: WriteCmdXLCD(0x80);
  1353  000BF2  0E80               	movlw	128
  1354  000BF4  EC03  F00B         	call	_WriteCmdXLCD
  1355                           
  1356                           ;main.c: 233: putrsXLCD("Tref:");
  1357  000BF8  0E01               	movlw	low STR_1
  1358  000BFA  6E29               	movwf	putrsXLCD@buffer,c
  1359  000BFC  0E08               	movlw	high STR_1
  1360  000BFE  6E2A               	movwf	putrsXLCD@buffer+1,c
  1361  000C00  EC3F  F00B         	call	_putrsXLCD	;wreg free
  1362                           
  1363                           ;main.c: 234: WriteDataXLCD(0x30 + (temperaturaReferencia/10));
  1364  000C04  C0B2  F02E         	movff	_temperaturaReferencia,___lwdiv@dividend
  1365  000C08  C0B3  F02F         	movff	_temperaturaReferencia+1,___lwdiv@dividend+1
  1366  000C0C  0E00               	movlw	0
  1367  000C0E  6E31               	movwf	___lwdiv@divisor+1,c
  1368  000C10  0E0A               	movlw	10
  1369  000C12  6E30               	movwf	___lwdiv@divisor,c
  1370  000C14  EC59  F00A         	call	___lwdiv	;wreg free
  1371  000C18  502E               	movf	?___lwdiv,w,c
  1372  000C1A  0F30               	addlw	48
  1373  000C1C  ECE4  F00A         	call	_WriteDataXLCD
  1374                           
  1375                           ;main.c: 235: WriteDataXLCD(0x30 + (temperaturaReferencia%10));
  1376  000C20  C0B2  F028         	movff	_temperaturaReferencia,___lwmod@dividend
  1377  000C24  C0B3  F029         	movff	_temperaturaReferencia+1,___lwmod@dividend+1
  1378  000C28  0E00               	movlw	0
  1379  000C2A  6E2B               	movwf	___lwmod@divisor+1,c
  1380  000C2C  0E0A               	movlw	10
  1381  000C2E  6E2A               	movwf	___lwmod@divisor,c
  1382  000C30  ECA3  F00A         	call	___lwmod	;wreg free
  1383  000C34  5028               	movf	?___lwmod,w,c
  1384  000C36  0F30               	addlw	48
  1385  000C38  ECE4  F00A         	call	_WriteDataXLCD
  1386                           
  1387                           ;main.c: 236: WriteCmdXLCD(0xC0);
  1388  000C3C  0EC0               	movlw	192
  1389  000C3E  EC03  F00B         	call	_WriteCmdXLCD
  1390                           
  1391                           ;main.c: 238: WriteCmdXLCD(0x88);
  1392  000C42  0E88               	movlw	136
  1393  000C44  EC03  F00B         	call	_WriteCmdXLCD
  1394                           
  1395                           ;main.c: 239: putrsXLCD("PW:");
  1396  000C48  0E0D               	movlw	low STR_2
  1397  000C4A  6E29               	movwf	putrsXLCD@buffer,c
  1398  000C4C  0E08               	movlw	high STR_2
  1399  000C4E  6E2A               	movwf	putrsXLCD@buffer+1,c
  1400  000C50  EC3F  F00B         	call	_putrsXLCD	;wreg free
  1401                           
  1402                           ;main.c: 240: WriteDataXLCD (0x30 + razaoCiclicaCCP1/10);
  1403  000C54  C0B6  F02E         	movff	_razaoCiclicaCCP1,___lwdiv@dividend
  1404  000C58  C0B7  F02F         	movff	_razaoCiclicaCCP1+1,___lwdiv@dividend+1
  1405  000C5C  0E00               	movlw	0
  1406  000C5E  6E31               	movwf	___lwdiv@divisor+1,c
  1407  000C60  0E0A               	movlw	10
  1408  000C62  6E30               	movwf	___lwdiv@divisor,c
  1409  000C64  EC59  F00A         	call	___lwdiv	;wreg free
  1410  000C68  502E               	movf	?___lwdiv,w,c
  1411  000C6A  0F30               	addlw	48
  1412  000C6C  ECE4  F00A         	call	_WriteDataXLCD
  1413                           
  1414                           ;main.c: 241: WriteDataXLCD (0x30 + razaoCiclicaCCP1%10);
  1415  000C70  C0B6  F028         	movff	_razaoCiclicaCCP1,___lwmod@dividend
  1416  000C74  C0B7  F029         	movff	_razaoCiclicaCCP1+1,___lwmod@dividend+1
  1417  000C78  0E00               	movlw	0
  1418  000C7A  6E2B               	movwf	___lwmod@divisor+1,c
  1419  000C7C  0E0A               	movlw	10
  1420  000C7E  6E2A               	movwf	___lwmod@divisor,c
  1421  000C80  ECA3  F00A         	call	___lwmod	;wreg free
  1422  000C84  5028               	movf	?___lwmod,w,c
  1423  000C86  0F30               	addlw	48
  1424  000C88  ECE4  F00A         	call	_WriteDataXLCD
  1425                           
  1426                           ;main.c: 242: putrsXLCD ("%");
  1427  000C8C  0E11               	movlw	low STR_3
  1428  000C8E  6E29               	movwf	putrsXLCD@buffer,c
  1429  000C90  0E08               	movlw	high STR_3
  1430  000C92  6E2A               	movwf	putrsXLCD@buffer+1,c
  1431  000C94  EC3F  F00B         	call	_putrsXLCD	;wreg free
  1432                           
  1433                           ;main.c: 244: WriteCmdXLCD(0xC0);
  1434  000C98  0EC0               	movlw	192
  1435  000C9A  EC03  F00B         	call	_WriteCmdXLCD
  1436                           
  1437                           ;main.c: 245: putrsXLCD ("Temp:");
  1438  000C9E  0E07               	movlw	low STR_4
  1439  000CA0  6E29               	movwf	putrsXLCD@buffer,c
  1440  000CA2  0E08               	movlw	high STR_4
  1441  000CA4  6E2A               	movwf	putrsXLCD@buffer+1,c
  1442  000CA6  EC3F  F00B         	call	_putrsXLCD	;wreg free
  1443                           
  1444                           ;main.c: 246: WriteDataXLCD (0x30 + ((int)(temperaturaAtual))/10);
  1445  000CAA  C09A  F07B         	movff	_temperaturaAtual,___fttol@f1
  1446  000CAE  C09B  F07C         	movff	_temperaturaAtual+1,___fttol@f1+1
  1447  000CB2  C09C  F07D         	movff	_temperaturaAtual+2,___fttol@f1+2
  1448  000CB6  EC63  F007         	call	___fttol	;wreg free
  1449  000CBA  C07B  F08A         	movff	?___fttol,___awdiv@dividend
  1450  000CBE  C07C  F08B         	movff	?___fttol+1,___awdiv@dividend+1
  1451  000CC2  0E00               	movlw	0
  1452  000CC4  0100               	movlb	0	; () banked
  1453  000CC6  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  1454  000CC8  0E0A               	movlw	10
  1455  000CCA  6F8C               	movwf	___awdiv@divisor& (0+255),b
  1456  000CCC  ECDD  F009         	call	___awdiv	;wreg free
  1457  000CD0  0100               	movlb	0	; () banked
  1458  000CD2  518A               	movf	?___awdiv& (0+255),w,b
  1459  000CD4  0F30               	addlw	48
  1460  000CD6  ECE4  F00A         	call	_WriteDataXLCD
  1461                           
  1462                           ;main.c: 247: WriteDataXLCD (0x30 + ((int)(temperaturaAtual))%10);
  1463  000CDA  C09A  F07B         	movff	_temperaturaAtual,___fttol@f1
  1464  000CDE  C09B  F07C         	movff	_temperaturaAtual+1,___fttol@f1+1
  1465  000CE2  C09C  F07D         	movff	_temperaturaAtual+2,___fttol@f1+2
  1466  000CE6  EC63  F007         	call	___fttol	;wreg free
  1467  000CEA  C07B  F08A         	movff	?___fttol,___awmod@dividend
  1468  000CEE  C07C  F08B         	movff	?___fttol+1,___awmod@dividend+1
  1469  000CF2  0E00               	movlw	0
  1470  000CF4  0100               	movlb	0	; () banked
  1471  000CF6  6F8D               	movwf	(___awmod@divisor+1)& (0+255),b
  1472  000CF8  0E0A               	movlw	10
  1473  000CFA  6F8C               	movwf	___awmod@divisor& (0+255),b
  1474  000CFC  EC20  F00A         	call	___awmod	;wreg free
  1475  000D00  0100               	movlb	0	; () banked
  1476  000D02  518A               	movf	?___awmod& (0+255),w,b
  1477  000D04  0F30               	addlw	48
  1478  000D06  ECE4  F00A         	call	_WriteDataXLCD
  1479                           
  1480                           ;main.c: 248: putrsXLCD ("C");
  1481  000D0A  0E13               	movlw	low STR_5
  1482  000D0C  6E29               	movwf	putrsXLCD@buffer,c
  1483  000D0E  0E08               	movlw	high STR_5
  1484  000D10  6E2A               	movwf	putrsXLCD@buffer+1,c
  1485  000D12  EC3F  F00B         	call	_putrsXLCD	;wreg free
  1486  000D16  D5D4               	goto	l203
  1487  000D18                     __end_of_main:
  1488                           	opt stack 0
  1489                           tblptru	equ	0xFF8
  1490                           tblptrh	equ	0xFF7
  1491                           tblptrl	equ	0xFF6
  1492                           tablat	equ	0xFF5
  1493                           intcon	equ	0xFF2
  1494                           intcon2	equ	0xFF1
  1495                           intcon3	equ	0xFF0
  1496                           postinc0	equ	0xFEE
  1497                           wreg	equ	0xFE8
  1498                           postdec1	equ	0xFE5
  1499                           fsr1l	equ	0xFE1
  1500                           status	equ	0xFD8
  1501                           
  1502 ;; *************** function _putrsXLCD *****************
  1503 ;; Defined at:
  1504 ;;		line 533 in file "nxlcd.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  buffer          2   40[COMRAM] PTR const unsigned char 
  1507 ;;		 -> STR_5(2), STR_4(6), STR_3(2), STR_2(4), 
  1508 ;;		 -> STR_1(6), 
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;		None
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      void 
  1513 ;; Registers used:
  1514 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1520 ;;      Params:         2       0       0       0       0       0       0       0       0
  1521 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1522 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1523 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1524 ;;Total ram usage:        2 bytes
  1525 ;; Hardware stack levels used:    1
  1526 ;; Hardware stack levels required when called:    4
  1527 ;; This function calls:
  1528 ;;		_BusyXLCD
  1529 ;;		_WriteDataXLCD
  1530 ;; This function is called by:
  1531 ;;		_main
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           	psect	text1
  1536  00167E                     __ptext1:
  1537                           	opt stack 0
  1538  00167E                     _putrsXLCD:
  1539                           	opt stack 26
  1540                           
  1541                           ;nxlcd.c: 535: while(*buffer)
  1542                           
  1543                           ;incstack = 0
  1544  00167E  D00F               	goto	l84
  1545  001680                     
  1546                           ;nxlcd.c: 536: {
  1547                           ;nxlcd.c: 537: while(BusyXLCD());
  1548  001680  EC22  F00B         	call	_BusyXLCD	;wreg free
  1549  001684  0900               	iorlw	0
  1550  001686  A4D8               	btfss	status,2,c
  1551  001688  D7FB               	goto	l85
  1552                           
  1553                           ;nxlcd.c: 538: WriteDataXLCD(*buffer);
  1554  00168A  C029  FFF6         	movff	putrsXLCD@buffer,tblptrl
  1555  00168E  C02A  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  1556  001692                     	if	0	;tblptru may be non-zero
  1557  001692                     	endif
  1558  001692                     	if	0	;tblptru may be non-zero
  1559  001692                     	endif
  1560  001692  0008               	tblrd		*
  1561  001694  50F5               	movf	tablat,w,c
  1562  001696  ECE4  F00A         	call	_WriteDataXLCD
  1563                           
  1564                           ;nxlcd.c: 539: buffer++;
  1565  00169A  4A29               	infsnz	putrsXLCD@buffer,f,c
  1566  00169C  2A2A               	incf	putrsXLCD@buffer+1,f,c
  1567  00169E                     l84:
  1568  00169E  C029  FFF6         	movff	putrsXLCD@buffer,tblptrl
  1569  0016A2  C02A  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  1570  0016A6                     	if	0	;tblptru may be non-zero
  1571  0016A6                     	endif
  1572  0016A6                     	if	0	;tblptru may be non-zero
  1573  0016A6                     	endif
  1574  0016A6  0008               	tblrd		*
  1575  0016A8  50F5               	movf	tablat,w,c
  1576  0016AA  0900               	iorlw	0
  1577  0016AC  B4D8               	btfsc	status,2,c
  1578  0016AE  0012               	return	
  1579  0016B0  D7E7               	goto	l85
  1580  0016B2                     __end_of_putrsXLCD:
  1581                           	opt stack 0
  1582                           tblptru	equ	0xFF8
  1583                           tblptrh	equ	0xFF7
  1584                           tblptrl	equ	0xFF6
  1585                           tablat	equ	0xFF5
  1586                           intcon	equ	0xFF2
  1587                           intcon2	equ	0xFF1
  1588                           intcon3	equ	0xFF0
  1589                           postinc0	equ	0xFEE
  1590                           wreg	equ	0xFE8
  1591                           postdec1	equ	0xFE5
  1592                           fsr1l	equ	0xFE1
  1593                           status	equ	0xFD8
  1594                           
  1595 ;; *************** function _WriteDataXLCD *****************
  1596 ;; Defined at:
  1597 ;;		line 449 in file "nxlcd.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;  data            1    wreg     unsigned char 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  data            1   39[COMRAM] unsigned char 
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      void 
  1604 ;; Registers used:
  1605 ;;		wreg, status,2, status,0, cstack
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1611 ;;      Params:         0       0       0       0       0       0       0       0       0
  1612 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1613 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1614 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1615 ;;Total ram usage:        1 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:    3
  1618 ;; This function calls:
  1619 ;;		_DelayFor18TCY
  1620 ;; This function is called by:
  1621 ;;		_putrsXLCD
  1622 ;;		_main
  1623 ;;		_putsXLCD
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text2
  1628  0015C8                     __ptext2:
  1629                           	opt stack 0
  1630  0015C8                     _WriteDataXLCD:
  1631                           	opt stack 26
  1632                           
  1633                           ;incstack = 0
  1634                           ;WriteDataXLCD@data stored from wreg
  1635  0015C8  6E28               	movwf	WriteDataXLCD@data,c
  1636                           
  1637                           ;nxlcd.c: 464: TRISD &= 0x0f;
  1638  0015CA  0E0F               	movlw	15
  1639  0015CC  1695               	andwf	3989,f,c	;volatile
  1640                           
  1641                           ;nxlcd.c: 465: PORTD &= 0x0f;
  1642  0015CE  0E0F               	movlw	15
  1643  0015D0  1683               	andwf	3971,f,c	;volatile
  1644                           
  1645                           ;nxlcd.c: 466: PORTD |= data&0xf0;
  1646  0015D2  5028               	movf	WriteDataXLCD@data,w,c
  1647  0015D4  0BF0               	andlw	240
  1648  0015D6  1283               	iorwf	3971,f,c	;volatile
  1649                           
  1650                           ;nxlcd.c: 472: LATEbits.LATE0 = 1;
  1651  0015D8  808D               	bsf	3981,0,c	;volatile
  1652                           
  1653                           ;nxlcd.c: 473: LATEbits.LATE2 = 0;
  1654  0015DA  948D               	bcf	3981,2,c	;volatile
  1655                           
  1656                           ;nxlcd.c: 474: DelayFor18TCY();
  1657  0015DC  ECA1  F00B         	call	_DelayFor18TCY	;wreg free
  1658                           
  1659                           ;nxlcd.c: 475: LATEbits.LATE1 = 1;
  1660  0015E0  828D               	bsf	3981,1,c	;volatile
  1661                           
  1662                           ;nxlcd.c: 476: DelayFor18TCY();
  1663  0015E2  ECA1  F00B         	call	_DelayFor18TCY	;wreg free
  1664                           
  1665                           ;nxlcd.c: 477: LATEbits.LATE1 = 0;
  1666  0015E6  928D               	bcf	3981,1,c	;volatile
  1667                           
  1668                           ;nxlcd.c: 479: PORTD &= 0x0f;
  1669  0015E8  0E0F               	movlw	15
  1670  0015EA  1683               	andwf	3971,f,c	;volatile
  1671                           
  1672                           ;nxlcd.c: 480: PORTD |= ((data<<4)&0xf0);
  1673  0015EC  3828               	swapf	WriteDataXLCD@data,w,c
  1674  0015EE  0BF0               	andlw	240
  1675  0015F0  0BF0               	andlw	240
  1676  0015F2  1283               	iorwf	3971,f,c	;volatile
  1677                           
  1678                           ;nxlcd.c: 485: DelayFor18TCY();
  1679  0015F4  ECA1  F00B         	call	_DelayFor18TCY	;wreg free
  1680                           
  1681                           ;nxlcd.c: 486: LATEbits.LATE1 = 1;
  1682  0015F8  828D               	bsf	3981,1,c	;volatile
  1683                           
  1684                           ;nxlcd.c: 487: DelayFor18TCY();
  1685  0015FA  ECA1  F00B         	call	_DelayFor18TCY	;wreg free
  1686                           
  1687                           ;nxlcd.c: 488: LATEbits.LATE1 = 0;
  1688  0015FE  928D               	bcf	3981,1,c	;volatile
  1689                           
  1690                           ;nxlcd.c: 490: TRISD |= 0xf0;
  1691  001600  0EF0               	movlw	240
  1692  001602  1295               	iorwf	3989,f,c	;volatile
  1693  001604  0012               	return	
  1694  001606                     __end_of_WriteDataXLCD:
  1695                           	opt stack 0
  1696                           tblptru	equ	0xFF8
  1697                           tblptrh	equ	0xFF7
  1698                           tblptrl	equ	0xFF6
  1699                           tablat	equ	0xFF5
  1700                           intcon	equ	0xFF2
  1701                           intcon2	equ	0xFF1
  1702                           intcon3	equ	0xFF0
  1703                           postinc0	equ	0xFEE
  1704                           wreg	equ	0xFE8
  1705                           postdec1	equ	0xFE5
  1706                           fsr1l	equ	0xFE1
  1707                           status	equ	0xFD8
  1708                           
  1709 ;; *************** function ___wmul *****************
  1710 ;; Defined at:
  1711 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  multiplier      2   39[COMRAM] unsigned int 
  1714 ;;  multiplicand    2   41[COMRAM] unsigned int 
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;  product         2   43[COMRAM] unsigned int 
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  2   39[COMRAM] unsigned int 
  1719 ;; Registers used:
  1720 ;;		wreg, status,2, status,0, prodl, prodh
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1726 ;;      Params:         4       0       0       0       0       0       0       0       0
  1727 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1728 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1729 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1730 ;;Total ram usage:        6 bytes
  1731 ;; Hardware stack levels used:    1
  1732 ;; Hardware stack levels required when called:    2
  1733 ;; This function calls:
  1734 ;;		Nothing
  1735 ;; This function is called by:
  1736 ;;		_main
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text3
  1741  0016B2                     __ptext3:
  1742                           	opt stack 0
  1743  0016B2                     ___wmul:
  1744                           	opt stack 28
  1745                           
  1746                           ;incstack = 0
  1747  0016B2  5028               	movf	___wmul@multiplier,w,c
  1748  0016B4  022A               	mulwf	___wmul@multiplicand,c
  1749  0016B6  CFF3 F02C          	movff	prodl,___wmul@product
  1750  0016BA  CFF4 F02D          	movff	prodh,___wmul@product+1
  1751  0016BE  5028               	movf	___wmul@multiplier,w,c
  1752  0016C0  022B               	mulwf	___wmul@multiplicand+1,c
  1753  0016C2  50F3               	movf	prodl,w,c
  1754  0016C4  262D               	addwf	___wmul@product+1,f,c
  1755  0016C6  5029               	movf	___wmul@multiplier+1,w,c
  1756  0016C8  022A               	mulwf	___wmul@multiplicand,c
  1757  0016CA  50F3               	movf	prodl,w,c
  1758  0016CC  262D               	addwf	___wmul@product+1,f,c
  1759  0016CE  C02C  F028         	movff	___wmul@product,?___wmul
  1760  0016D2  C02D  F029         	movff	___wmul@product+1,?___wmul+1
  1761  0016D6  0012               	return	
  1762  0016D8                     __end_of___wmul:
  1763                           	opt stack 0
  1764                           tblptru	equ	0xFF8
  1765                           tblptrh	equ	0xFF7
  1766                           tblptrl	equ	0xFF6
  1767                           tablat	equ	0xFF5
  1768                           prodh	equ	0xFF4
  1769                           prodl	equ	0xFF3
  1770                           intcon	equ	0xFF2
  1771                           intcon2	equ	0xFF1
  1772                           intcon3	equ	0xFF0
  1773                           postinc0	equ	0xFEE
  1774                           wreg	equ	0xFE8
  1775                           postdec1	equ	0xFE5
  1776                           fsr1l	equ	0xFE1
  1777                           status	equ	0xFD8
  1778                           
  1779 ;; *************** function ___lwtoft *****************
  1780 ;; Defined at:
  1781 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;  c               2   47[COMRAM] unsigned int 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;		None
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  3   47[COMRAM] float 
  1788 ;; Registers used:
  1789 ;;		wreg, status,2, status,0, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1795 ;;      Params:         3       0       0       0       0       0       0       0       0
  1796 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1797 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1798 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1799 ;;Total ram usage:        3 bytes
  1800 ;; Hardware stack levels used:    1
  1801 ;; Hardware stack levels required when called:    3
  1802 ;; This function calls:
  1803 ;;		___ftpack
  1804 ;; This function is called by:
  1805 ;;		_main
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           	psect	text4
  1810  0016D8                     __ptext4:
  1811                           	opt stack 0
  1812  0016D8                     ___lwtoft:
  1813                           	opt stack 27
  1814                           
  1815                           ;incstack = 0
  1816  0016D8  C030  F028         	movff	___lwtoft@c,___ftpack@arg
  1817  0016DC  C031  F029         	movff	___lwtoft@c+1,___ftpack@arg+1
  1818  0016E0  6A2A               	clrf	___ftpack@arg+2,c
  1819  0016E2  0E8E               	movlw	142
  1820  0016E4  6E2B               	movwf	___ftpack@exp,c
  1821  0016E6  0E00               	movlw	0
  1822  0016E8  6E2C               	movwf	___ftpack@sign,c
  1823  0016EA  EC32  F009         	call	___ftpack	;wreg free
  1824  0016EE  C028  F030         	movff	?___ftpack,?___lwtoft
  1825  0016F2  C029  F031         	movff	?___ftpack+1,?___lwtoft+1
  1826  0016F6  C02A  F032         	movff	?___ftpack+2,?___lwtoft+2
  1827  0016FA  0012               	return	
  1828  0016FC                     __end_of___lwtoft:
  1829                           	opt stack 0
  1830                           tblptru	equ	0xFF8
  1831                           tblptrh	equ	0xFF7
  1832                           tblptrl	equ	0xFF6
  1833                           tablat	equ	0xFF5
  1834                           prodh	equ	0xFF4
  1835                           prodl	equ	0xFF3
  1836                           intcon	equ	0xFF2
  1837                           intcon2	equ	0xFF1
  1838                           intcon3	equ	0xFF0
  1839                           postinc0	equ	0xFEE
  1840                           wreg	equ	0xFE8
  1841                           postdec1	equ	0xFE5
  1842                           fsr1l	equ	0xFE1
  1843                           status	equ	0xFD8
  1844                           
  1845 ;; *************** function ___lwmod *****************
  1846 ;; Defined at:
  1847 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  dividend        2   39[COMRAM] unsigned int 
  1850 ;;  divisor         2   41[COMRAM] unsigned int 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;  counter         1   43[COMRAM] unsigned char 
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  2   39[COMRAM] unsigned int 
  1855 ;; Registers used:
  1856 ;;		wreg, status,2, status,0
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1862 ;;      Params:         4       0       0       0       0       0       0       0       0
  1863 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1864 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1865 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1866 ;;Total ram usage:        5 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    2
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_main
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text5
  1877  001546                     __ptext5:
  1878                           	opt stack 0
  1879  001546                     ___lwmod:
  1880                           	opt stack 28
  1881                           
  1882                           ;incstack = 0
  1883  001546  502A               	movf	___lwmod@divisor,w,c
  1884  001548  102B               	iorwf	___lwmod@divisor+1,w,c
  1885  00154A  B4D8               	btfsc	status,2,c
  1886  00154C  D018               	goto	l639
  1887  00154E  0E01               	movlw	1
  1888  001550  6E2C               	movwf	___lwmod@counter,c
  1889  001552  D004               	goto	l634
  1890  001554  90D8               	bcf	status,0,c
  1891  001556  362A               	rlcf	___lwmod@divisor,f,c
  1892  001558  362B               	rlcf	___lwmod@divisor+1,f,c
  1893  00155A  2A2C               	incf	___lwmod@counter,f,c
  1894  00155C                     l634:
  1895  00155C  AE2B               	btfss	___lwmod@divisor+1,7,c
  1896  00155E  D7FA               	goto	l635
  1897  001560                     u1730:
  1898  001560  502A               	movf	___lwmod@divisor,w,c
  1899  001562  5C28               	subwf	___lwmod@dividend,w,c
  1900  001564  502B               	movf	___lwmod@divisor+1,w,c
  1901  001566  5829               	subwfb	___lwmod@dividend+1,w,c
  1902  001568  A0D8               	btfss	status,0,c
  1903  00156A  D004               	goto	l638
  1904  00156C  502A               	movf	___lwmod@divisor,w,c
  1905  00156E  5E28               	subwf	___lwmod@dividend,f,c
  1906  001570  502B               	movf	___lwmod@divisor+1,w,c
  1907  001572  5A29               	subwfb	___lwmod@dividend+1,f,c
  1908  001574                     l638:
  1909  001574  90D8               	bcf	status,0,c
  1910  001576  322B               	rrcf	___lwmod@divisor+1,f,c
  1911  001578  322A               	rrcf	___lwmod@divisor,f,c
  1912  00157A  2E2C               	decfsz	___lwmod@counter,f,c
  1913  00157C  D7F1               	goto	u1730
  1914  00157E                     l639:
  1915  00157E  C028  F028         	movff	___lwmod@dividend,?___lwmod
  1916  001582  C029  F029         	movff	___lwmod@dividend+1,?___lwmod+1
  1917  001586  0012               	return		;funcret
  1918  001588                     __end_of___lwmod:
  1919                           	opt stack 0
  1920                           tblptru	equ	0xFF8
  1921                           tblptrh	equ	0xFF7
  1922                           tblptrl	equ	0xFF6
  1923                           tablat	equ	0xFF5
  1924                           prodh	equ	0xFF4
  1925                           prodl	equ	0xFF3
  1926                           intcon	equ	0xFF2
  1927                           intcon2	equ	0xFF1
  1928                           intcon3	equ	0xFF0
  1929                           postinc0	equ	0xFEE
  1930                           wreg	equ	0xFE8
  1931                           postdec1	equ	0xFE5
  1932                           fsr1l	equ	0xFE1
  1933                           status	equ	0xFD8
  1934                           
  1935 ;; *************** function ___lwdiv *****************
  1936 ;; Defined at:
  1937 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;  dividend        2   45[COMRAM] unsigned int 
  1940 ;;  divisor         2   47[COMRAM] unsigned int 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  quotient        2   49[COMRAM] unsigned int 
  1943 ;;  counter         1   51[COMRAM] unsigned char 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  2   45[COMRAM] unsigned int 
  1946 ;; Registers used:
  1947 ;;		wreg, status,2, status,0
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1953 ;;      Params:         4       0       0       0       0       0       0       0       0
  1954 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1955 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1956 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1957 ;;Total ram usage:        7 bytes
  1958 ;; Hardware stack levels used:    1
  1959 ;; Hardware stack levels required when called:    2
  1960 ;; This function calls:
  1961 ;;		Nothing
  1962 ;; This function is called by:
  1963 ;;		_main
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text6
  1968  0014B2                     __ptext6:
  1969                           	opt stack 0
  1970  0014B2                     ___lwdiv:
  1971                           	opt stack 28
  1972                           
  1973                           ;incstack = 0
  1974  0014B2  0E00               	movlw	0
  1975  0014B4  6E33               	movwf	___lwdiv@quotient+1,c
  1976  0014B6  0E00               	movlw	0
  1977  0014B8  6E32               	movwf	___lwdiv@quotient,c
  1978  0014BA  5030               	movf	___lwdiv@divisor,w,c
  1979  0014BC  1031               	iorwf	___lwdiv@divisor+1,w,c
  1980  0014BE  B4D8               	btfsc	status,2,c
  1981  0014C0  D01C               	goto	l629
  1982  0014C2  0E01               	movlw	1
  1983  0014C4  6E34               	movwf	___lwdiv@counter,c
  1984  0014C6  D004               	goto	l624
  1985  0014C8  90D8               	bcf	status,0,c
  1986  0014CA  3630               	rlcf	___lwdiv@divisor,f,c
  1987  0014CC  3631               	rlcf	___lwdiv@divisor+1,f,c
  1988  0014CE  2A34               	incf	___lwdiv@counter,f,c
  1989  0014D0                     l624:
  1990  0014D0  AE31               	btfss	___lwdiv@divisor+1,7,c
  1991  0014D2  D7FA               	goto	l625
  1992  0014D4                     u1700:
  1993  0014D4  90D8               	bcf	status,0,c
  1994  0014D6  3632               	rlcf	___lwdiv@quotient,f,c
  1995  0014D8  3633               	rlcf	___lwdiv@quotient+1,f,c
  1996  0014DA  5030               	movf	___lwdiv@divisor,w,c
  1997  0014DC  5C2E               	subwf	___lwdiv@dividend,w,c
  1998  0014DE  5031               	movf	___lwdiv@divisor+1,w,c
  1999  0014E0  582F               	subwfb	___lwdiv@dividend+1,w,c
  2000  0014E2  A0D8               	btfss	status,0,c
  2001  0014E4  D005               	goto	l628
  2002  0014E6  5030               	movf	___lwdiv@divisor,w,c
  2003  0014E8  5E2E               	subwf	___lwdiv@dividend,f,c
  2004  0014EA  5031               	movf	___lwdiv@divisor+1,w,c
  2005  0014EC  5A2F               	subwfb	___lwdiv@dividend+1,f,c
  2006  0014EE  8032               	bsf	___lwdiv@quotient,0,c
  2007  0014F0                     l628:
  2008  0014F0  90D8               	bcf	status,0,c
  2009  0014F2  3231               	rrcf	___lwdiv@divisor+1,f,c
  2010  0014F4  3230               	rrcf	___lwdiv@divisor,f,c
  2011  0014F6  2E34               	decfsz	___lwdiv@counter,f,c
  2012  0014F8  D7ED               	goto	u1700
  2013  0014FA                     l629:
  2014  0014FA  C032  F02E         	movff	___lwdiv@quotient,?___lwdiv
  2015  0014FE  C033  F02F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2016  001502  0012               	return		;funcret
  2017  001504                     __end_of___lwdiv:
  2018                           	opt stack 0
  2019                           tblptru	equ	0xFF8
  2020                           tblptrh	equ	0xFF7
  2021                           tblptrl	equ	0xFF6
  2022                           tablat	equ	0xFF5
  2023                           prodh	equ	0xFF4
  2024                           prodl	equ	0xFF3
  2025                           intcon	equ	0xFF2
  2026                           intcon2	equ	0xFF1
  2027                           intcon3	equ	0xFF0
  2028                           postinc0	equ	0xFEE
  2029                           wreg	equ	0xFE8
  2030                           postdec1	equ	0xFE5
  2031                           fsr1l	equ	0xFE1
  2032                           status	equ	0xFD8
  2033                           
  2034 ;; *************** function ___fttol *****************
  2035 ;; Defined at:
  2036 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  f1              3   27[BANK0 ] float 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  lval            4   37[BANK0 ] unsigned long 
  2041 ;;  exp1            1   41[BANK0 ] unsigned char 
  2042 ;;  sign1           1   36[BANK0 ] unsigned char 
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  4   27[BANK0 ] long 
  2045 ;; Registers used:
  2046 ;;		wreg, status,2, status,0
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2052 ;;      Params:         0       4       0       0       0       0       0       0       0
  2053 ;;      Locals:         0       6       0       0       0       0       0       0       0
  2054 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2055 ;;      Totals:         0      15       0       0       0       0       0       0       0
  2056 ;;Total ram usage:       15 bytes
  2057 ;; Hardware stack levels used:    1
  2058 ;; Hardware stack levels required when called:    2
  2059 ;; This function calls:
  2060 ;;		Nothing
  2061 ;; This function is called by:
  2062 ;;		_main
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text7
  2067  000EC6                     __ptext7:
  2068                           	opt stack 0
  2069  000EC6                     ___fttol:
  2070                           	opt stack 28
  2071                           
  2072                           ;incstack = 0
  2073  000EC6  C07D  F07F         	movff	___fttol@f1+2,??___fttol
  2074  000ECA  0100               	movlb	0	; () banked
  2075  000ECC  6B80               	clrf	(??___fttol+1)& (0+255),b
  2076  000ECE  6B81               	clrf	(??___fttol+2)& (0+255),b
  2077  000ED0  357C               	rlcf	(___fttol@f1+1)& (0+255),w,b
  2078  000ED2  377F               	rlcf	??___fttol& (0+255),f,b
  2079  000ED4  E301               	bnc	u1611
  2080  000ED6  8180               	bsf	(??___fttol+1)& (0+255),0,b
  2081  000ED8                     u1611:
  2082  000ED8  517F               	movf	??___fttol& (0+255),w,b
  2083  000EDA  6F89               	movwf	___fttol@exp1& (0+255),b
  2084  000EDC  5189               	movf	___fttol@exp1& (0+255),w,b
  2085  000EDE  A4D8               	btfss	status,2,c
  2086  000EE0  D009               	goto	l535
  2087                           
  2088                           ; BSR set to: 0
  2089  000EE2  0E00               	movlw	0
  2090  000EE4  6F7B               	movwf	?___fttol& (0+255),b
  2091  000EE6  0E00               	movlw	0
  2092  000EE8  6F7C               	movwf	(?___fttol+1)& (0+255),b
  2093  000EEA  0E00               	movlw	0
  2094  000EEC  6F7D               	movwf	(?___fttol+2)& (0+255),b
  2095  000EEE  0E00               	movlw	0
  2096  000EF0  6F7E               	movwf	(?___fttol+3)& (0+255),b
  2097                           
  2098                           ; BSR set to: 0
  2099  000EF2  0012               	return	
  2100  000EF4                     l535:
  2101                           
  2102                           ; BSR set to: 0
  2103                           
  2104                           ; BSR set to: 0
  2105  000EF4  0E17               	movlw	23
  2106  000EF6  6F7F               	movwf	??___fttol& (0+255),b
  2107  000EF8  C07B  F080         	movff	___fttol@f1,??___fttol+1
  2108  000EFC  C07C  F081         	movff	___fttol@f1+1,??___fttol+2
  2109  000F00  C07D  F082         	movff	___fttol@f1+2,??___fttol+3
  2110  000F04  297F               	incf	??___fttol& (0+255),w,b
  2111  000F06  6F83               	movwf	(??___fttol+4)& (0+255),b
  2112  000F08  D004               	goto	u1630
  2113  000F0A                     u1635:
  2114  000F0A  90D8               	bcf	status,0,c
  2115  000F0C  3382               	rrcf	(??___fttol+3)& (0+255),f,b
  2116  000F0E  3381               	rrcf	(??___fttol+2)& (0+255),f,b
  2117  000F10  3380               	rrcf	(??___fttol+1)& (0+255),f,b
  2118  000F12                     u1630:
  2119  000F12  2F83               	decfsz	(??___fttol+4)& (0+255),f,b
  2120  000F14  D7FA               	goto	u1635
  2121  000F16  0100               	movlb	0	; () banked
  2122  000F18  5180               	movf	(??___fttol+1)& (0+255),w,b
  2123  000F1A  6F84               	movwf	___fttol@sign1& (0+255),b
  2124                           
  2125                           ; BSR set to: 0
  2126  000F1C  8F7C               	bsf	(___fttol@f1+1)& (0+255),7,b
  2127                           
  2128                           ; BSR set to: 0
  2129  000F1E  0EFF               	movlw	255
  2130  000F20  177B               	andwf	___fttol@f1& (0+255),f,b
  2131  000F22  0EFF               	movlw	255
  2132  000F24  177C               	andwf	(___fttol@f1+1)& (0+255),f,b
  2133  000F26  0E00               	movlw	0
  2134  000F28  177D               	andwf	(___fttol@f1+2)& (0+255),f,b
  2135                           
  2136                           ; BSR set to: 0
  2137  000F2A  517B               	movf	___fttol@f1& (0+255),w,b
  2138  000F2C  6F85               	movwf	___fttol@lval& (0+255),b
  2139  000F2E  517C               	movf	(___fttol@f1+1)& (0+255),w,b
  2140  000F30  6F86               	movwf	(___fttol@lval+1)& (0+255),b
  2141  000F32  517D               	movf	(___fttol@f1+2)& (0+255),w,b
  2142  000F34  6F87               	movwf	(___fttol@lval+2)& (0+255),b
  2143  000F36  6B88               	clrf	(___fttol@lval+3)& (0+255),b
  2144                           
  2145                           ; BSR set to: 0
  2146  000F38  0E8E               	movlw	142
  2147  000F3A  5F89               	subwf	___fttol@exp1& (0+255),f,b
  2148                           
  2149                           ; BSR set to: 0
  2150  000F3C  AF89               	btfss	___fttol@exp1& (0+255),7,b
  2151  000F3E  D016               	goto	l537
  2152                           
  2153                           ; BSR set to: 0
  2154  000F40  5189               	movf	___fttol@exp1& (0+255),w,b
  2155  000F42  0A80               	xorlw	128
  2156  000F44  0F8F               	addlw	143
  2157  000F46  B0D8               	btfsc	status,0,c
  2158  000F48  D009               	goto	l538
  2159                           
  2160                           ; BSR set to: 0
  2161  000F4A  0E00               	movlw	0
  2162  000F4C  6F7B               	movwf	?___fttol& (0+255),b
  2163  000F4E  0E00               	movlw	0
  2164  000F50  6F7C               	movwf	(?___fttol+1)& (0+255),b
  2165  000F52  0E00               	movlw	0
  2166  000F54  6F7D               	movwf	(?___fttol+2)& (0+255),b
  2167  000F56  0E00               	movlw	0
  2168  000F58  6F7E               	movwf	(?___fttol+3)& (0+255),b
  2169                           
  2170                           ; BSR set to: 0
  2171  000F5A  0012               	return	
  2172  000F5C                     l538:
  2173                           
  2174                           ; BSR set to: 0
  2175                           
  2176                           ; BSR set to: 0
  2177                           
  2178                           ; BSR set to: 0
  2179  000F5C  90D8               	bcf	status,0,c
  2180  000F5E  3388               	rrcf	(___fttol@lval+3)& (0+255),f,b
  2181  000F60  3387               	rrcf	(___fttol@lval+2)& (0+255),f,b
  2182  000F62  3386               	rrcf	(___fttol@lval+1)& (0+255),f,b
  2183  000F64  3385               	rrcf	___fttol@lval& (0+255),f,b
  2184                           
  2185                           ; BSR set to: 0
  2186  000F66  3F89               	incfsz	___fttol@exp1& (0+255),f,b
  2187  000F68  D7F9               	goto	l538
  2188                           
  2189                           ; BSR set to: 0
  2190  000F6A  D015               	goto	u1670
  2191  000F6C                     l537:
  2192                           
  2193                           ; BSR set to: 0
  2194                           
  2195                           ; BSR set to: 0
  2196  000F6C  0E17               	movlw	23
  2197  000F6E  6589               	cpfsgt	___fttol@exp1& (0+255),b
  2198  000F70  D00F               	goto	l543
  2199                           
  2200                           ; BSR set to: 0
  2201  000F72  0E00               	movlw	0
  2202  000F74  6F7B               	movwf	?___fttol& (0+255),b
  2203  000F76  0E00               	movlw	0
  2204  000F78  6F7C               	movwf	(?___fttol+1)& (0+255),b
  2205  000F7A  0E00               	movlw	0
  2206  000F7C  6F7D               	movwf	(?___fttol+2)& (0+255),b
  2207  000F7E  0E00               	movlw	0
  2208  000F80  6F7E               	movwf	(?___fttol+3)& (0+255),b
  2209                           
  2210                           ; BSR set to: 0
  2211  000F82  0012               	return	
  2212  000F84                     
  2213                           ; BSR set to: 0
  2214                           
  2215                           ; BSR set to: 0
  2216  000F84  90D8               	bcf	status,0,c
  2217  000F86  3785               	rlcf	___fttol@lval& (0+255),f,b
  2218  000F88  3786               	rlcf	(___fttol@lval+1)& (0+255),f,b
  2219  000F8A  3787               	rlcf	(___fttol@lval+2)& (0+255),f,b
  2220  000F8C  3788               	rlcf	(___fttol@lval+3)& (0+255),f,b
  2221  000F8E  0789               	decf	___fttol@exp1& (0+255),f,b
  2222  000F90                     l543:
  2223                           
  2224                           ; BSR set to: 0
  2225                           
  2226                           ; BSR set to: 0
  2227  000F90  5189               	movf	___fttol@exp1& (0+255),w,b
  2228  000F92  A4D8               	btfss	status,2,c
  2229  000F94  D7F7               	goto	l544
  2230  000F96                     u1670:
  2231                           
  2232                           ; BSR set to: 0
  2233                           
  2234                           ; BSR set to: 0
  2235                           
  2236                           ; BSR set to: 0
  2237  000F96  5184               	movf	___fttol@sign1& (0+255),w,b
  2238  000F98  B4D8               	btfsc	status,2,c
  2239  000F9A  D008               	goto	l546
  2240                           
  2241                           ; BSR set to: 0
  2242  000F9C  1F88               	comf	(___fttol@lval+3)& (0+255),f,b
  2243  000F9E  1F87               	comf	(___fttol@lval+2)& (0+255),f,b
  2244  000FA0  1F86               	comf	(___fttol@lval+1)& (0+255),f,b
  2245  000FA2  6D85               	negf	___fttol@lval& (0+255),b
  2246  000FA4  0E00               	movlw	0
  2247  000FA6  2386               	addwfc	(___fttol@lval+1)& (0+255),f,b
  2248  000FA8  2387               	addwfc	(___fttol@lval+2)& (0+255),f,b
  2249  000FAA  2388               	addwfc	(___fttol@lval+3)& (0+255),f,b
  2250  000FAC                     l546:
  2251                           
  2252                           ; BSR set to: 0
  2253                           
  2254                           ; BSR set to: 0
  2255  000FAC  C085  F07B         	movff	___fttol@lval,?___fttol
  2256  000FB0  C086  F07C         	movff	___fttol@lval+1,?___fttol+1
  2257  000FB4  C087  F07D         	movff	___fttol@lval+2,?___fttol+2
  2258  000FB8  C088  F07E         	movff	___fttol@lval+3,?___fttol+3
  2259  000FBC  0012               	return	
  2260  000FBE                     __end_of___fttol:
  2261                           	opt stack 0
  2262                           tblptru	equ	0xFF8
  2263                           tblptrh	equ	0xFF7
  2264                           tblptrl	equ	0xFF6
  2265                           tablat	equ	0xFF5
  2266                           prodh	equ	0xFF4
  2267                           prodl	equ	0xFF3
  2268                           intcon	equ	0xFF2
  2269                           intcon2	equ	0xFF1
  2270                           intcon3	equ	0xFF0
  2271                           postinc0	equ	0xFEE
  2272                           wreg	equ	0xFE8
  2273                           postdec1	equ	0xFE5
  2274                           fsr1l	equ	0xFE1
  2275                           status	equ	0xFD8
  2276                           
  2277 ;; *************** function ___ftneg *****************
  2278 ;; Defined at:
  2279 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  f1              3   50[COMRAM] float 
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;		None
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  3   50[COMRAM] float 
  2286 ;; Registers used:
  2287 ;;		wreg, status,2, status,0
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2293 ;;      Params:         3       0       0       0       0       0       0       0       0
  2294 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2295 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2296 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2297 ;;Total ram usage:        3 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; Hardware stack levels required when called:    2
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		_main
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           	psect	text8
  2308  0016FC                     __ptext8:
  2309                           	opt stack 0
  2310  0016FC                     ___ftneg:
  2311                           	opt stack 28
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;incstack = 0
  2315  0016FC  5033               	movf	___ftneg@f1,w,c
  2316  0016FE  1034               	iorwf	___ftneg@f1+1,w,c
  2317  001700  1035               	iorwf	___ftneg@f1+2,w,c
  2318  001702  B4D8               	btfsc	status,2,c
  2319  001704  D006               	goto	l525
  2320  001706  0E00               	movlw	0
  2321  001708  1A33               	xorwf	___ftneg@f1,f,c
  2322  00170A  0E00               	movlw	0
  2323  00170C  1A34               	xorwf	___ftneg@f1+1,f,c
  2324  00170E  0E80               	movlw	128
  2325  001710  1A35               	xorwf	___ftneg@f1+2,f,c
  2326  001712                     l525:
  2327  001712  C033  F033         	movff	___ftneg@f1,?___ftneg
  2328  001716  C034  F034         	movff	___ftneg@f1+1,?___ftneg+1
  2329  00171A  C035  F035         	movff	___ftneg@f1+2,?___ftneg+2
  2330  00171E  0012               	return		;funcret
  2331  001720                     __end_of___ftneg:
  2332                           	opt stack 0
  2333                           tblptru	equ	0xFF8
  2334                           tblptrh	equ	0xFF7
  2335                           tblptrl	equ	0xFF6
  2336                           tablat	equ	0xFF5
  2337                           prodh	equ	0xFF4
  2338                           prodl	equ	0xFF3
  2339                           intcon	equ	0xFF2
  2340                           intcon2	equ	0xFF1
  2341                           intcon3	equ	0xFF0
  2342                           postinc0	equ	0xFEE
  2343                           wreg	equ	0xFE8
  2344                           postdec1	equ	0xFE5
  2345                           fsr1l	equ	0xFE1
  2346                           status	equ	0xFD8
  2347                           
  2348 ;; *************** function ___ftmul *****************
  2349 ;; Defined at:
  2350 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  f1              3    0[BANK0 ] float 
  2353 ;;  f2              3    3[BANK0 ] float 
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;  f3_as_produc    3    7[BANK0 ] unsigned um
  2356 ;;  sign            1   11[BANK0 ] unsigned char 
  2357 ;;  cntr            1   10[BANK0 ] unsigned char 
  2358 ;;  exp             1    6[BANK0 ] unsigned char 
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  3    0[BANK0 ] float 
  2361 ;; Registers used:
  2362 ;;		wreg, status,2, status,0, cstack
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2368 ;;      Params:         0       6       0       0       0       0       0       0       0
  2369 ;;      Locals:         0       6       0       0       0       0       0       0       0
  2370 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2371 ;;      Totals:         3      12       0       0       0       0       0       0       0
  2372 ;;Total ram usage:       15 bytes
  2373 ;; Hardware stack levels used:    1
  2374 ;; Hardware stack levels required when called:    3
  2375 ;; This function calls:
  2376 ;;		___ftpack
  2377 ;; This function is called by:
  2378 ;;		_main
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text9
  2383  000FBE                     __ptext9:
  2384                           	opt stack 0
  2385  000FBE                     ___ftmul:
  2386                           	opt stack 27
  2387                           
  2388                           ;incstack = 0
  2389  000FBE  C062  F033         	movff	___ftmul@f1+2,??___ftmul
  2390  000FC2  6A34               	clrf	(??___ftmul+1)& (0+255),c
  2391  000FC4  6A35               	clrf	(??___ftmul+2)& (0+255),c
  2392  000FC6  0100               	movlb	0	; () banked
  2393  000FC8  3561               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  2394  000FCA  3633               	rlcf	??___ftmul& (0+255),f,c
  2395  000FCC  E301               	bnc	u1421
  2396  000FCE  8034               	bsf	(??___ftmul+1)& (0+255),0,c
  2397  000FD0                     u1421:
  2398  000FD0  5033               	movf	??___ftmul,w,c
  2399  000FD2  6F66               	movwf	___ftmul@exp& (0+255),b
  2400  000FD4  5166               	movf	___ftmul@exp& (0+255),w,b
  2401  000FD6  A4D8               	btfss	status,2,c
  2402  000FD8  D007               	goto	l514
  2403                           
  2404                           ; BSR set to: 0
  2405  000FDA  0E00               	movlw	0
  2406  000FDC  6F60               	movwf	?___ftmul& (0+255),b
  2407  000FDE  0E00               	movlw	0
  2408  000FE0  6F61               	movwf	(?___ftmul+1)& (0+255),b
  2409  000FE2  0E00               	movlw	0
  2410  000FE4  6F62               	movwf	(?___ftmul+2)& (0+255),b
  2411                           
  2412                           ; BSR set to: 0
  2413  000FE6  0012               	return	
  2414  000FE8                     l514:
  2415                           
  2416                           ; BSR set to: 0
  2417                           
  2418                           ; BSR set to: 0
  2419  000FE8  C065  F033         	movff	___ftmul@f2+2,??___ftmul
  2420  000FEC  6A34               	clrf	(??___ftmul+1)& (0+255),c
  2421  000FEE  6A35               	clrf	(??___ftmul+2)& (0+255),c
  2422  000FF0  3564               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  2423  000FF2  3633               	rlcf	??___ftmul& (0+255),f,c
  2424  000FF4  E301               	bnc	u1441
  2425  000FF6  8034               	bsf	(??___ftmul+1)& (0+255),0,c
  2426  000FF8                     u1441:
  2427  000FF8  5033               	movf	??___ftmul,w,c
  2428  000FFA  6F6B               	movwf	___ftmul@sign& (0+255),b
  2429  000FFC  516B               	movf	___ftmul@sign& (0+255),w,b
  2430  000FFE  A4D8               	btfss	status,2,c
  2431  001000  D007               	goto	l516
  2432                           
  2433                           ; BSR set to: 0
  2434  001002  0E00               	movlw	0
  2435  001004  6F60               	movwf	?___ftmul& (0+255),b
  2436  001006  0E00               	movlw	0
  2437  001008  6F61               	movwf	(?___ftmul+1)& (0+255),b
  2438  00100A  0E00               	movlw	0
  2439  00100C  6F62               	movwf	(?___ftmul+2)& (0+255),b
  2440                           
  2441                           ; BSR set to: 0
  2442  00100E  0012               	return	
  2443  001010                     l516:
  2444                           
  2445                           ; BSR set to: 0
  2446                           
  2447                           ; BSR set to: 0
  2448  001010  516B               	movf	___ftmul@sign& (0+255),w,b
  2449  001012  0F7B               	addlw	123
  2450  001014  2766               	addwf	___ftmul@exp& (0+255),f,b
  2451                           
  2452                           ; BSR set to: 0
  2453  001016  C062  F06B         	movff	___ftmul@f1+2,___ftmul@sign
  2454  00101A  5165               	movf	(___ftmul@f2+2)& (0+255),w,b
  2455  00101C  1B6B               	xorwf	___ftmul@sign& (0+255),f,b
  2456  00101E  0E80               	movlw	128
  2457  001020  176B               	andwf	___ftmul@sign& (0+255),f,b
  2458                           
  2459                           ; BSR set to: 0
  2460  001022  8F61               	bsf	(___ftmul@f1+1)& (0+255),7,b
  2461                           
  2462                           ; BSR set to: 0
  2463  001024  8F64               	bsf	(___ftmul@f2+1)& (0+255),7,b
  2464                           
  2465                           ; BSR set to: 0
  2466  001026  0EFF               	movlw	255
  2467  001028  1763               	andwf	___ftmul@f2& (0+255),f,b
  2468  00102A  0EFF               	movlw	255
  2469  00102C  1764               	andwf	(___ftmul@f2+1)& (0+255),f,b
  2470  00102E  0E00               	movlw	0
  2471  001030  1765               	andwf	(___ftmul@f2+2)& (0+255),f,b
  2472                           
  2473                           ; BSR set to: 0
  2474  001032  0E00               	movlw	0
  2475  001034  6F67               	movwf	___ftmul@f3_as_product& (0+255),b
  2476  001036  0E00               	movlw	0
  2477  001038  6F68               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  2478  00103A  0E00               	movlw	0
  2479  00103C  6F69               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  2480                           
  2481                           ; BSR set to: 0
  2482  00103E  0E07               	movlw	7
  2483  001040  6F6A               	movwf	___ftmul@cntr& (0+255),b
  2484  001042                     
  2485                           ; BSR set to: 0
  2486                           
  2487                           ; BSR set to: 0
  2488  001042  A160               	btfss	___ftmul@f1& (0+255),0,b
  2489  001044  D006               	goto	l518
  2490                           
  2491                           ; BSR set to: 0
  2492  001046  5163               	movf	___ftmul@f2& (0+255),w,b
  2493  001048  2767               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2494  00104A  5164               	movf	(___ftmul@f2+1)& (0+255),w,b
  2495  00104C  2368               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2496  00104E  5165               	movf	(___ftmul@f2+2)& (0+255),w,b
  2497  001050  2369               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2498  001052                     l518:
  2499                           
  2500                           ; BSR set to: 0
  2501                           
  2502                           ; BSR set to: 0
  2503  001052  90D8               	bcf	status,0,c
  2504  001054  3362               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2505  001056  3361               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2506  001058  3360               	rrcf	___ftmul@f1& (0+255),f,b
  2507  00105A  90D8               	bcf	status,0,c
  2508  00105C  3763               	rlcf	___ftmul@f2& (0+255),f,b
  2509  00105E  3764               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  2510  001060  3765               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  2511                           
  2512                           ; BSR set to: 0
  2513  001062  2F6A               	decfsz	___ftmul@cntr& (0+255),f,b
  2514  001064  D7EE               	goto	l517
  2515                           
  2516                           ; BSR set to: 0
  2517                           
  2518                           ; BSR set to: 0
  2519  001066  0E09               	movlw	9
  2520  001068  6F6A               	movwf	___ftmul@cntr& (0+255),b
  2521  00106A                     
  2522                           ; BSR set to: 0
  2523                           
  2524                           ; BSR set to: 0
  2525  00106A  A160               	btfss	___ftmul@f1& (0+255),0,b
  2526  00106C  D006               	goto	l521
  2527                           
  2528                           ; BSR set to: 0
  2529  00106E  5163               	movf	___ftmul@f2& (0+255),w,b
  2530  001070  2767               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2531  001072  5164               	movf	(___ftmul@f2+1)& (0+255),w,b
  2532  001074  2368               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2533  001076  5165               	movf	(___ftmul@f2+2)& (0+255),w,b
  2534  001078  2369               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2535  00107A                     l521:
  2536                           
  2537                           ; BSR set to: 0
  2538                           
  2539                           ; BSR set to: 0
  2540  00107A  90D8               	bcf	status,0,c
  2541  00107C  3362               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2542  00107E  3361               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2543  001080  3360               	rrcf	___ftmul@f1& (0+255),f,b
  2544  001082  90D8               	bcf	status,0,c
  2545  001084  3369               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  2546  001086  3368               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  2547  001088  3367               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  2548                           
  2549                           ; BSR set to: 0
  2550  00108A  2F6A               	decfsz	___ftmul@cntr& (0+255),f,b
  2551  00108C  D7EE               	goto	l520
  2552                           
  2553                           ; BSR set to: 0
  2554                           
  2555                           ; BSR set to: 0
  2556  00108E  C067  F028         	movff	___ftmul@f3_as_product,___ftpack@arg
  2557  001092  C068  F029         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2558  001096  C069  F02A         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2559  00109A  C066  F02B         	movff	___ftmul@exp,___ftpack@exp
  2560  00109E  C06B  F02C         	movff	___ftmul@sign,___ftpack@sign
  2561  0010A2  EC32  F009         	call	___ftpack	;wreg free
  2562  0010A6  C028  F060         	movff	?___ftpack,?___ftmul
  2563  0010AA  C029  F061         	movff	?___ftpack+1,?___ftmul+1
  2564  0010AE  C02A  F062         	movff	?___ftpack+2,?___ftmul+2
  2565  0010B2  0012               	return	
  2566  0010B4                     __end_of___ftmul:
  2567                           	opt stack 0
  2568                           tblptru	equ	0xFF8
  2569                           tblptrh	equ	0xFF7
  2570                           tblptrl	equ	0xFF6
  2571                           tablat	equ	0xFF5
  2572                           prodh	equ	0xFF4
  2573                           prodl	equ	0xFF3
  2574                           intcon	equ	0xFF2
  2575                           intcon2	equ	0xFF1
  2576                           intcon3	equ	0xFF0
  2577                           postinc0	equ	0xFEE
  2578                           wreg	equ	0xFE8
  2579                           postdec1	equ	0xFE5
  2580                           fsr1l	equ	0xFE1
  2581                           status	equ	0xFD8
  2582                           
  2583 ;; *************** function ___ftdiv *****************
  2584 ;; Defined at:
  2585 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;  f1              3   12[BANK0 ] float 
  2588 ;;  f2              3   15[BANK0 ] float 
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;  f3              3   22[BANK0 ] float 
  2591 ;;  sign            1   26[BANK0 ] unsigned char 
  2592 ;;  exp             1   25[BANK0 ] unsigned char 
  2593 ;;  cntr            1   21[BANK0 ] unsigned char 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  3   12[BANK0 ] float 
  2596 ;; Registers used:
  2597 ;;		wreg, status,2, status,0, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2603 ;;      Params:         0       6       0       0       0       0       0       0       0
  2604 ;;      Locals:         0       6       0       0       0       0       0       0       0
  2605 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2606 ;;      Totals:         0      15       0       0       0       0       0       0       0
  2607 ;;Total ram usage:       15 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    3
  2610 ;; This function calls:
  2611 ;;		___ftpack
  2612 ;; This function is called by:
  2613 ;;		_main
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           	psect	text10
  2618  0010B4                     __ptext10:
  2619                           	opt stack 0
  2620  0010B4                     ___ftdiv:
  2621                           	opt stack 27
  2622                           
  2623                           ;incstack = 0
  2624  0010B4  C06E  F072         	movff	___ftdiv@f1+2,??___ftdiv
  2625  0010B8  0100               	movlb	0	; () banked
  2626  0010BA  6B73               	clrf	(??___ftdiv+1)& (0+255),b
  2627  0010BC  6B74               	clrf	(??___ftdiv+2)& (0+255),b
  2628  0010BE  356D               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2629  0010C0  3772               	rlcf	??___ftdiv& (0+255),f,b
  2630  0010C2  E301               	bnc	u1371
  2631  0010C4  8173               	bsf	(??___ftdiv+1)& (0+255),0,b
  2632  0010C6                     u1371:
  2633  0010C6  5172               	movf	??___ftdiv& (0+255),w,b
  2634  0010C8  6F79               	movwf	___ftdiv@exp& (0+255),b
  2635  0010CA  5179               	movf	___ftdiv@exp& (0+255),w,b
  2636  0010CC  A4D8               	btfss	status,2,c
  2637  0010CE  D007               	goto	l499
  2638                           
  2639                           ; BSR set to: 0
  2640  0010D0  0E00               	movlw	0
  2641  0010D2  6F6C               	movwf	?___ftdiv& (0+255),b
  2642  0010D4  0E00               	movlw	0
  2643  0010D6  6F6D               	movwf	(?___ftdiv+1)& (0+255),b
  2644  0010D8  0E00               	movlw	0
  2645  0010DA  6F6E               	movwf	(?___ftdiv+2)& (0+255),b
  2646                           
  2647                           ; BSR set to: 0
  2648  0010DC  0012               	return	
  2649  0010DE                     l499:
  2650                           
  2651                           ; BSR set to: 0
  2652                           
  2653                           ; BSR set to: 0
  2654  0010DE  C071  F072         	movff	___ftdiv@f2+2,??___ftdiv
  2655  0010E2  6B73               	clrf	(??___ftdiv+1)& (0+255),b
  2656  0010E4  6B74               	clrf	(??___ftdiv+2)& (0+255),b
  2657  0010E6  3570               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2658  0010E8  3772               	rlcf	??___ftdiv& (0+255),f,b
  2659  0010EA  E301               	bnc	u1391
  2660  0010EC  8173               	bsf	(??___ftdiv+1)& (0+255),0,b
  2661  0010EE                     u1391:
  2662  0010EE  5172               	movf	??___ftdiv& (0+255),w,b
  2663  0010F0  6F7A               	movwf	___ftdiv@sign& (0+255),b
  2664  0010F2  517A               	movf	___ftdiv@sign& (0+255),w,b
  2665  0010F4  A4D8               	btfss	status,2,c
  2666  0010F6  D007               	goto	l501
  2667                           
  2668                           ; BSR set to: 0
  2669  0010F8  0E00               	movlw	0
  2670  0010FA  6F6C               	movwf	?___ftdiv& (0+255),b
  2671  0010FC  0E00               	movlw	0
  2672  0010FE  6F6D               	movwf	(?___ftdiv+1)& (0+255),b
  2673  001100  0E00               	movlw	0
  2674  001102  6F6E               	movwf	(?___ftdiv+2)& (0+255),b
  2675                           
  2676                           ; BSR set to: 0
  2677  001104  0012               	return	
  2678  001106                     l501:
  2679                           
  2680                           ; BSR set to: 0
  2681                           
  2682                           ; BSR set to: 0
  2683  001106  0E00               	movlw	0
  2684  001108  6F76               	movwf	___ftdiv@f3& (0+255),b
  2685  00110A  0E00               	movlw	0
  2686  00110C  6F77               	movwf	(___ftdiv@f3+1)& (0+255),b
  2687  00110E  0E00               	movlw	0
  2688  001110  6F78               	movwf	(___ftdiv@f3+2)& (0+255),b
  2689                           
  2690                           ; BSR set to: 0
  2691  001112  517A               	movf	___ftdiv@sign& (0+255),w,b
  2692  001114  0F89               	addlw	137
  2693  001116  5F79               	subwf	___ftdiv@exp& (0+255),f,b
  2694                           
  2695                           ; BSR set to: 0
  2696  001118  C06E  F07A         	movff	___ftdiv@f1+2,___ftdiv@sign
  2697                           
  2698                           ; BSR set to: 0
  2699  00111C  5171               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2700  00111E  1B7A               	xorwf	___ftdiv@sign& (0+255),f,b
  2701                           
  2702                           ; BSR set to: 0
  2703  001120  0E80               	movlw	128
  2704  001122  177A               	andwf	___ftdiv@sign& (0+255),f,b
  2705                           
  2706                           ; BSR set to: 0
  2707  001124  8F6D               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2708                           
  2709                           ; BSR set to: 0
  2710  001126  0EFF               	movlw	255
  2711  001128  176C               	andwf	___ftdiv@f1& (0+255),f,b
  2712  00112A  0EFF               	movlw	255
  2713  00112C  176D               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2714  00112E  0E00               	movlw	0
  2715  001130  176E               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2716                           
  2717                           ; BSR set to: 0
  2718  001132  8F70               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2719                           
  2720                           ; BSR set to: 0
  2721  001134  0EFF               	movlw	255
  2722  001136  176F               	andwf	___ftdiv@f2& (0+255),f,b
  2723  001138  0EFF               	movlw	255
  2724  00113A  1770               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2725  00113C  0E00               	movlw	0
  2726  00113E  1771               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2727                           
  2728                           ; BSR set to: 0
  2729  001140  0E18               	movlw	24
  2730  001142  6F75               	movwf	___ftdiv@cntr& (0+255),b
  2731  001144                     
  2732                           ; BSR set to: 0
  2733                           
  2734                           ; BSR set to: 0
  2735  001144  90D8               	bcf	status,0,c
  2736  001146  3776               	rlcf	___ftdiv@f3& (0+255),f,b
  2737  001148  3777               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2738  00114A  3778               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2739                           
  2740                           ; BSR set to: 0
  2741  00114C  516F               	movf	___ftdiv@f2& (0+255),w,b
  2742  00114E  5D6C               	subwf	___ftdiv@f1& (0+255),w,b
  2743  001150  5170               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2744  001152  596D               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2745  001154  5171               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2746  001156  596E               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2747  001158  A0D8               	btfss	status,0,c
  2748  00115A  D007               	goto	l503
  2749                           
  2750                           ; BSR set to: 0
  2751  00115C  516F               	movf	___ftdiv@f2& (0+255),w,b
  2752  00115E  5F6C               	subwf	___ftdiv@f1& (0+255),f,b
  2753  001160  5170               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2754  001162  5B6D               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2755  001164  5171               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2756  001166  5B6E               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2757                           
  2758                           ; BSR set to: 0
  2759  001168  8176               	bsf	___ftdiv@f3& (0+255),0,b
  2760  00116A                     l503:
  2761                           
  2762                           ; BSR set to: 0
  2763  00116A  90D8               	bcf	status,0,c
  2764  00116C  376C               	rlcf	___ftdiv@f1& (0+255),f,b
  2765  00116E  376D               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2766  001170  376E               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2767                           
  2768                           ; BSR set to: 0
  2769  001172  2F75               	decfsz	___ftdiv@cntr& (0+255),f,b
  2770  001174  D7E7               	goto	l502
  2771                           
  2772                           ; BSR set to: 0
  2773                           
  2774                           ; BSR set to: 0
  2775  001176  C076  F028         	movff	___ftdiv@f3,___ftpack@arg
  2776  00117A  C077  F029         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2777  00117E  C078  F02A         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2778  001182  C079  F02B         	movff	___ftdiv@exp,___ftpack@exp
  2779  001186  C07A  F02C         	movff	___ftdiv@sign,___ftpack@sign
  2780  00118A  EC32  F009         	call	___ftpack	;wreg free
  2781  00118E  C028  F06C         	movff	?___ftpack,?___ftdiv
  2782  001192  C029  F06D         	movff	?___ftpack+1,?___ftdiv+1
  2783  001196  C02A  F06E         	movff	?___ftpack+2,?___ftdiv+2
  2784  00119A  0012               	return	
  2785  00119C                     __end_of___ftdiv:
  2786                           	opt stack 0
  2787                           tblptru	equ	0xFF8
  2788                           tblptrh	equ	0xFF7
  2789                           tblptrl	equ	0xFF6
  2790                           tablat	equ	0xFF5
  2791                           prodh	equ	0xFF4
  2792                           prodl	equ	0xFF3
  2793                           intcon	equ	0xFF2
  2794                           intcon2	equ	0xFF1
  2795                           intcon3	equ	0xFF0
  2796                           postinc0	equ	0xFEE
  2797                           wreg	equ	0xFE8
  2798                           postdec1	equ	0xFE5
  2799                           fsr1l	equ	0xFE1
  2800                           status	equ	0xFD8
  2801                           
  2802 ;; *************** function ___ftadd *****************
  2803 ;; Defined at:
  2804 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;  f1              3   12[BANK0 ] float 
  2807 ;;  f2              3   15[BANK0 ] float 
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;  exp1            1   23[BANK0 ] unsigned char 
  2810 ;;  exp2            1   22[BANK0 ] unsigned char 
  2811 ;;  sign            1   21[BANK0 ] unsigned char 
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  3   12[BANK0 ] float 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0, cstack
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2821 ;;      Params:         0       6       0       0       0       0       0       0       0
  2822 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2823 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2824 ;;      Totals:         0      12       0       0       0       0       0       0       0
  2825 ;;Total ram usage:       12 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; Hardware stack levels required when called:    3
  2828 ;; This function calls:
  2829 ;;		___ftpack
  2830 ;; This function is called by:
  2831 ;;		_main
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           	psect	text11
  2836  000D18                     __ptext11:
  2837                           	opt stack 0
  2838  000D18                     ___ftadd:
  2839                           	opt stack 27
  2840                           
  2841                           ;incstack = 0
  2842  000D18  C06E  F072         	movff	___ftadd@f1+2,??___ftadd
  2843  000D1C  0100               	movlb	0	; () banked
  2844  000D1E  6B73               	clrf	(??___ftadd+1)& (0+255),b
  2845  000D20  6B74               	clrf	(??___ftadd+2)& (0+255),b
  2846  000D22  356D               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  2847  000D24  3772               	rlcf	??___ftadd& (0+255),f,b
  2848  000D26  E301               	bnc	u1161
  2849  000D28  8173               	bsf	(??___ftadd+1)& (0+255),0,b
  2850  000D2A                     u1161:
  2851  000D2A  5172               	movf	??___ftadd& (0+255),w,b
  2852  000D2C  6F77               	movwf	___ftadd@exp1& (0+255),b
  2853  000D2E  C071  F072         	movff	___ftadd@f2+2,??___ftadd
  2854  000D32  6B73               	clrf	(??___ftadd+1)& (0+255),b
  2855  000D34  6B74               	clrf	(??___ftadd+2)& (0+255),b
  2856  000D36  3570               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  2857  000D38  3772               	rlcf	??___ftadd& (0+255),f,b
  2858  000D3A  E301               	bnc	u1171
  2859  000D3C  8173               	bsf	(??___ftadd+1)& (0+255),0,b
  2860  000D3E                     u1171:
  2861  000D3E  5172               	movf	??___ftadd& (0+255),w,b
  2862  000D40  6F76               	movwf	___ftadd@exp2& (0+255),b
  2863                           
  2864                           ; BSR set to: 0
  2865  000D42  5177               	movf	___ftadd@exp1& (0+255),w,b
  2866  000D44  B4D8               	btfsc	status,2,c
  2867  000D46  D00B               	goto	u1200
  2868                           
  2869                           ; BSR set to: 0
  2870  000D48  5176               	movf	___ftadd@exp2& (0+255),w,b
  2871  000D4A  5D77               	subwf	___ftadd@exp1& (0+255),w,b
  2872  000D4C  B0D8               	btfsc	status,0,c
  2873  000D4E  D00E               	goto	l466
  2874                           
  2875                           ; BSR set to: 0
  2876  000D50  5177               	movf	___ftadd@exp1& (0+255),w,b
  2877  000D52  0800               	sublw	0
  2878  000D54  2576               	addwf	___ftadd@exp2& (0+255),w,b
  2879  000D56  6F72               	movwf	??___ftadd& (0+255),b
  2880  000D58  0E18               	movlw	24
  2881  000D5A  6572               	cpfsgt	??___ftadd& (0+255),b
  2882  000D5C  D007               	goto	l466
  2883  000D5E                     u1200:
  2884                           
  2885                           ; BSR set to: 0
  2886  000D5E  C06F  F06C         	movff	___ftadd@f2,?___ftadd
  2887  000D62  C070  F06D         	movff	___ftadd@f2+1,?___ftadd+1
  2888  000D66  C071  F06E         	movff	___ftadd@f2+2,?___ftadd+2
  2889  000D6A  0012               	return	
  2890  000D6C                     l466:
  2891                           
  2892                           ; BSR set to: 0
  2893                           
  2894                           ; BSR set to: 0
  2895  000D6C  5176               	movf	___ftadd@exp2& (0+255),w,b
  2896  000D6E  B4D8               	btfsc	status,2,c
  2897  000D70  D00B               	goto	u1230
  2898                           
  2899                           ; BSR set to: 0
  2900  000D72  5177               	movf	___ftadd@exp1& (0+255),w,b
  2901  000D74  5D76               	subwf	___ftadd@exp2& (0+255),w,b
  2902  000D76  B0D8               	btfsc	status,0,c
  2903  000D78  D00E               	goto	l470
  2904                           
  2905                           ; BSR set to: 0
  2906  000D7A  5176               	movf	___ftadd@exp2& (0+255),w,b
  2907  000D7C  0800               	sublw	0
  2908  000D7E  2577               	addwf	___ftadd@exp1& (0+255),w,b
  2909  000D80  6F72               	movwf	??___ftadd& (0+255),b
  2910  000D82  0E18               	movlw	24
  2911  000D84  6572               	cpfsgt	??___ftadd& (0+255),b
  2912  000D86  D007               	goto	l470
  2913  000D88                     u1230:
  2914                           
  2915                           ; BSR set to: 0
  2916  000D88  C06C  F06C         	movff	___ftadd@f1,?___ftadd
  2917  000D8C  C06D  F06D         	movff	___ftadd@f1+1,?___ftadd+1
  2918  000D90  C06E  F06E         	movff	___ftadd@f1+2,?___ftadd+2
  2919  000D94  0012               	return	
  2920  000D96                     l470:
  2921                           
  2922                           ; BSR set to: 0
  2923                           
  2924                           ; BSR set to: 0
  2925  000D96  0E06               	movlw	6
  2926  000D98  6F75               	movwf	___ftadd@sign& (0+255),b
  2927                           
  2928                           ; BSR set to: 0
  2929  000D9A  BF6E               	btfsc	(___ftadd@f1+2)& (0+255),7,b
  2930                           
  2931                           ; BSR set to: 0
  2932  000D9C  8F75               	bsf	___ftadd@sign& (0+255),7,b
  2933                           
  2934                           ; BSR set to: 0
  2935                           
  2936                           ; BSR set to: 0
  2937  000D9E  BF71               	btfsc	(___ftadd@f2+2)& (0+255),7,b
  2938                           
  2939                           ; BSR set to: 0
  2940  000DA0  8D75               	bsf	___ftadd@sign& (0+255),6,b
  2941                           
  2942                           ; BSR set to: 0
  2943  000DA2  8F6D               	bsf	(___ftadd@f1+1)& (0+255),7,b
  2944                           
  2945                           ; BSR set to: 0
  2946  000DA4  0EFF               	movlw	255
  2947  000DA6  176C               	andwf	___ftadd@f1& (0+255),f,b
  2948  000DA8  0EFF               	movlw	255
  2949  000DAA  176D               	andwf	(___ftadd@f1+1)& (0+255),f,b
  2950  000DAC  0E00               	movlw	0
  2951  000DAE  176E               	andwf	(___ftadd@f1+2)& (0+255),f,b
  2952  000DB0  8F70               	bsf	(___ftadd@f2+1)& (0+255),7,b
  2953                           
  2954                           ; BSR set to: 0
  2955  000DB2  0EFF               	movlw	255
  2956  000DB4  176F               	andwf	___ftadd@f2& (0+255),f,b
  2957  000DB6  0EFF               	movlw	255
  2958  000DB8  1770               	andwf	(___ftadd@f2+1)& (0+255),f,b
  2959  000DBA  0E00               	movlw	0
  2960  000DBC  1771               	andwf	(___ftadd@f2+2)& (0+255),f,b
  2961                           
  2962                           ; BSR set to: 0
  2963  000DBE  5176               	movf	___ftadd@exp2& (0+255),w,b
  2964  000DC0  5D77               	subwf	___ftadd@exp1& (0+255),w,b
  2965  000DC2  B0D8               	btfsc	status,0,c
  2966  000DC4  D01B               	goto	l475
  2967  000DC6                     u1260:
  2968                           
  2969                           ; BSR set to: 0
  2970                           
  2971                           ; BSR set to: 0
  2972  000DC6  90D8               	bcf	status,0,c
  2973  000DC8  376F               	rlcf	___ftadd@f2& (0+255),f,b
  2974  000DCA  3770               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  2975  000DCC  3771               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  2976  000DCE  0776               	decf	___ftadd@exp2& (0+255),f,b
  2977                           
  2978                           ; BSR set to: 0
  2979  000DD0  5177               	movf	___ftadd@exp1& (0+255),w,b
  2980  000DD2  1976               	xorwf	___ftadd@exp2& (0+255),w,b
  2981  000DD4  B4D8               	btfsc	status,2,c
  2982  000DD6  D00D               	goto	l480
  2983                           
  2984                           ; BSR set to: 0
  2985  000DD8  0775               	decf	___ftadd@sign& (0+255),f,b
  2986  000DDA  C075  F072         	movff	___ftadd@sign,??___ftadd
  2987  000DDE  0E07               	movlw	7
  2988  000DE0  1772               	andwf	??___ftadd& (0+255),f,b
  2989  000DE2  B4D8               	btfsc	status,2,c
  2990  000DE4  D006               	goto	l480
  2991  000DE6  D7EF               	goto	u1260
  2992  000DE8                     
  2993                           ; BSR set to: 0
  2994                           
  2995                           ; BSR set to: 0
  2996  000DE8  90D8               	bcf	status,0,c
  2997  000DEA  336E               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  2998  000DEC  336D               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  2999  000DEE  336C               	rrcf	___ftadd@f1& (0+255),f,b
  3000  000DF0  2B77               	incf	___ftadd@exp1& (0+255),f,b
  3001  000DF2                     l480:
  3002                           
  3003                           ; BSR set to: 0
  3004                           
  3005                           ; BSR set to: 0
  3006  000DF2  5176               	movf	___ftadd@exp2& (0+255),w,b
  3007  000DF4  1977               	xorwf	___ftadd@exp1& (0+255),w,b
  3008  000DF6  B4D8               	btfsc	status,2,c
  3009  000DF8  D01F               	goto	u1330
  3010  000DFA  D7F6               	goto	l481
  3011  000DFC                     l475:
  3012                           
  3013                           ; BSR set to: 0
  3014                           
  3015                           ; BSR set to: 0
  3016  000DFC  5177               	movf	___ftadd@exp1& (0+255),w,b
  3017  000DFE  5D76               	subwf	___ftadd@exp2& (0+255),w,b
  3018  000E00  B0D8               	btfsc	status,0,c
  3019  000E02  D01A               	goto	u1330
  3020  000E04                     u1300:
  3021                           
  3022                           ; BSR set to: 0
  3023                           
  3024                           ; BSR set to: 0
  3025  000E04  90D8               	bcf	status,0,c
  3026  000E06  376C               	rlcf	___ftadd@f1& (0+255),f,b
  3027  000E08  376D               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  3028  000E0A  376E               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  3029  000E0C  0777               	decf	___ftadd@exp1& (0+255),f,b
  3030                           
  3031                           ; BSR set to: 0
  3032  000E0E  5177               	movf	___ftadd@exp1& (0+255),w,b
  3033  000E10  1976               	xorwf	___ftadd@exp2& (0+255),w,b
  3034  000E12  B4D8               	btfsc	status,2,c
  3035  000E14  D00D               	goto	l489
  3036                           
  3037                           ; BSR set to: 0
  3038  000E16  0775               	decf	___ftadd@sign& (0+255),f,b
  3039  000E18  C075  F072         	movff	___ftadd@sign,??___ftadd
  3040  000E1C  0E07               	movlw	7
  3041  000E1E  1772               	andwf	??___ftadd& (0+255),f,b
  3042  000E20  B4D8               	btfsc	status,2,c
  3043  000E22  D006               	goto	l489
  3044  000E24  D7EF               	goto	u1300
  3045  000E26                     
  3046                           ; BSR set to: 0
  3047                           
  3048                           ; BSR set to: 0
  3049  000E26  90D8               	bcf	status,0,c
  3050  000E28  3371               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  3051  000E2A  3370               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  3052  000E2C  336F               	rrcf	___ftadd@f2& (0+255),f,b
  3053  000E2E  2B76               	incf	___ftadd@exp2& (0+255),f,b
  3054  000E30                     l489:
  3055                           
  3056                           ; BSR set to: 0
  3057                           
  3058                           ; BSR set to: 0
  3059  000E30  5176               	movf	___ftadd@exp2& (0+255),w,b
  3060  000E32  1977               	xorwf	___ftadd@exp1& (0+255),w,b
  3061  000E34  A4D8               	btfss	status,2,c
  3062  000E36  D7F7               	goto	l490
  3063  000E38                     u1330:
  3064                           
  3065                           ; BSR set to: 0
  3066                           
  3067                           ; BSR set to: 0
  3068                           
  3069                           ; BSR set to: 0
  3070  000E38  AF75               	btfss	___ftadd@sign& (0+255),7,b
  3071  000E3A  D00C               	goto	l492
  3072                           
  3073                           ; BSR set to: 0
  3074  000E3C  0EFF               	movlw	255
  3075  000E3E  1B6C               	xorwf	___ftadd@f1& (0+255),f,b
  3076  000E40  0EFF               	movlw	255
  3077  000E42  1B6D               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  3078  000E44  0EFF               	movlw	255
  3079  000E46  1B6E               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  3080  000E48  0E01               	movlw	1
  3081  000E4A  276C               	addwf	___ftadd@f1& (0+255),f,b
  3082  000E4C  0E00               	movlw	0
  3083  000E4E  236D               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  3084  000E50  0E00               	movlw	0
  3085  000E52  236E               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  3086  000E54                     l492:
  3087                           
  3088                           ; BSR set to: 0
  3089  000E54  AD75               	btfss	___ftadd@sign& (0+255),6,b
  3090  000E56  D00C               	goto	l493
  3091                           
  3092                           ; BSR set to: 0
  3093  000E58  0EFF               	movlw	255
  3094  000E5A  1B6F               	xorwf	___ftadd@f2& (0+255),f,b
  3095  000E5C  0EFF               	movlw	255
  3096  000E5E  1B70               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  3097  000E60  0EFF               	movlw	255
  3098  000E62  1B71               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  3099  000E64  0E01               	movlw	1
  3100  000E66  276F               	addwf	___ftadd@f2& (0+255),f,b
  3101  000E68  0E00               	movlw	0
  3102  000E6A  2370               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  3103  000E6C  0E00               	movlw	0
  3104  000E6E  2371               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  3105  000E70                     l493:
  3106                           
  3107                           ; BSR set to: 0
  3108                           
  3109                           ; BSR set to: 0
  3110  000E70  0E00               	movlw	0
  3111  000E72  6F75               	movwf	___ftadd@sign& (0+255),b
  3112                           
  3113                           ; BSR set to: 0
  3114  000E74  516C               	movf	___ftadd@f1& (0+255),w,b
  3115  000E76  276F               	addwf	___ftadd@f2& (0+255),f,b
  3116  000E78  516D               	movf	(___ftadd@f1+1)& (0+255),w,b
  3117  000E7A  2370               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  3118  000E7C  516E               	movf	(___ftadd@f1+2)& (0+255),w,b
  3119  000E7E  2371               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  3120                           
  3121                           ; BSR set to: 0
  3122  000E80  AF71               	btfss	(___ftadd@f2+2)& (0+255),7,b
  3123  000E82  D00E               	goto	l494
  3124                           
  3125                           ; BSR set to: 0
  3126  000E84  0EFF               	movlw	255
  3127  000E86  1B6F               	xorwf	___ftadd@f2& (0+255),f,b
  3128  000E88  0EFF               	movlw	255
  3129  000E8A  1B70               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  3130  000E8C  0EFF               	movlw	255
  3131  000E8E  1B71               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  3132  000E90  0E01               	movlw	1
  3133  000E92  276F               	addwf	___ftadd@f2& (0+255),f,b
  3134  000E94  0E00               	movlw	0
  3135  000E96  2370               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  3136  000E98  0E00               	movlw	0
  3137  000E9A  2371               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  3138                           
  3139                           ; BSR set to: 0
  3140  000E9C  0E01               	movlw	1
  3141  000E9E  6F75               	movwf	___ftadd@sign& (0+255),b
  3142  000EA0                     l494:
  3143                           
  3144                           ; BSR set to: 0
  3145                           
  3146                           ; BSR set to: 0
  3147  000EA0  C06F  F028         	movff	___ftadd@f2,___ftpack@arg
  3148  000EA4  C070  F029         	movff	___ftadd@f2+1,___ftpack@arg+1
  3149  000EA8  C071  F02A         	movff	___ftadd@f2+2,___ftpack@arg+2
  3150  000EAC  C077  F02B         	movff	___ftadd@exp1,___ftpack@exp
  3151  000EB0  C075  F02C         	movff	___ftadd@sign,___ftpack@sign
  3152  000EB4  EC32  F009         	call	___ftpack	;wreg free
  3153  000EB8  C028  F06C         	movff	?___ftpack,?___ftadd
  3154  000EBC  C029  F06D         	movff	?___ftpack+1,?___ftadd+1
  3155  000EC0  C02A  F06E         	movff	?___ftpack+2,?___ftadd+2
  3156  000EC4  0012               	return	
  3157  000EC6                     __end_of___ftadd:
  3158                           	opt stack 0
  3159                           tblptru	equ	0xFF8
  3160                           tblptrh	equ	0xFF7
  3161                           tblptrl	equ	0xFF6
  3162                           tablat	equ	0xFF5
  3163                           prodh	equ	0xFF4
  3164                           prodl	equ	0xFF3
  3165                           intcon	equ	0xFF2
  3166                           intcon2	equ	0xFF1
  3167                           intcon3	equ	0xFF0
  3168                           postinc0	equ	0xFEE
  3169                           wreg	equ	0xFE8
  3170                           postdec1	equ	0xFE5
  3171                           fsr1l	equ	0xFE1
  3172                           status	equ	0xFD8
  3173                           
  3174 ;; *************** function ___ftpack *****************
  3175 ;; Defined at:
  3176 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  arg             3   39[COMRAM] unsigned um
  3179 ;;  exp             1   42[COMRAM] unsigned char 
  3180 ;;  sign            1   43[COMRAM] unsigned char 
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;		None
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  3   39[COMRAM] float 
  3185 ;; Registers used:
  3186 ;;		wreg, status,2, status,0
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3192 ;;      Params:         5       0       0       0       0       0       0       0       0
  3193 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3194 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3195 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3196 ;;Total ram usage:        8 bytes
  3197 ;; Hardware stack levels used:    1
  3198 ;; Hardware stack levels required when called:    2
  3199 ;; This function calls:
  3200 ;;		Nothing
  3201 ;; This function is called by:
  3202 ;;		___ftadd
  3203 ;;		___ftdiv
  3204 ;;		___ftmul
  3205 ;;		___lwtoft
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           	psect	text12
  3210  001264                     __ptext12:
  3211                           	opt stack 0
  3212  001264                     ___ftpack:
  3213                           	opt stack 27
  3214                           
  3215                           ;incstack = 0
  3216  001264  502B               	movf	___ftpack@exp,w,c
  3217  001266  B4D8               	btfsc	status,2,c
  3218  001268  D005               	goto	u1000
  3219  00126A  5028               	movf	___ftpack@arg,w,c
  3220  00126C  1029               	iorwf	___ftpack@arg+1,w,c
  3221  00126E  102A               	iorwf	___ftpack@arg+2,w,c
  3222  001270  A4D8               	btfss	status,2,c
  3223  001272  D00C               	goto	l435
  3224  001274                     u1000:
  3225  001274  0E00               	movlw	0
  3226  001276  6E28               	movwf	?___ftpack,c
  3227  001278  0E00               	movlw	0
  3228  00127A  6E29               	movwf	?___ftpack+1,c
  3229  00127C  0E00               	movlw	0
  3230  00127E  6E2A               	movwf	?___ftpack+2,c
  3231  001280  0012               	return	
  3232  001282  2A2B               	incf	___ftpack@exp,f,c
  3233  001284  90D8               	bcf	status,0,c
  3234  001286  322A               	rrcf	___ftpack@arg+2,f,c
  3235  001288  3229               	rrcf	___ftpack@arg+1,f,c
  3236  00128A  3228               	rrcf	___ftpack@arg,f,c
  3237  00128C                     l435:
  3238  00128C  0E00               	movlw	0
  3239  00128E  1428               	andwf	___ftpack@arg,w,c
  3240  001290  6E2D               	movwf	??___ftpack& (0+255),c
  3241  001292  0E00               	movlw	0
  3242  001294  1429               	andwf	___ftpack@arg+1,w,c
  3243  001296  6E2E               	movwf	(??___ftpack+1)& (0+255),c
  3244  001298  0EFE               	movlw	254
  3245  00129A  142A               	andwf	___ftpack@arg+2,w,c
  3246  00129C  6E2F               	movwf	(??___ftpack+2)& (0+255),c
  3247  00129E  502D               	movf	??___ftpack,w,c
  3248  0012A0  102E               	iorwf	??___ftpack+1,w,c
  3249  0012A2  102F               	iorwf	??___ftpack+2,w,c
  3250  0012A4  B4D8               	btfsc	status,2,c
  3251  0012A6  D00C               	goto	l438
  3252  0012A8  D7EC               	goto	l436
  3253  0012AA  2A2B               	incf	___ftpack@exp,f,c
  3254  0012AC  0E01               	movlw	1
  3255  0012AE  2628               	addwf	___ftpack@arg,f,c
  3256  0012B0  0E00               	movlw	0
  3257  0012B2  2229               	addwfc	___ftpack@arg+1,f,c
  3258  0012B4  0E00               	movlw	0
  3259  0012B6  222A               	addwfc	___ftpack@arg+2,f,c
  3260  0012B8  90D8               	bcf	status,0,c
  3261  0012BA  322A               	rrcf	___ftpack@arg+2,f,c
  3262  0012BC  3229               	rrcf	___ftpack@arg+1,f,c
  3263  0012BE  3228               	rrcf	___ftpack@arg,f,c
  3264  0012C0                     l438:
  3265  0012C0  0E00               	movlw	0
  3266  0012C2  1428               	andwf	___ftpack@arg,w,c
  3267  0012C4  6E2D               	movwf	??___ftpack& (0+255),c
  3268  0012C6  0E00               	movlw	0
  3269  0012C8  1429               	andwf	___ftpack@arg+1,w,c
  3270  0012CA  6E2E               	movwf	(??___ftpack+1)& (0+255),c
  3271  0012CC  0EFF               	movlw	255
  3272  0012CE  142A               	andwf	___ftpack@arg+2,w,c
  3273  0012D0  6E2F               	movwf	(??___ftpack+2)& (0+255),c
  3274  0012D2  502D               	movf	??___ftpack,w,c
  3275  0012D4  102E               	iorwf	??___ftpack+1,w,c
  3276  0012D6  102F               	iorwf	??___ftpack+2,w,c
  3277  0012D8  B4D8               	btfsc	status,2,c
  3278  0012DA  D006               	goto	l441
  3279  0012DC  D7E6               	goto	l439
  3280  0012DE  062B               	decf	___ftpack@exp,f,c
  3281  0012E0  90D8               	bcf	status,0,c
  3282  0012E2  3628               	rlcf	___ftpack@arg,f,c
  3283  0012E4  3629               	rlcf	___ftpack@arg+1,f,c
  3284  0012E6  362A               	rlcf	___ftpack@arg+2,f,c
  3285  0012E8                     l441:
  3286  0012E8  BE29               	btfsc	___ftpack@arg+1,7,c
  3287  0012EA  D003               	goto	u1040
  3288  0012EC  0E02               	movlw	2
  3289  0012EE  602B               	cpfslt	___ftpack@exp,c
  3290  0012F0  D7F6               	goto	l442
  3291  0012F2                     u1040:
  3292  0012F2  A02B               	btfss	___ftpack@exp,0,c
  3293  0012F4  9E29               	bcf	___ftpack@arg+1,7,c
  3294  0012F6  90D8               	bcf	status,0,c
  3295  0012F8  322B               	rrcf	___ftpack@exp,f,c
  3296  0012FA  502B               	movf	___ftpack@exp,w,c
  3297  0012FC  122A               	iorwf	___ftpack@arg+2,f,c
  3298  0012FE  502C               	movf	___ftpack@sign,w,c
  3299  001300  A4D8               	btfss	status,2,c
  3300  001302  8E2A               	bsf	___ftpack@arg+2,7,c
  3301  001304  C028  F028         	movff	___ftpack@arg,?___ftpack
  3302  001308  C029  F029         	movff	___ftpack@arg+1,?___ftpack+1
  3303  00130C  C02A  F02A         	movff	___ftpack@arg+2,?___ftpack+2
  3304  001310  0012               	return	
  3305  001312                     __end_of___ftpack:
  3306                           	opt stack 0
  3307                           tblptru	equ	0xFF8
  3308                           tblptrh	equ	0xFF7
  3309                           tblptrl	equ	0xFF6
  3310                           tablat	equ	0xFF5
  3311                           prodh	equ	0xFF4
  3312                           prodl	equ	0xFF3
  3313                           intcon	equ	0xFF2
  3314                           intcon2	equ	0xFF1
  3315                           intcon3	equ	0xFF0
  3316                           postinc0	equ	0xFEE
  3317                           wreg	equ	0xFE8
  3318                           postdec1	equ	0xFE5
  3319                           fsr1l	equ	0xFE1
  3320                           status	equ	0xFD8
  3321                           
  3322 ;; *************** function ___awmod *****************
  3323 ;; Defined at:
  3324 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;  dividend        2   42[BANK0 ] int 
  3327 ;;  divisor         2   44[BANK0 ] int 
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;  sign            1   47[BANK0 ] unsigned char 
  3330 ;;  counter         1   46[BANK0 ] unsigned char 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  2   42[BANK0 ] int 
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, status,0
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3340 ;;      Params:         0       4       0       0       0       0       0       0       0
  3341 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3343 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3344 ;;Total ram usage:        6 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    2
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_main
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text13
  3355  001440                     __ptext13:
  3356                           	opt stack 0
  3357  001440                     ___awmod:
  3358                           	opt stack 28
  3359                           
  3360                           ;incstack = 0
  3361  001440  0E00               	movlw	0
  3362  001442  0100               	movlb	0	; () banked
  3363  001444  6F8F               	movwf	___awmod@sign& (0+255),b
  3364                           
  3365                           ; BSR set to: 0
  3366  001446  AF8B               	btfss	(___awmod@dividend+1)& (0+255),7,b
  3367  001448  D006               	goto	l401
  3368                           
  3369                           ; BSR set to: 0
  3370  00144A  6D8A               	negf	___awmod@dividend& (0+255),b
  3371  00144C  1F8B               	comf	(___awmod@dividend+1)& (0+255),f,b
  3372  00144E  B0D8               	btfsc	status,0,c
  3373  001450  2B8B               	incf	(___awmod@dividend+1)& (0+255),f,b
  3374                           
  3375                           ; BSR set to: 0
  3376  001452  0E01               	movlw	1
  3377  001454  6F8F               	movwf	___awmod@sign& (0+255),b
  3378  001456                     l401:
  3379                           
  3380                           ; BSR set to: 0
  3381                           
  3382                           ; BSR set to: 0
  3383  001456  AF8D               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3384  001458  D004               	goto	l402
  3385                           
  3386                           ; BSR set to: 0
  3387  00145A  6D8C               	negf	___awmod@divisor& (0+255),b
  3388  00145C  1F8D               	comf	(___awmod@divisor+1)& (0+255),f,b
  3389  00145E  B0D8               	btfsc	status,0,c
  3390  001460  2B8D               	incf	(___awmod@divisor+1)& (0+255),f,b
  3391  001462                     l402:
  3392                           
  3393                           ; BSR set to: 0
  3394                           
  3395                           ; BSR set to: 0
  3396  001462  518C               	movf	___awmod@divisor& (0+255),w,b
  3397  001464  118D               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  3398  001466  B4D8               	btfsc	status,2,c
  3399  001468  D018               	goto	l409
  3400                           
  3401                           ; BSR set to: 0
  3402  00146A  0E01               	movlw	1
  3403  00146C  6F8E               	movwf	___awmod@counter& (0+255),b
  3404  00146E  D004               	goto	l404
  3405  001470                     
  3406                           ; BSR set to: 0
  3407                           
  3408                           ; BSR set to: 0
  3409  001470  90D8               	bcf	status,0,c
  3410  001472  378C               	rlcf	___awmod@divisor& (0+255),f,b
  3411  001474  378D               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  3412  001476  2B8E               	incf	___awmod@counter& (0+255),f,b
  3413  001478                     l404:
  3414                           
  3415                           ; BSR set to: 0
  3416                           
  3417                           ; BSR set to: 0
  3418  001478  AF8D               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3419  00147A  D7FA               	goto	l405
  3420  00147C                     u1980:
  3421                           
  3422                           ; BSR set to: 0
  3423                           
  3424                           ; BSR set to: 0
  3425                           
  3426                           ; BSR set to: 0
  3427  00147C  518C               	movf	___awmod@divisor& (0+255),w,b
  3428  00147E  5D8A               	subwf	___awmod@dividend& (0+255),w,b
  3429  001480  518D               	movf	(___awmod@divisor+1)& (0+255),w,b
  3430  001482  598B               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  3431  001484  A0D8               	btfss	status,0,c
  3432  001486  D004               	goto	l408
  3433                           
  3434                           ; BSR set to: 0
  3435  001488  518C               	movf	___awmod@divisor& (0+255),w,b
  3436  00148A  5F8A               	subwf	___awmod@dividend& (0+255),f,b
  3437  00148C  518D               	movf	(___awmod@divisor+1)& (0+255),w,b
  3438  00148E  5B8B               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  3439  001490                     l408:
  3440                           
  3441                           ; BSR set to: 0
  3442                           
  3443                           ; BSR set to: 0
  3444  001490  90D8               	bcf	status,0,c
  3445  001492  338D               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  3446  001494  338C               	rrcf	___awmod@divisor& (0+255),f,b
  3447                           
  3448                           ; BSR set to: 0
  3449  001496  2F8E               	decfsz	___awmod@counter& (0+255),f,b
  3450  001498  D7F1               	goto	u1980
  3451  00149A                     l409:
  3452                           
  3453                           ; BSR set to: 0
  3454                           
  3455                           ; BSR set to: 0
  3456                           
  3457                           ; BSR set to: 0
  3458  00149A  518F               	movf	___awmod@sign& (0+255),w,b
  3459  00149C  B4D8               	btfsc	status,2,c
  3460  00149E  D004               	goto	l410
  3461                           
  3462                           ; BSR set to: 0
  3463  0014A0  6D8A               	negf	___awmod@dividend& (0+255),b
  3464  0014A2  1F8B               	comf	(___awmod@dividend+1)& (0+255),f,b
  3465  0014A4  B0D8               	btfsc	status,0,c
  3466  0014A6  2B8B               	incf	(___awmod@dividend+1)& (0+255),f,b
  3467  0014A8                     l410:
  3468                           
  3469                           ; BSR set to: 0
  3470                           
  3471                           ; BSR set to: 0
  3472  0014A8  C08A  F08A         	movff	___awmod@dividend,?___awmod
  3473  0014AC  C08B  F08B         	movff	___awmod@dividend+1,?___awmod+1
  3474  0014B0  0012               	return	
  3475  0014B2                     __end_of___awmod:
  3476                           	opt stack 0
  3477                           tblptru	equ	0xFF8
  3478                           tblptrh	equ	0xFF7
  3479                           tblptrl	equ	0xFF6
  3480                           tablat	equ	0xFF5
  3481                           prodh	equ	0xFF4
  3482                           prodl	equ	0xFF3
  3483                           intcon	equ	0xFF2
  3484                           intcon2	equ	0xFF1
  3485                           intcon3	equ	0xFF0
  3486                           postinc0	equ	0xFEE
  3487                           wreg	equ	0xFE8
  3488                           postdec1	equ	0xFE5
  3489                           fsr1l	equ	0xFE1
  3490                           status	equ	0xFD8
  3491                           
  3492 ;; *************** function ___awdiv *****************
  3493 ;; Defined at:
  3494 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;  dividend        2   42[BANK0 ] int 
  3497 ;;  divisor         2   44[BANK0 ] int 
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;  quotient        2   48[BANK0 ] int 
  3500 ;;  sign            1   47[BANK0 ] unsigned char 
  3501 ;;  counter         1   46[BANK0 ] unsigned char 
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  2   42[BANK0 ] int 
  3504 ;; Registers used:
  3505 ;;		wreg, status,2, status,0
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3511 ;;      Params:         0       4       0       0       0       0       0       0       0
  3512 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3513 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3514 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3515 ;;Total ram usage:        8 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; Hardware stack levels required when called:    2
  3518 ;; This function calls:
  3519 ;;		Nothing
  3520 ;; This function is called by:
  3521 ;;		_main
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           	psect	text14
  3526  0013BA                     __ptext14:
  3527                           	opt stack 0
  3528  0013BA                     ___awdiv:
  3529                           	opt stack 28
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;incstack = 0
  3533  0013BA  0E00               	movlw	0
  3534  0013BC  0100               	movlb	0	; () banked
  3535  0013BE  6F8F               	movwf	___awdiv@sign& (0+255),b
  3536                           
  3537                           ; BSR set to: 0
  3538  0013C0  AF8D               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3539  0013C2  D006               	goto	l388
  3540                           
  3541                           ; BSR set to: 0
  3542  0013C4  6D8C               	negf	___awdiv@divisor& (0+255),b
  3543  0013C6  1F8D               	comf	(___awdiv@divisor+1)& (0+255),f,b
  3544  0013C8  B0D8               	btfsc	status,0,c
  3545  0013CA  2B8D               	incf	(___awdiv@divisor+1)& (0+255),f,b
  3546                           
  3547                           ; BSR set to: 0
  3548  0013CC  0E01               	movlw	1
  3549  0013CE  6F8F               	movwf	___awdiv@sign& (0+255),b
  3550  0013D0                     l388:
  3551                           
  3552                           ; BSR set to: 0
  3553                           
  3554                           ; BSR set to: 0
  3555  0013D0  AF8B               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  3556  0013D2  D006               	goto	l389
  3557                           
  3558                           ; BSR set to: 0
  3559  0013D4  6D8A               	negf	___awdiv@dividend& (0+255),b
  3560  0013D6  1F8B               	comf	(___awdiv@dividend+1)& (0+255),f,b
  3561  0013D8  B0D8               	btfsc	status,0,c
  3562  0013DA  2B8B               	incf	(___awdiv@dividend+1)& (0+255),f,b
  3563                           
  3564                           ; BSR set to: 0
  3565  0013DC  0E01               	movlw	1
  3566  0013DE  1B8F               	xorwf	___awdiv@sign& (0+255),f,b
  3567  0013E0                     l389:
  3568                           
  3569                           ; BSR set to: 0
  3570                           
  3571                           ; BSR set to: 0
  3572  0013E0  0E00               	movlw	0
  3573  0013E2  6F91               	movwf	(___awdiv@quotient+1)& (0+255),b
  3574  0013E4  0E00               	movlw	0
  3575  0013E6  6F90               	movwf	___awdiv@quotient& (0+255),b
  3576                           
  3577                           ; BSR set to: 0
  3578  0013E8  518C               	movf	___awdiv@divisor& (0+255),w,b
  3579  0013EA  118D               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3580  0013EC  B4D8               	btfsc	status,2,c
  3581  0013EE  D01C               	goto	l396
  3582                           
  3583                           ; BSR set to: 0
  3584  0013F0  0E01               	movlw	1
  3585  0013F2  6F8E               	movwf	___awdiv@counter& (0+255),b
  3586  0013F4  D004               	goto	l391
  3587  0013F6                     
  3588                           ; BSR set to: 0
  3589                           
  3590                           ; BSR set to: 0
  3591  0013F6  90D8               	bcf	status,0,c
  3592  0013F8  378C               	rlcf	___awdiv@divisor& (0+255),f,b
  3593  0013FA  378D               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3594  0013FC  2B8E               	incf	___awdiv@counter& (0+255),f,b
  3595  0013FE                     l391:
  3596                           
  3597                           ; BSR set to: 0
  3598                           
  3599                           ; BSR set to: 0
  3600  0013FE  AF8D               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3601  001400  D7FA               	goto	l392
  3602  001402                     u1510:
  3603                           
  3604                           ; BSR set to: 0
  3605                           
  3606                           ; BSR set to: 0
  3607                           
  3608                           ; BSR set to: 0
  3609  001402  90D8               	bcf	status,0,c
  3610  001404  3790               	rlcf	___awdiv@quotient& (0+255),f,b
  3611  001406  3791               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3612                           
  3613                           ; BSR set to: 0
  3614  001408  518C               	movf	___awdiv@divisor& (0+255),w,b
  3615  00140A  5D8A               	subwf	___awdiv@dividend& (0+255),w,b
  3616  00140C  518D               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3617  00140E  598B               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3618  001410  A0D8               	btfss	status,0,c
  3619  001412  D005               	goto	l395
  3620                           
  3621                           ; BSR set to: 0
  3622  001414  518C               	movf	___awdiv@divisor& (0+255),w,b
  3623  001416  5F8A               	subwf	___awdiv@dividend& (0+255),f,b
  3624  001418  518D               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3625  00141A  5B8B               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3626                           
  3627                           ; BSR set to: 0
  3628  00141C  8190               	bsf	___awdiv@quotient& (0+255),0,b
  3629  00141E                     l395:
  3630                           
  3631                           ; BSR set to: 0
  3632                           
  3633                           ; BSR set to: 0
  3634  00141E  90D8               	bcf	status,0,c
  3635  001420  338D               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3636  001422  338C               	rrcf	___awdiv@divisor& (0+255),f,b
  3637                           
  3638                           ; BSR set to: 0
  3639  001424  2F8E               	decfsz	___awdiv@counter& (0+255),f,b
  3640  001426  D7ED               	goto	u1510
  3641  001428                     l396:
  3642                           
  3643                           ; BSR set to: 0
  3644                           
  3645                           ; BSR set to: 0
  3646                           
  3647                           ; BSR set to: 0
  3648  001428  518F               	movf	___awdiv@sign& (0+255),w,b
  3649  00142A  B4D8               	btfsc	status,2,c
  3650  00142C  D004               	goto	l397
  3651                           
  3652                           ; BSR set to: 0
  3653  00142E  6D90               	negf	___awdiv@quotient& (0+255),b
  3654  001430  1F91               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3655  001432  B0D8               	btfsc	status,0,c
  3656  001434  2B91               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3657  001436                     l397:
  3658                           
  3659                           ; BSR set to: 0
  3660                           
  3661                           ; BSR set to: 0
  3662  001436  C090  F08A         	movff	___awdiv@quotient,?___awdiv
  3663  00143A  C091  F08B         	movff	___awdiv@quotient+1,?___awdiv+1
  3664  00143E  0012               	return	
  3665  001440                     __end_of___awdiv:
  3666                           	opt stack 0
  3667                           tblptru	equ	0xFF8
  3668                           tblptrh	equ	0xFF7
  3669                           tblptrl	equ	0xFF6
  3670                           tablat	equ	0xFF5
  3671                           prodh	equ	0xFF4
  3672                           prodl	equ	0xFF3
  3673                           intcon	equ	0xFF2
  3674                           intcon2	equ	0xFF1
  3675                           intcon3	equ	0xFF0
  3676                           postinc0	equ	0xFEE
  3677                           wreg	equ	0xFE8
  3678                           postdec1	equ	0xFE5
  3679                           fsr1l	equ	0xFE1
  3680                           status	equ	0xFD8
  3681                           
  3682 ;; *************** function _OpenXLCD *****************
  3683 ;; Defined at:
  3684 ;;		line 41 in file "nxlcd.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;  lcdtype         1    wreg     unsigned char 
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;  lcdtype         1   40[COMRAM] unsigned char 
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  1    wreg      void 
  3691 ;; Registers used:
  3692 ;;		wreg, status,2, status,0, cstack
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3698 ;;      Params:         0       0       0       0       0       0       0       0       0
  3699 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3700 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3701 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3702 ;;Total ram usage:        1 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; Hardware stack levels required when called:    4
  3705 ;; This function calls:
  3706 ;;		_BusyXLCD
  3707 ;;		_DelayPORXLCD
  3708 ;;		_DelayXLCD
  3709 ;;		_SetDDRamAddr
  3710 ;;		_WriteCmdXLCD
  3711 ;; This function is called by:
  3712 ;;		_main
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           	psect	text15
  3717  001312                     __ptext15:
  3718                           	opt stack 0
  3719  001312                     _OpenXLCD:
  3720                           	opt stack 26
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;incstack = 0
  3724                           ;OpenXLCD@lcdtype stored from wreg
  3725  001312  6E29               	movwf	OpenXLCD@lcdtype,c
  3726                           
  3727                           ;nxlcd.c: 50: PORTD &= 0x0f;
  3728  001314  0E0F               	movlw	15
  3729  001316  1683               	andwf	3971,f,c	;volatile
  3730                           
  3731                           ;nxlcd.c: 51: TRISD &= 0x0F;
  3732  001318  0E0F               	movlw	15
  3733  00131A  1695               	andwf	3989,f,c	;volatile
  3734                           
  3735                           ;nxlcd.c: 57: TRISEbits.TRISE2 = 0;
  3736  00131C  9496               	bcf	3990,2,c	;volatile
  3737                           
  3738                           ;nxlcd.c: 58: TRISEbits.TRISE0 = 0;
  3739  00131E  9096               	bcf	3990,0,c	;volatile
  3740                           
  3741                           ;nxlcd.c: 59: TRISEbits.TRISE1 = 0;
  3742  001320  9296               	bcf	3990,1,c	;volatile
  3743                           
  3744                           ;nxlcd.c: 60: LATEbits.LATE2 = 0;
  3745  001322  948D               	bcf	3981,2,c	;volatile
  3746                           
  3747                           ;nxlcd.c: 61: LATEbits.LATE0 = 0;
  3748  001324  908D               	bcf	3981,0,c	;volatile
  3749                           
  3750                           ;nxlcd.c: 62: LATEbits.LATE1 = 0;
  3751  001326  928D               	bcf	3981,1,c	;volatile
  3752                           
  3753                           ;nxlcd.c: 65: DelayPORXLCD();
  3754  001328  EC99  F00B         	call	_DelayPORXLCD	;wreg free
  3755                           
  3756                           ;nxlcd.c: 67: WriteCmdXLCD(0x30);
  3757  00132C  0E30               	movlw	48
  3758  00132E  EC03  F00B         	call	_WriteCmdXLCD
  3759                           
  3760                           ;nxlcd.c: 68: DelayXLCD();
  3761  001332  EC90  F00B         	call	_DelayXLCD	;wreg free
  3762                           
  3763                           ;nxlcd.c: 69: DelayXLCD();
  3764  001336  EC90  F00B         	call	_DelayXLCD	;wreg free
  3765                           
  3766                           ;nxlcd.c: 70: WriteCmdXLCD(0x30);
  3767  00133A  0E30               	movlw	48
  3768  00133C  EC03  F00B         	call	_WriteCmdXLCD
  3769                           
  3770                           ;nxlcd.c: 71: DelayXLCD();
  3771  001340  EC90  F00B         	call	_DelayXLCD	;wreg free
  3772                           
  3773                           ;nxlcd.c: 72: DelayXLCD();
  3774  001344  EC90  F00B         	call	_DelayXLCD	;wreg free
  3775                           
  3776                           ;nxlcd.c: 73: WriteCmdXLCD(0x32);
  3777  001348  0E32               	movlw	50
  3778  00134A  EC03  F00B         	call	_WriteCmdXLCD
  3779  00134E  EC22  F00B         	call	_BusyXLCD	;wreg free
  3780  001352  0900               	iorlw	0
  3781  001354  A4D8               	btfss	status,2,c
  3782  001356  D7FB               	goto	l29
  3783  001358                     u1070:
  3784                           
  3785                           ;nxlcd.c: 79: while(BusyXLCD());
  3786  001358  EC22  F00B         	call	_BusyXLCD	;wreg free
  3787  00135C  0900               	iorlw	0
  3788  00135E  A4D8               	btfss	status,2,c
  3789  001360  D7FB               	goto	u1070
  3790                           
  3791                           ;nxlcd.c: 80: WriteCmdXLCD(lcdtype);
  3792  001362  5029               	movf	OpenXLCD@lcdtype,w,c
  3793  001364  EC03  F00B         	call	_WriteCmdXLCD
  3794  001368  EC22  F00B         	call	_BusyXLCD	;wreg free
  3795  00136C  0900               	iorlw	0
  3796  00136E  A4D8               	btfss	status,2,c
  3797  001370  D7FB               	goto	l35
  3798                           
  3799                           ;nxlcd.c: 84: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  3800  001372  0E08               	movlw	8
  3801  001374  EC03  F00B         	call	_WriteCmdXLCD
  3802  001378  EC22  F00B         	call	_BusyXLCD	;wreg free
  3803  00137C  0900               	iorlw	0
  3804  00137E  A4D8               	btfss	status,2,c
  3805  001380  D7FB               	goto	l38
  3806                           
  3807                           ;nxlcd.c: 86: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  3808  001382  0E0F               	movlw	15
  3809  001384  EC03  F00B         	call	_WriteCmdXLCD
  3810  001388  EC22  F00B         	call	_BusyXLCD	;wreg free
  3811  00138C  0900               	iorlw	0
  3812  00138E  A4D8               	btfss	status,2,c
  3813  001390  D7FB               	goto	l41
  3814                           
  3815                           ;nxlcd.c: 90: WriteCmdXLCD(0x01);
  3816  001392  0E01               	movlw	1
  3817  001394  EC03  F00B         	call	_WriteCmdXLCD
  3818  001398  EC22  F00B         	call	_BusyXLCD	;wreg free
  3819  00139C  0900               	iorlw	0
  3820  00139E  A4D8               	btfss	status,2,c
  3821  0013A0  D7FB               	goto	l44
  3822                           
  3823                           ;nxlcd.c: 94: WriteCmdXLCD(0b00000100);
  3824  0013A2  0E04               	movlw	4
  3825  0013A4  EC03  F00B         	call	_WriteCmdXLCD
  3826  0013A8  EC22  F00B         	call	_BusyXLCD	;wreg free
  3827  0013AC  0900               	iorlw	0
  3828  0013AE  A4D8               	btfss	status,2,c
  3829  0013B0  D7FB               	goto	l47
  3830                           
  3831                           ;nxlcd.c: 98: SetDDRamAddr(0x80);
  3832  0013B2  0E80               	movlw	128
  3833  0013B4  ECC4  F00A         	call	_SetDDRamAddr
  3834  0013B8  0012               	return	
  3835  0013BA                     __end_of_OpenXLCD:
  3836                           	opt stack 0
  3837                           tblptru	equ	0xFF8
  3838                           tblptrh	equ	0xFF7
  3839                           tblptrl	equ	0xFF6
  3840                           tablat	equ	0xFF5
  3841                           prodh	equ	0xFF4
  3842                           prodl	equ	0xFF3
  3843                           intcon	equ	0xFF2
  3844                           intcon2	equ	0xFF1
  3845                           intcon3	equ	0xFF0
  3846                           postinc0	equ	0xFEE
  3847                           wreg	equ	0xFE8
  3848                           postdec1	equ	0xFE5
  3849                           fsr1l	equ	0xFE1
  3850                           status	equ	0xFD8
  3851                           
  3852 ;; *************** function _WriteCmdXLCD *****************
  3853 ;; Defined at:
  3854 ;;		line 388 in file "nxlcd.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;  cmd             1    wreg     unsigned char 
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;  cmd             1   39[COMRAM] unsigned char 
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  1    wreg      void 
  3861 ;; Registers used:
  3862 ;;		wreg, status,2, status,0, cstack
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3868 ;;      Params:         0       0       0       0       0       0       0       0       0
  3869 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3870 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3871 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3872 ;;Total ram usage:        1 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; Hardware stack levels required when called:    3
  3875 ;; This function calls:
  3876 ;;		_DelayFor18TCY
  3877 ;; This function is called by:
  3878 ;;		_OpenXLCD
  3879 ;;		_main
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           	psect	text16
  3884  001606                     __ptext16:
  3885                           	opt stack 0
  3886  001606                     _WriteCmdXLCD:
  3887                           	opt stack 27
  3888                           
  3889                           ;incstack = 0
  3890                           ;WriteCmdXLCD@cmd stored from wreg
  3891  001606  6E28               	movwf	WriteCmdXLCD@cmd,c
  3892                           
  3893                           ;nxlcd.c: 403: TRISD &= 0x0f;
  3894  001608  0E0F               	movlw	15
  3895  00160A  1695               	andwf	3989,f,c	;volatile
  3896                           
  3897                           ;nxlcd.c: 404: PORTD &= 0x0f;
  3898  00160C  0E0F               	movlw	15
  3899  00160E  1683               	andwf	3971,f,c	;volatile
  3900                           
  3901                           ;nxlcd.c: 405: PORTD |= cmd&0xf0;
  3902  001610  5028               	movf	WriteCmdXLCD@cmd,w,c
  3903  001612  0BF0               	andlw	240
  3904  001614  1283               	iorwf	3971,f,c	;volatile
  3905                           
  3906                           ;nxlcd.c: 411: LATEbits.LATE2 = 0;
  3907  001616  948D               	bcf	3981,2,c	;volatile
  3908                           
  3909                           ;nxlcd.c: 412: LATEbits.LATE0 = 0;
  3910  001618  908D               	bcf	3981,0,c	;volatile
  3911                           
  3912                           ;nxlcd.c: 413: DelayFor18TCY();
  3913  00161A  ECA1  F00B         	call	_DelayFor18TCY	;wreg free
  3914                           
  3915                           ;nxlcd.c: 414: LATEbits.LATE1 = 1;
  3916  00161E  828D               	bsf	3981,1,c	;volatile
  3917                           
  3918                           ;nxlcd.c: 415: DelayFor18TCY();
  3919  001620  ECA1  F00B         	call	_DelayFor18TCY	;wreg free
  3920                           
  3921                           ;nxlcd.c: 416: LATEbits.LATE1 = 0;
  3922  001624  928D               	bcf	3981,1,c	;volatile
  3923                           
  3924                           ;nxlcd.c: 418: PORTD &= 0x0f;
  3925  001626  0E0F               	movlw	15
  3926  001628  1683               	andwf	3971,f,c	;volatile
  3927                           
  3928                           ;nxlcd.c: 419: PORTD |= (cmd<<4)&0xf0;
  3929  00162A  3828               	swapf	WriteCmdXLCD@cmd,w,c
  3930  00162C  0BF0               	andlw	240
  3931  00162E  0BF0               	andlw	240
  3932  001630  1283               	iorwf	3971,f,c	;volatile
  3933                           
  3934                           ;nxlcd.c: 424: DelayFor18TCY();
  3935  001632  ECA1  F00B         	call	_DelayFor18TCY	;wreg free
  3936                           
  3937                           ;nxlcd.c: 425: LATEbits.LATE1 = 1;
  3938  001636  828D               	bsf	3981,1,c	;volatile
  3939                           
  3940                           ;nxlcd.c: 426: DelayFor18TCY();
  3941  001638  ECA1  F00B         	call	_DelayFor18TCY	;wreg free
  3942                           
  3943                           ;nxlcd.c: 427: LATEbits.LATE1 = 0;
  3944  00163C  928D               	bcf	3981,1,c	;volatile
  3945                           
  3946                           ;nxlcd.c: 429: TRISD |= 0xf0;
  3947  00163E  0EF0               	movlw	240
  3948  001640  1295               	iorwf	3989,f,c	;volatile
  3949  001642  0012               	return	
  3950  001644                     __end_of_WriteCmdXLCD:
  3951                           	opt stack 0
  3952                           tblptru	equ	0xFF8
  3953                           tblptrh	equ	0xFF7
  3954                           tblptrl	equ	0xFF6
  3955                           tablat	equ	0xFF5
  3956                           prodh	equ	0xFF4
  3957                           prodl	equ	0xFF3
  3958                           intcon	equ	0xFF2
  3959                           intcon2	equ	0xFF1
  3960                           intcon3	equ	0xFF0
  3961                           postinc0	equ	0xFEE
  3962                           wreg	equ	0xFE8
  3963                           postdec1	equ	0xFE5
  3964                           fsr1l	equ	0xFE1
  3965                           status	equ	0xFD8
  3966                           
  3967 ;; *************** function _SetDDRamAddr *****************
  3968 ;; Defined at:
  3969 ;;		line 171 in file "nxlcd.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;  DDaddr          1    wreg     unsigned char 
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;  DDaddr          1   39[COMRAM] unsigned char 
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      void 
  3976 ;; Registers used:
  3977 ;;		wreg, status,2, status,0, cstack
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3983 ;;      Params:         0       0       0       0       0       0       0       0       0
  3984 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3985 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3986 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3987 ;;Total ram usage:        1 bytes
  3988 ;; Hardware stack levels used:    1
  3989 ;; Hardware stack levels required when called:    3
  3990 ;; This function calls:
  3991 ;;		_DelayFor18TCY
  3992 ;; This function is called by:
  3993 ;;		_OpenXLCD
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text17
  3998  001588                     __ptext17:
  3999                           	opt stack 0
  4000  001588                     _SetDDRamAddr:
  4001                           	opt stack 26
  4002                           
  4003                           ;incstack = 0
  4004                           ;SetDDRamAddr@DDaddr stored from wreg
  4005  001588  6E28               	movwf	SetDDRamAddr@DDaddr,c
  4006                           
  4007                           ;nxlcd.c: 186: TRISD &= 0x0f;
  4008  00158A  0E0F               	movlw	15
  4009  00158C  1695               	andwf	3989,f,c	;volatile
  4010                           
  4011                           ;nxlcd.c: 187: PORTD &= 0x0f;
  4012  00158E  0E0F               	movlw	15
  4013  001590  1683               	andwf	3971,f,c	;volatile
  4014                           
  4015                           ;nxlcd.c: 188: PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  4016  001592  5028               	movf	SetDDRamAddr@DDaddr,w,c
  4017  001594  0980               	iorlw	128
  4018  001596  0BF0               	andlw	240
  4019  001598  1283               	iorwf	3971,f,c	;volatile
  4020                           
  4021                           ;nxlcd.c: 194: LATEbits.LATE2 = 0;
  4022  00159A  948D               	bcf	3981,2,c	;volatile
  4023                           
  4024                           ;nxlcd.c: 195: LATEbits.LATE0 = 0;
  4025  00159C  908D               	bcf	3981,0,c	;volatile
  4026                           
  4027                           ;nxlcd.c: 196: DelayFor18TCY();
  4028  00159E  ECA1  F00B         	call	_DelayFor18TCY	;wreg free
  4029                           
  4030                           ;nxlcd.c: 197: LATEbits.LATE1 = 1;
  4031  0015A2  828D               	bsf	3981,1,c	;volatile
  4032                           
  4033                           ;nxlcd.c: 198: DelayFor18TCY();
  4034  0015A4  ECA1  F00B         	call	_DelayFor18TCY	;wreg free
  4035                           
  4036                           ;nxlcd.c: 199: LATEbits.LATE1 = 0;
  4037  0015A8  928D               	bcf	3981,1,c	;volatile
  4038                           
  4039                           ;nxlcd.c: 201: PORTD &= 0x0f;
  4040  0015AA  0E0F               	movlw	15
  4041  0015AC  1683               	andwf	3971,f,c	;volatile
  4042                           
  4043                           ;nxlcd.c: 202: PORTD |= ((DDaddr<<4)&0xf0);
  4044  0015AE  3828               	swapf	SetDDRamAddr@DDaddr,w,c
  4045  0015B0  0BF0               	andlw	240
  4046  0015B2  0BF0               	andlw	240
  4047  0015B4  1283               	iorwf	3971,f,c	;volatile
  4048                           
  4049                           ;nxlcd.c: 207: DelayFor18TCY();
  4050  0015B6  ECA1  F00B         	call	_DelayFor18TCY	;wreg free
  4051                           
  4052                           ;nxlcd.c: 208: LATEbits.LATE1 = 1;
  4053  0015BA  828D               	bsf	3981,1,c	;volatile
  4054                           
  4055                           ;nxlcd.c: 209: DelayFor18TCY();
  4056  0015BC  ECA1  F00B         	call	_DelayFor18TCY	;wreg free
  4057                           
  4058                           ;nxlcd.c: 210: LATEbits.LATE1 = 0;
  4059  0015C0  928D               	bcf	3981,1,c	;volatile
  4060                           
  4061                           ;nxlcd.c: 212: TRISD |= 0xf0;
  4062  0015C2  0EF0               	movlw	240
  4063  0015C4  1295               	iorwf	3989,f,c	;volatile
  4064  0015C6  0012               	return	
  4065  0015C8                     __end_of_SetDDRamAddr:
  4066                           	opt stack 0
  4067                           tblptru	equ	0xFF8
  4068                           tblptrh	equ	0xFF7
  4069                           tblptrl	equ	0xFF6
  4070                           tablat	equ	0xFF5
  4071                           prodh	equ	0xFF4
  4072                           prodl	equ	0xFF3
  4073                           intcon	equ	0xFF2
  4074                           intcon2	equ	0xFF1
  4075                           intcon3	equ	0xFF0
  4076                           postinc0	equ	0xFEE
  4077                           wreg	equ	0xFE8
  4078                           postdec1	equ	0xFE5
  4079                           fsr1l	equ	0xFE1
  4080                           status	equ	0xFD8
  4081                           
  4082 ;; *************** function _DelayXLCD *****************
  4083 ;; Defined at:
  4084 ;;		line 22 in file "nxlcd.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;		None
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      void 
  4091 ;; Registers used:
  4092 ;;		wreg
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4098 ;;      Params:         0       0       0       0       0       0       0       0       0
  4099 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4100 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4101 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4102 ;;Total ram usage:        1 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; Hardware stack levels required when called:    2
  4105 ;; This function calls:
  4106 ;;		Nothing
  4107 ;; This function is called by:
  4108 ;;		_OpenXLCD
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text18
  4113  001720                     __ptext18:
  4114                           	opt stack 0
  4115  001720                     _DelayXLCD:
  4116                           	opt stack 27
  4117                           
  4118                           ;nxlcd.c: 24: _delay((unsigned long)((5)*(20000000/4000.0)));
  4119                           
  4120                           ;incstack = 0
  4121  001720  0E21               	movlw	33
  4122  001722  6E28               	movwf	??_DelayXLCD& (0+255),c
  4123  001724  0E76               	movlw	118
  4124  001726                     u2147:
  4125  001726  2EE8               	decfsz	wreg,f,c
  4126  001728  D7FE               	bra	u2147
  4127  00172A  2E28               	decfsz	??_DelayXLCD& (0+255),f,c
  4128  00172C  D7FC               	bra	u2147
  4129  00172E  D000               	nop2	
  4130  001730  0012               	return		;funcret
  4131  001732                     __end_of_DelayXLCD:
  4132                           	opt stack 0
  4133                           tblptru	equ	0xFF8
  4134                           tblptrh	equ	0xFF7
  4135                           tblptrl	equ	0xFF6
  4136                           tablat	equ	0xFF5
  4137                           prodh	equ	0xFF4
  4138                           prodl	equ	0xFF3
  4139                           intcon	equ	0xFF2
  4140                           intcon2	equ	0xFF1
  4141                           intcon3	equ	0xFF0
  4142                           postinc0	equ	0xFEE
  4143                           wreg	equ	0xFE8
  4144                           postdec1	equ	0xFE5
  4145                           fsr1l	equ	0xFE1
  4146                           status	equ	0xFD8
  4147                           
  4148 ;; *************** function _DelayPORXLCD *****************
  4149 ;; Defined at:
  4150 ;;		line 17 in file "nxlcd.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;		None
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;		None
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  1    wreg      void 
  4157 ;; Registers used:
  4158 ;;		wreg
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4164 ;;      Params:         0       0       0       0       0       0       0       0       0
  4165 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4166 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4167 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4168 ;;Total ram usage:        1 bytes
  4169 ;; Hardware stack levels used:    1
  4170 ;; Hardware stack levels required when called:    2
  4171 ;; This function calls:
  4172 ;;		Nothing
  4173 ;; This function is called by:
  4174 ;;		_OpenXLCD
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           	psect	text19
  4179  001732                     __ptext19:
  4180                           	opt stack 0
  4181  001732                     _DelayPORXLCD:
  4182                           	opt stack 27
  4183                           
  4184                           ;nxlcd.c: 19: _delay((unsigned long)((15)*(20000000/4000.0)));
  4185                           
  4186                           ;incstack = 0
  4187  001732  0E62               	movlw	98
  4188  001734  6E28               	movwf	??_DelayPORXLCD& (0+255),c
  4189  001736  0E66               	movlw	102
  4190  001738                     u2157:
  4191  001738  2EE8               	decfsz	wreg,f,c
  4192  00173A  D7FE               	bra	u2157
  4193  00173C  2E28               	decfsz	??_DelayPORXLCD& (0+255),f,c
  4194  00173E  D7FC               	bra	u2157
  4195  001740  0012               	return		;funcret
  4196  001742                     __end_of_DelayPORXLCD:
  4197                           	opt stack 0
  4198                           tblptru	equ	0xFF8
  4199                           tblptrh	equ	0xFF7
  4200                           tblptrl	equ	0xFF6
  4201                           tablat	equ	0xFF5
  4202                           prodh	equ	0xFF4
  4203                           prodl	equ	0xFF3
  4204                           intcon	equ	0xFF2
  4205                           intcon2	equ	0xFF1
  4206                           intcon3	equ	0xFF0
  4207                           postinc0	equ	0xFEE
  4208                           wreg	equ	0xFE8
  4209                           postdec1	equ	0xFE5
  4210                           fsr1l	equ	0xFE1
  4211                           status	equ	0xFD8
  4212                           
  4213 ;; *************** function _BusyXLCD *****************
  4214 ;; Defined at:
  4215 ;;		line 227 in file "nxlcd.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;		None
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;		None
  4220 ;; Return value:  Size  Location     Type
  4221 ;;                  1    wreg      unsigned char 
  4222 ;; Registers used:
  4223 ;;		wreg, cstack
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4229 ;;      Params:         0       0       0       0       0       0       0       0       0
  4230 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4231 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4232 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4233 ;;Total ram usage:        0 bytes
  4234 ;; Hardware stack levels used:    1
  4235 ;; Hardware stack levels required when called:    3
  4236 ;; This function calls:
  4237 ;;		_DelayFor18TCY
  4238 ;; This function is called by:
  4239 ;;		_OpenXLCD
  4240 ;;		_putrsXLCD
  4241 ;;		_putsXLCD
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           	psect	text20
  4246  001644                     __ptext20:
  4247                           	opt stack 0
  4248  001644                     _BusyXLCD:
  4249                           	opt stack 26
  4250                           
  4251                           ;nxlcd.c: 229: LATEbits.LATE2 = 1;
  4252                           
  4253                           ;incstack = 0
  4254  001644  848D               	bsf	3981,2,c	;volatile
  4255                           
  4256                           ;nxlcd.c: 230: LATEbits.LATE0 = 0;
  4257  001646  908D               	bcf	3981,0,c	;volatile
  4258                           
  4259                           ;nxlcd.c: 231: DelayFor18TCY();
  4260  001648  ECA1  F00B         	call	_DelayFor18TCY	;wreg free
  4261                           
  4262                           ;nxlcd.c: 232: LATEbits.LATE1 = 1;
  4263  00164C  828D               	bsf	3981,1,c	;volatile
  4264                           
  4265                           ;nxlcd.c: 233: DelayFor18TCY();
  4266  00164E  ECA1  F00B         	call	_DelayFor18TCY	;wreg free
  4267                           
  4268                           ;nxlcd.c: 249: if(PORTD&0x80)
  4269  001652  AE83               	btfss	3971,7,c	;volatile
  4270  001654  D00A               	goto	l58
  4271                           
  4272                           ;nxlcd.c: 253: {
  4273                           ;nxlcd.c: 254: LATEbits.LATE1 = 0;
  4274  001656  928D               	bcf	3981,1,c	;volatile
  4275                           
  4276                           ;nxlcd.c: 255: DelayFor18TCY();
  4277  001658  ECA1  F00B         	call	_DelayFor18TCY	;wreg free
  4278                           
  4279                           ;nxlcd.c: 256: LATEbits.LATE1 = 1;
  4280  00165C  828D               	bsf	3981,1,c	;volatile
  4281                           
  4282                           ;nxlcd.c: 257: DelayFor18TCY();
  4283  00165E  ECA1  F00B         	call	_DelayFor18TCY	;wreg free
  4284                           
  4285                           ;nxlcd.c: 258: LATEbits.LATE1 = 0;
  4286  001662  928D               	bcf	3981,1,c	;volatile
  4287                           
  4288                           ;nxlcd.c: 259: LATEbits.LATE2 = 0;
  4289  001664  948D               	bcf	3981,2,c	;volatile
  4290                           
  4291                           ;nxlcd.c: 260: return 1;
  4292  001666  0E01               	movlw	1
  4293                           
  4294                           ;nxlcd.c: 261: }
  4295  001668  0012               	return	
  4296  00166A                     l58:
  4297                           
  4298                           ;nxlcd.c: 262: else
  4299                           ;nxlcd.c: 263: {
  4300                           ;nxlcd.c: 264: LATEbits.LATE1 = 0;
  4301  00166A  928D               	bcf	3981,1,c	;volatile
  4302                           
  4303                           ;nxlcd.c: 265: DelayFor18TCY();
  4304  00166C  ECA1  F00B         	call	_DelayFor18TCY	;wreg free
  4305                           
  4306                           ;nxlcd.c: 266: LATEbits.LATE1 = 1;
  4307  001670  828D               	bsf	3981,1,c	;volatile
  4308                           
  4309                           ;nxlcd.c: 267: DelayFor18TCY();
  4310  001672  ECA1  F00B         	call	_DelayFor18TCY	;wreg free
  4311                           
  4312                           ;nxlcd.c: 268: LATEbits.LATE1 = 0;
  4313  001676  928D               	bcf	3981,1,c	;volatile
  4314                           
  4315                           ;nxlcd.c: 269: LATEbits.LATE2 = 0;
  4316  001678  948D               	bcf	3981,2,c	;volatile
  4317                           
  4318                           ;nxlcd.c: 270: return 0;
  4319  00167A  0E00               	movlw	0
  4320  00167C  0012               	return	
  4321  00167E                     __end_of_BusyXLCD:
  4322                           	opt stack 0
  4323                           tblptru	equ	0xFF8
  4324                           tblptrh	equ	0xFF7
  4325                           tblptrl	equ	0xFF6
  4326                           tablat	equ	0xFF5
  4327                           prodh	equ	0xFF4
  4328                           prodl	equ	0xFF3
  4329                           intcon	equ	0xFF2
  4330                           intcon2	equ	0xFF1
  4331                           intcon3	equ	0xFF0
  4332                           postinc0	equ	0xFEE
  4333                           wreg	equ	0xFE8
  4334                           postdec1	equ	0xFE5
  4335                           fsr1l	equ	0xFE1
  4336                           status	equ	0xFD8
  4337                           
  4338 ;; *************** function _DelayFor18TCY *****************
  4339 ;; Defined at:
  4340 ;;		line 12 in file "nxlcd.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;		None
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;		None
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  1    wreg      void 
  4347 ;; Registers used:
  4348 ;;		wreg
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4354 ;;      Params:         0       0       0       0       0       0       0       0       0
  4355 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4356 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4357 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4358 ;;Total ram usage:        0 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:    2
  4361 ;; This function calls:
  4362 ;;		Nothing
  4363 ;; This function is called by:
  4364 ;;		_SetDDRamAddr
  4365 ;;		_BusyXLCD
  4366 ;;		_WriteCmdXLCD
  4367 ;;		_WriteDataXLCD
  4368 ;;		_SetCGRamAddr
  4369 ;;		_ReadAddrXLCD
  4370 ;;		_ReadDataXLCD
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           	psect	text21
  4375  001742                     __ptext21:
  4376                           	opt stack 0
  4377  001742                     _DelayFor18TCY:
  4378                           	opt stack 26
  4379                           
  4380                           ;nxlcd.c: 14: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4381                           
  4382                           ;incstack = 0
  4383  001742  0E21               	movlw	33
  4384  001744                     u2167:
  4385  001744  2EE8               	decfsz	wreg,f,c
  4386  001746  D7FE               	bra	u2167
  4387  001748  F000               	nop	
  4388  00174A  0012               	return		;funcret
  4389  00174C                     __end_of_DelayFor18TCY:
  4390                           	opt stack 0
  4391                           tblptru	equ	0xFF8
  4392                           tblptrh	equ	0xFF7
  4393                           tblptrl	equ	0xFF6
  4394                           tablat	equ	0xFF5
  4395                           prodh	equ	0xFF4
  4396                           prodl	equ	0xFF3
  4397                           intcon	equ	0xFF2
  4398                           intcon2	equ	0xFF1
  4399                           intcon3	equ	0xFF0
  4400                           postinc0	equ	0xFEE
  4401                           wreg	equ	0xFE8
  4402                           postdec1	equ	0xFE5
  4403                           fsr1l	equ	0xFE1
  4404                           status	equ	0xFD8
  4405                           
  4406 ;; *************** function _LowPriorityISR *****************
  4407 ;; Defined at:
  4408 ;;		line 35 in file "main.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;		None
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;		None
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  1    wreg      void 
  4415 ;; Registers used:
  4416 ;;		wreg, status,2, status,0
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/0
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4422 ;;      Params:         0       0       0       0       0       0       0       0       0
  4423 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4424 ;;      Temps:         21       0       0       0       0       0       0       0       0
  4425 ;;      Totals:        21       0       0       0       0       0       0       0       0
  4426 ;;Total ram usage:       21 bytes
  4427 ;; Hardware stack levels used:    1
  4428 ;; Hardware stack levels required when called:    1
  4429 ;; This function calls:
  4430 ;;		Nothing
  4431 ;; This function is called by:
  4432 ;;		Interrupt level 1
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436                           	psect	intcodelo
  4437  000018                     __pintcodelo:
  4438                           	opt stack 0
  4439  000018                     _LowPriorityISR:
  4440                           	opt stack 26
  4441                           
  4442                           ;incstack = 0
  4443  000018  8038               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  4444  00001A  CFD8 F013          	movff	status,??_LowPriorityISR
  4445  00001E  CFE8 F014          	movff	wreg,??_LowPriorityISR+1
  4446  000022  CFE0 F015          	movff	bsr,??_LowPriorityISR+2
  4447  000026  CFFA F016          	movff	pclath,??_LowPriorityISR+3
  4448  00002A  CFFB F017          	movff	pclatu,??_LowPriorityISR+4
  4449  00002E  CFE9 F018          	movff	fsr0l,??_LowPriorityISR+5
  4450  000032  CFEA F019          	movff	fsr0h,??_LowPriorityISR+6
  4451  000036  CFE1 F01A          	movff	fsr1l,??_LowPriorityISR+7
  4452  00003A  CFE2 F01B          	movff	fsr1h,??_LowPriorityISR+8
  4453  00003E  CFD9 F01C          	movff	fsr2l,??_LowPriorityISR+9
  4454  000042  CFDA F01D          	movff	fsr2h,??_LowPriorityISR+10
  4455  000046  CFF3 F01E          	movff	prodl,??_LowPriorityISR+11
  4456  00004A  CFF4 F01F          	movff	prodh,??_LowPriorityISR+12
  4457  00004E  CFF6 F020          	movff	tblptrl,??_LowPriorityISR+13
  4458  000052  CFF7 F021          	movff	tblptrh,??_LowPriorityISR+14
  4459  000056  CFF8 F022          	movff	tblptru,??_LowPriorityISR+15
  4460  00005A  CFF5 F023          	movff	tablat,??_LowPriorityISR+16
  4461  00005E  C038  F024         	movff	btemp,??_LowPriorityISR+17
  4462  000062  C039  F025         	movff	btemp+1,??_LowPriorityISR+18
  4463  000066  C03A  F026         	movff	btemp+2,??_LowPriorityISR+19
  4464  00006A  C03B  F027         	movff	btemp+3,??_LowPriorityISR+20
  4465                           
  4466                           ;main.c: 37: if(INTCONbits.TMR0IF){
  4467  00006E  A4F2               	btfss	intcon,2,c	;volatile
  4468  000070  D013               	goto	i1l193
  4469                           
  4470                           ;main.c: 38: INTCONbits.TMR0IF = 0;
  4471  000072  94F2               	bcf	intcon,2,c	;volatile
  4472                           
  4473                           ;main.c: 39: if(estouros == 50){
  4474  000074  0E32               	movlw	50
  4475  000076  1836               	xorwf	_estouros,w,c
  4476  000078  1037               	iorwf	_estouros+1,w,c
  4477  00007A  A4D8               	btfss	status,2,c
  4478  00007C  D003               	goto	i1l194
  4479                           
  4480                           ;main.c: 40: ADCON0bits.CHS1 = 1;
  4481  00007E  86C2               	bsf	4034,3,c	;volatile
  4482                           
  4483                           ;main.c: 41: ADCON0bits.CHS0 = 1;
  4484  000080  84C2               	bsf	4034,2,c	;volatile
  4485                           
  4486                           ;main.c: 42: }else{
  4487  000082  D002               	goto	i1l195
  4488  000084                     i1l194:
  4489                           
  4490                           ;main.c: 43: ADCON0bits.CHS1 = 0;
  4491  000084  96C2               	bcf	4034,3,c	;volatile
  4492                           
  4493                           ;main.c: 44: ADCON0bits.CHS0 = 0;
  4494  000086  94C2               	bcf	4034,2,c	;volatile
  4495  000088                     i1l195:
  4496                           
  4497                           ;main.c: 45: }
  4498                           ;main.c: 46: controlador = 1;
  4499  000088  0E00               	movlw	0
  4500  00008A  0100               	movlb	0	; () banked
  4501  00008C  6FA0               	movwf	(_controlador+1)& (0+255),b
  4502  00008E  0E01               	movlw	1
  4503  000090  6F9F               	movwf	_controlador& (0+255),b
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;main.c: 47: ADCON0bits.GODONE = 1;
  4507  000092  82C2               	bsf	4034,1,c	;volatile
  4508                           
  4509                           ;main.c: 48: TMR0L = 0x30;
  4510  000094  0E30               	movlw	48
  4511  000096  6ED6               	movwf	4054,c	;volatile
  4512  000098                     i1l193:
  4513                           
  4514                           ;main.c: 49: }
  4515                           ;main.c: 50: if(INTCON3bits.INT1IF == 1){
  4516                           
  4517                           ; BSR set to: 0
  4518  000098  A0F0               	btfss	intcon3,0,c	;volatile
  4519  00009A  D006               	goto	i1l196
  4520                           
  4521                           ;main.c: 51: INTCON3bits.INT1IF = 0;
  4522  00009C  90F0               	bcf	intcon3,0,c	;volatile
  4523                           
  4524                           ;main.c: 52: aumenta = 1;
  4525  00009E  0E00               	movlw	0
  4526  0000A0  0100               	movlb	0	; () banked
  4527  0000A2  6FA8               	movwf	(_aumenta+1)& (0+255),b
  4528  0000A4  0E01               	movlw	1
  4529  0000A6  6FA7               	movwf	_aumenta& (0+255),b
  4530  0000A8                     i1l196:
  4531                           
  4532                           ;main.c: 53: }
  4533                           ;main.c: 54: if(INTCON3bits.INT2IF == 1){
  4534                           
  4535                           ; BSR set to: 0
  4536  0000A8  A2F0               	btfss	intcon3,1,c	;volatile
  4537  0000AA  D006               	goto	i1l197
  4538                           
  4539                           ;main.c: 55: INTCON3bits.INT2IF = 0;
  4540  0000AC  92F0               	bcf	intcon3,1,c	;volatile
  4541                           
  4542                           ;main.c: 56: diminui = 1;
  4543  0000AE  0E00               	movlw	0
  4544  0000B0  0100               	movlb	0	; () banked
  4545  0000B2  6FA6               	movwf	(_diminui+1)& (0+255),b
  4546  0000B4  0E01               	movlw	1
  4547  0000B6  6FA5               	movwf	_diminui& (0+255),b
  4548  0000B8                     i1l197:
  4549                           
  4550                           ; BSR set to: 0
  4551  0000B8  C027  F03B         	movff	??_LowPriorityISR+20,btemp+3
  4552  0000BC  C026  F03A         	movff	??_LowPriorityISR+19,btemp+2
  4553  0000C0  C025  F039         	movff	??_LowPriorityISR+18,btemp+1
  4554  0000C4  C024  F038         	movff	??_LowPriorityISR+17,btemp
  4555  0000C8  C023  FFF5         	movff	??_LowPriorityISR+16,tablat
  4556  0000CC  C022  FFF8         	movff	??_LowPriorityISR+15,tblptru
  4557  0000D0  C021  FFF7         	movff	??_LowPriorityISR+14,tblptrh
  4558  0000D4  C020  FFF6         	movff	??_LowPriorityISR+13,tblptrl
  4559  0000D8  C01F  FFF4         	movff	??_LowPriorityISR+12,prodh
  4560  0000DC  C01E  FFF3         	movff	??_LowPriorityISR+11,prodl
  4561  0000E0  C01D  FFDA         	movff	??_LowPriorityISR+10,fsr2h
  4562  0000E4  C01C  FFD9         	movff	??_LowPriorityISR+9,fsr2l
  4563  0000E8  C01B  FFE2         	movff	??_LowPriorityISR+8,fsr1h
  4564  0000EC  C01A  FFE1         	movff	??_LowPriorityISR+7,fsr1l
  4565  0000F0  C019  FFEA         	movff	??_LowPriorityISR+6,fsr0h
  4566  0000F4  C018  FFE9         	movff	??_LowPriorityISR+5,fsr0l
  4567  0000F8  C017  FFFB         	movff	??_LowPriorityISR+4,pclatu
  4568  0000FC  C016  FFFA         	movff	??_LowPriorityISR+3,pclath
  4569  000100  C015  FFE0         	movff	??_LowPriorityISR+2,bsr
  4570  000104  C014  FFE8         	movff	??_LowPriorityISR+1,wreg
  4571  000108  C013  FFD8         	movff	??_LowPriorityISR,status
  4572  00010C  9038               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  4573  00010E  0010               	retfie	
  4574  000110                     __end_of_LowPriorityISR:
  4575                           	opt stack 0
  4576                           pclatu	equ	0xFFB
  4577                           pclath	equ	0xFFA
  4578                           tblptru	equ	0xFF8
  4579                           tblptrh	equ	0xFF7
  4580                           tblptrl	equ	0xFF6
  4581                           tablat	equ	0xFF5
  4582                           prodh	equ	0xFF4
  4583                           prodl	equ	0xFF3
  4584                           intcon	equ	0xFF2
  4585                           intcon2	equ	0xFF1
  4586                           intcon3	equ	0xFF0
  4587                           postinc0	equ	0xFEE
  4588                           fsr0h	equ	0xFEA
  4589                           fsr0l	equ	0xFE9
  4590                           wreg	equ	0xFE8
  4591                           postdec1	equ	0xFE5
  4592                           fsr1h	equ	0xFE2
  4593                           fsr1l	equ	0xFE1
  4594                           bsr	equ	0xFE0
  4595                           fsr2h	equ	0xFDA
  4596                           fsr2l	equ	0xFD9
  4597                           status	equ	0xFD8
  4598                           
  4599 ;; *************** function _HighPriorityISR *****************
  4600 ;; Defined at:
  4601 ;;		line 22 in file "main.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;		None
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;		None
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  1    wreg      void 
  4608 ;; Registers used:
  4609 ;;		wreg, status,2, status,0
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4615 ;;      Params:         0       0       0       0       0       0       0       0       0
  4616 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4617 ;;      Temps:         18       0       0       0       0       0       0       0       0
  4618 ;;      Totals:        18       0       0       0       0       0       0       0       0
  4619 ;;Total ram usage:       18 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; This function calls:
  4622 ;;		Nothing
  4623 ;; This function is called by:
  4624 ;;		Interrupt level 2
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           	psect	intcode
  4629  000008                     __pintcode:
  4630                           	opt stack 0
  4631  000008                     _HighPriorityISR:
  4632                           	opt stack 26
  4633                           
  4634                           ;incstack = 0
  4635  000008  8238               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4636  00000A  EDCE  F008         	call	int_func,f	;refresh shadow registers
  4637                           pclatu	equ	0xFFB
  4638                           pclath	equ	0xFFA
  4639                           tblptru	equ	0xFF8
  4640                           tblptrh	equ	0xFF7
  4641                           tblptrl	equ	0xFF6
  4642                           tablat	equ	0xFF5
  4643                           prodh	equ	0xFF4
  4644                           prodl	equ	0xFF3
  4645                           intcon	equ	0xFF2
  4646                           intcon2	equ	0xFF1
  4647                           intcon3	equ	0xFF0
  4648                           postinc0	equ	0xFEE
  4649                           fsr0h	equ	0xFEA
  4650                           fsr0l	equ	0xFE9
  4651                           wreg	equ	0xFE8
  4652                           postdec1	equ	0xFE5
  4653                           fsr1h	equ	0xFE2
  4654                           fsr1l	equ	0xFE1
  4655                           bsr	equ	0xFE0
  4656                           fsr2h	equ	0xFDA
  4657                           fsr2l	equ	0xFD9
  4658                           status	equ	0xFD8
  4659                           
  4660                           	psect	intcode_body
  4661  00119C                     __pintcode_body:
  4662                           	opt stack 26
  4663  00119C                     int_func:
  4664                           	opt stack 26
  4665  00119C  0006               	pop		; remove dummy address from shadow register refresh
  4666  00119E  CFFA F001          	movff	pclath,??_HighPriorityISR
  4667  0011A2  CFFB F002          	movff	pclatu,??_HighPriorityISR+1
  4668  0011A6  CFE9 F003          	movff	fsr0l,??_HighPriorityISR+2
  4669  0011AA  CFEA F004          	movff	fsr0h,??_HighPriorityISR+3
  4670  0011AE  CFE1 F005          	movff	fsr1l,??_HighPriorityISR+4
  4671  0011B2  CFE2 F006          	movff	fsr1h,??_HighPriorityISR+5
  4672  0011B6  CFD9 F007          	movff	fsr2l,??_HighPriorityISR+6
  4673  0011BA  CFDA F008          	movff	fsr2h,??_HighPriorityISR+7
  4674  0011BE  CFF3 F009          	movff	prodl,??_HighPriorityISR+8
  4675  0011C2  CFF4 F00A          	movff	prodh,??_HighPriorityISR+9
  4676  0011C6  CFF6 F00B          	movff	tblptrl,??_HighPriorityISR+10
  4677  0011CA  CFF7 F00C          	movff	tblptrh,??_HighPriorityISR+11
  4678  0011CE  CFF8 F00D          	movff	tblptru,??_HighPriorityISR+12
  4679  0011D2  CFF5 F00E          	movff	tablat,??_HighPriorityISR+13
  4680  0011D6  C038  F00F         	movff	btemp,??_HighPriorityISR+14
  4681  0011DA  C039  F010         	movff	btemp+1,??_HighPriorityISR+15
  4682  0011DE  C03A  F011         	movff	btemp+2,??_HighPriorityISR+16
  4683  0011E2  C03B  F012         	movff	btemp+3,??_HighPriorityISR+17
  4684                           
  4685                           ;main.c: 24: if(PIR1bits.ADIF == 1){
  4686  0011E6  AC9E               	btfss	3998,6,c	;volatile
  4687  0011E8  D017               	goto	i2l187
  4688                           
  4689                           ;main.c: 25: PIR1bits.ADIF = 0;
  4690  0011EA  9C9E               	bcf	3998,6,c	;volatile
  4691                           
  4692                           ;main.c: 26: if(estouros == 50){
  4693  0011EC  0E32               	movlw	50
  4694  0011EE  1836               	xorwf	_estouros,w,c
  4695  0011F0  1037               	iorwf	_estouros+1,w,c
  4696  0011F2  A4D8               	btfss	status,2,c
  4697  0011F4  D00A               	goto	i2l186
  4698                           
  4699                           ;main.c: 27: estouros = 0;
  4700  0011F6  0E00               	movlw	0
  4701  0011F8  6E37               	movwf	_estouros+1,c
  4702  0011FA  0E00               	movlw	0
  4703  0011FC  6E36               	movwf	_estouros,c
  4704                           
  4705                           ;main.c: 28: potencia = 1;
  4706  0011FE  0E00               	movlw	0
  4707  001200  0100               	movlb	0	; () banked
  4708  001202  6F9E               	movwf	(_potencia+1)& (0+255),b
  4709  001204  0E01               	movlw	1
  4710  001206  6F9D               	movwf	_potencia& (0+255),b
  4711                           
  4712                           ;main.c: 29: }else{
  4713  001208  D007               	goto	i2l187
  4714  00120A                     i2l186:
  4715                           
  4716                           ;main.c: 30: estouros++;
  4717                           
  4718                           ; BSR set to: 0
  4719  00120A  4A36               	infsnz	_estouros,f,c
  4720  00120C  2A37               	incf	_estouros+1,f,c
  4721                           
  4722                           ;main.c: 31: conversor_temp = 1;
  4723  00120E  0E00               	movlw	0
  4724  001210  0100               	movlb	0	; () banked
  4725  001212  6FA2               	movwf	(_conversor_temp+1)& (0+255),b
  4726  001214  0E01               	movlw	1
  4727  001216  6FA1               	movwf	_conversor_temp& (0+255),b
  4728  001218                     i2l187:
  4729                           
  4730                           ; BSR set to: 0
  4731                           
  4732                           ; BSR set to: 0
  4733  001218  C012  F03B         	movff	??_HighPriorityISR+17,btemp+3
  4734  00121C  C011  F03A         	movff	??_HighPriorityISR+16,btemp+2
  4735  001220  C010  F039         	movff	??_HighPriorityISR+15,btemp+1
  4736  001224  C00F  F038         	movff	??_HighPriorityISR+14,btemp
  4737  001228  C00E  FFF5         	movff	??_HighPriorityISR+13,tablat
  4738  00122C  C00D  FFF8         	movff	??_HighPriorityISR+12,tblptru
  4739  001230  C00C  FFF7         	movff	??_HighPriorityISR+11,tblptrh
  4740  001234  C00B  FFF6         	movff	??_HighPriorityISR+10,tblptrl
  4741  001238  C00A  FFF4         	movff	??_HighPriorityISR+9,prodh
  4742  00123C  C009  FFF3         	movff	??_HighPriorityISR+8,prodl
  4743  001240  C008  FFDA         	movff	??_HighPriorityISR+7,fsr2h
  4744  001244  C007  FFD9         	movff	??_HighPriorityISR+6,fsr2l
  4745  001248  C006  FFE2         	movff	??_HighPriorityISR+5,fsr1h
  4746  00124C  C005  FFE1         	movff	??_HighPriorityISR+4,fsr1l
  4747  001250  C004  FFEA         	movff	??_HighPriorityISR+3,fsr0h
  4748  001254  C003  FFE9         	movff	??_HighPriorityISR+2,fsr0l
  4749  001258  C002  FFFB         	movff	??_HighPriorityISR+1,pclatu
  4750  00125C  C001  FFFA         	movff	??_HighPriorityISR,pclath
  4751  001260  9238               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4752  001262  0011               	retfie		f
  4753  001264                     __end_of_HighPriorityISR:
  4754                           	opt stack 0
  4755                           pclatu	equ	0xFFB
  4756                           pclath	equ	0xFFA
  4757                           tblptru	equ	0xFF8
  4758                           tblptrh	equ	0xFF7
  4759                           tblptrl	equ	0xFF6
  4760                           tablat	equ	0xFF5
  4761                           prodh	equ	0xFF4
  4762                           prodl	equ	0xFF3
  4763                           intcon	equ	0xFF2
  4764                           intcon2	equ	0xFF1
  4765                           intcon3	equ	0xFF0
  4766                           postinc0	equ	0xFEE
  4767                           fsr0h	equ	0xFEA
  4768                           fsr0l	equ	0xFE9
  4769                           wreg	equ	0xFE8
  4770                           postdec1	equ	0xFE5
  4771                           fsr1h	equ	0xFE2
  4772                           fsr1l	equ	0xFE1
  4773                           bsr	equ	0xFE0
  4774                           fsr2h	equ	0xFDA
  4775                           fsr2l	equ	0xFD9
  4776                           status	equ	0xFD8
  4777                           pclatu	equ	0xFFB
  4778                           pclath	equ	0xFFA
  4779                           tblptru	equ	0xFF8
  4780                           tblptrh	equ	0xFF7
  4781                           tblptrl	equ	0xFF6
  4782                           tablat	equ	0xFF5
  4783                           prodh	equ	0xFF4
  4784                           prodl	equ	0xFF3
  4785                           intcon	equ	0xFF2
  4786                           intcon2	equ	0xFF1
  4787                           intcon3	equ	0xFF0
  4788                           postinc0	equ	0xFEE
  4789                           fsr0h	equ	0xFEA
  4790                           fsr0l	equ	0xFE9
  4791                           wreg	equ	0xFE8
  4792                           postdec1	equ	0xFE5
  4793                           fsr1h	equ	0xFE2
  4794                           fsr1l	equ	0xFE1
  4795                           bsr	equ	0xFE0
  4796                           fsr2h	equ	0xFDA
  4797                           fsr2l	equ	0xFD9
  4798                           status	equ	0xFD8
  4799                           
  4800                           	psect	rparam
  4801  0000                     pclatu	equ	0xFFB
  4802                           pclath	equ	0xFFA
  4803                           tblptru	equ	0xFF8
  4804                           tblptrh	equ	0xFF7
  4805                           tblptrl	equ	0xFF6
  4806                           tablat	equ	0xFF5
  4807                           prodh	equ	0xFF4
  4808                           prodl	equ	0xFF3
  4809                           intcon	equ	0xFF2
  4810                           intcon2	equ	0xFF1
  4811                           intcon3	equ	0xFF0
  4812                           postinc0	equ	0xFEE
  4813                           fsr0h	equ	0xFEA
  4814                           fsr0l	equ	0xFE9
  4815                           wreg	equ	0xFE8
  4816                           postdec1	equ	0xFE5
  4817                           fsr1h	equ	0xFE2
  4818                           fsr1l	equ	0xFE1
  4819                           bsr	equ	0xFE0
  4820                           fsr2h	equ	0xFDA
  4821                           fsr2l	equ	0xFD9
  4822                           status	equ	0xFD8
  4823                           
  4824                           	psect	temp
  4825  000038                     btemp:
  4826                           	opt stack 0
  4827  000038                     	ds	1
  4828  0000                     int$flags	set	btemp
  4829  0000                     wtemp6	set	btemp+1
  4830                           pclatu	equ	0xFFB
  4831                           pclath	equ	0xFFA
  4832                           tblptru	equ	0xFF8
  4833                           tblptrh	equ	0xFF7
  4834                           tblptrl	equ	0xFF6
  4835                           tablat	equ	0xFF5
  4836                           prodh	equ	0xFF4
  4837                           prodl	equ	0xFF3
  4838                           intcon	equ	0xFF2
  4839                           intcon2	equ	0xFF1
  4840                           intcon3	equ	0xFF0
  4841                           postinc0	equ	0xFEE
  4842                           fsr0h	equ	0xFEA
  4843                           fsr0l	equ	0xFE9
  4844                           wreg	equ	0xFE8
  4845                           postdec1	equ	0xFE5
  4846                           fsr1h	equ	0xFE2
  4847                           fsr1l	equ	0xFE1
  4848                           bsr	equ	0xFE0
  4849                           fsr2h	equ	0xFDA
  4850                           fsr2l	equ	0xFD9
  4851                           status	equ	0xFD8


Data Sizes:
    Strings     20
    Constant    0
    Data        6
    BSS         26
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     53      55
    BANK0           160     58      92
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_5(CODE[2]), STR_4(CODE[6]), STR_3(CODE[2]), STR_2(CODE[4]), 
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->___ftmul
    _main->___ftneg
    _putrsXLCD->_WriteDataXLCD
    ___lwtoft->___ftpack
    ___lwdiv->___wmul
    ___fttol->___ftmul
    ___fttol->___ftneg
    ___ftneg->___lwtoft
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    ___ftadd->___ftmul
    ___ftadd->___ftneg
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_DelayXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD

Critical Paths under _LowPriorityISR in COMRAM

    None.

Critical Paths under _HighPriorityISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    ___fttol->___ftdiv
    ___ftdiv->___ftmul
    ___ftadd->___ftmul
    ___awmod->___fttol
    ___awdiv->___fttol

Critical Paths under _LowPriorityISR in BANK0

    None.

Critical Paths under _HighPriorityISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowPriorityISR in BANK1

    None.

Critical Paths under _HighPriorityISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowPriorityISR in BANK2

    None.

Critical Paths under _HighPriorityISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityISR in BANK3

    None.

Critical Paths under _HighPriorityISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityISR in BANK4

    None.

Critical Paths under _HighPriorityISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityISR in BANK5

    None.

Critical Paths under _HighPriorityISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityISR in BANK6

    None.

Critical Paths under _HighPriorityISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityISR in BANK7

    None.

Critical Paths under _HighPriorityISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   17217
                                             50 BANK0      8     8      0
                           _OpenXLCD
                       _WriteCmdXLCD
                      _WriteDataXLCD
                            ___awdiv
                            ___awmod
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                            ___lwdiv
                            ___lwmod
                           ___lwtoft
                             ___wmul
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (1) _putrsXLCD                                            2     0      2     469
                                             40 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      44
                                             39 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     463
                                             39 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2716
                                             47 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     463
                                             39 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                             45 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     556
                                             27 BANK0     15    11      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     121
                                             50 COMRAM     3     0      3
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3374
                                             50 COMRAM     3     3      0
                                              0 BANK0     12     6      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3024
                                             12 BANK0     15     9      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    3862
                                             12 BANK0     12     6      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2466
                                             39 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     613
                                             42 BANK0      6     2      4
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                             42 BANK0      8     4      4
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _OpenXLCD                                             1     1      0     110
                                             40 COMRAM     1     1      0
                           _BusyXLCD
                       _DelayPORXLCD
                          _DelayXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (1) _WriteCmdXLCD                                         1     1      0      44
                                             39 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         1     1      0      44
                                             39 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _DelayXLCD                                            1     1      0       0
                                             39 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DelayPORXLCD                                         1     1      0       0
                                             39 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _LowPriorityISR                                      21    21      0       0
                                             18 COMRAM    21    21      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighPriorityISR                                     18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenXLCD
     _BusyXLCD
       _DelayFor18TCY
     _DelayPORXLCD
     _DelayXLCD
     _SetDDRamAddr
       _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _WriteCmdXLCD
     _DelayFor18TCY
   _WriteDataXLCD
     _DelayFor18TCY
   ___awdiv
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
   ___awmod
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
   ___ftadd
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___ftneg
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftadd (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
   ___lwtoft
     ___ftpack
   ___wmul
   _putrsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY

 _LowPriorityISR (ROOT)

 _HighPriorityISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3A      5C       5       57.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     35      37       1       58.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      93      20        0.0%
DATA                 0      0      93       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Dec 04 19:50:01 2023

                      l41 1388                        l35 1368                        l44 1398  
                      l29 134E                        l38 1378                        l47 13A8  
                      l58 166A                        l84 169E                        l85 1680  
                      _Kp 00B4              ___awdiv@sign 008F                        bsr 000FE0  
     ___wmul@multiplicand 002A              ___ftadd@exp1 0077              ___ftadd@exp2 0076  
            ___ftadd@sign 0075                       l210 0970                       l211 09F8  
                     l203 08C0                       l212 0AA2                       l213 0B2C  
                     l205 08E4                       l214 0BE2                       l206 08EC  
                     l215 0BC4                       l216 0BDA                       l208 0910  
                     l401 1456                       l209 0918                       l410 14A8  
                     l402 1462                       l404 1478                       l405 1470  
                     l501 1106                       l502 1144                       l503 116A  
                     l408 1490                       l520 106A                       l409 149A  
                     l441 12E8                       l521 107A                       l442 12DE  
                     l514 0FE8                       l435 128C                       l436 1282  
                     l516 1010                       l517 1042                       l525 1712  
                     l438 12C0                       l470 0D96                       l518 1052  
                     l391 13FE                       l439 12AA                       l543 0F90  
                     l535 0EF4                       l392 13F6                       l480 0DF2  
                     l544 0F84                       l624 14D0                       l481 0DE8  
                     l537 0F6C                       l625 14C8                       l490 0E26  
                     l466 0D6C                       l546 0FAC                       l538 0F5C  
                     l634 155C                       l395 141E                       l475 0DFC  
                     l635 1554                       l396 1428                       l388 13D0  
                     l492 0E54                       l628 14F0                       l397 1436  
                     l389 13E0                       l493 0E70                       l629 14FA  
                     l494 0EA0                       l638 1574                       l639 157E  
                     l489 0E30                       l499 10DE                       _PR2 000FCB  
 __end_of_HighPriorityISR 1264     __size_of_WriteCmdXLCD 003E              ___awmod@sign 008F  
                     wreg 000FE8         main@dutyCicle_983 0096              __CFG_FOSC$HS 000000  
            __CFG_LVP$OFF 000000              ___ftdiv@cntr 0075              ___ftdiv@sign 007A  
            __CFG_WDT$OFF 000000                      l2608 08E4                      STR_1 0801  
                    STR_2 080D                      STR_3 0811                      STR_4 0807  
                    STR_5 0813                      u1000 1274                      u1040 12F2  
                    u1200 0D5E                      u1300 0E04                      u2100 0BB8  
                    u1070 1358                      u1230 0D88                      u2110 0BD2  
                    u2040 0908                      u1161 0D2A                      u1330 0E38  
                    u1171 0D3E                      u1260 0DC6                      u1421 0FD0  
                    u1510 1402                      u1441 0FF8                      u2137 08B6  
                    u2147 1726                      u1371 10C6                      u1611 0ED8  
                    u1700 14D4                      u2157 1738                      u1630 0F12  
                    u2167 1744                      u1391 10EE                      u1730 1560  
                    u1635 0F0A             __CFG_DEBUG$ON 000000                      u1670 0F96  
                    u1980 147C                      _main 0816              ___ftpack@arg 0028  
            ___ftpack@exp 002B                      fsr0h 000FEA                      fsr1h 000FE2  
                    fsr2h 000FDA                      fsr0l 000FE9                      fsr1l 000FE1  
                    fsr2l 000FD9                      btemp 0038    __size_of_WriteDataXLCD 003E  
                    prodh 000FF4                      prodl 000FF3                      start 0110  
           __CFG_MCLRE$ON 000000              ___ftmul@cntr 006A              ___param_bank 000000  
            ___ftmul@sign 006B              ___fttol@exp1 0089              ___fttol@lval 0085  
            _WriteCmdXLCD 1606             __CFG_PLLDIV$5 000000            __CFG_CCP2MX$ON 000000  
           ?_SetDDRamAddr 0001                     ?_main 0001           __end_of___awdiv 1440  
         __end_of___ftadd 0EC6           __end_of___awmod 14B2           __end_of___ftdiv 119C  
         __end_of___ftneg 1720           __end_of___ftmul 10B4           ___awdiv@divisor 008C  
         __end_of___fttol 0FBE           __end_of___lwdiv 1504                     i1l193 0098  
         __end_of___lwmod 1588                     i1l194 0084                     i1l195 0088  
                   i1l196 00A8                     i1l197 00B8                     i2l186 120A  
                   i2l187 1218           ___awdiv@counter 008E                     _TMR0L 000FD6  
                   _PORTD 000F83                     _TRISD 000F95             ___ftpack@sign 002C  
                   pclath 000FFA                     tablat 000FF5                     status 000FD8  
                   wtemp6 0039       _attRazaoCiclicaCCP1 00BA       _attRazaoCiclicaCCP2 00B8  
         __initialization 1504              __end_of_main 0D18          __end_of_BusyXLCD 167E  
      __size_of_DelayXLCD 0012     __size_of_DelayPORXLCD 0010            ??_SetDDRamAddr 0028  
        __end_of_OpenXLCD 13BA                    ??_main 0092             ___fttol@sign1 0084  
           __activetblptr 000001             _WriteDataXLCD 15C8          ?_HighPriorityISR 0001  
                  _ADRESH 000FC4                    _ADRESL 000FC3                    _CCPR1L 000FBE  
                  _CCPR2L 000FBB          ___awdiv@dividend 008A          ??_LowPriorityISR 0013  
        __end_of___ftpack 1312          __end_of___lwtoft 16FC            _conversor_temp 00A1  
           main@dutyCicle 0094              _DelayPORXLCD 1732                    ___wmul 16B2  
               ??___awdiv 0036                 ??___ftadd 0072                 ??___awmod 0036  
               ??___ftdiv 0072                 ??___ftneg 0036                 ??___ftmul 0033  
               ??___fttol 007F                 ??___lwdiv 0032                 ??___lwmod 002C  
                  clear_0 152A          ___awdiv@quotient 0090           ___awmod@divisor 008C  
         ___awmod@counter 008E            ?_WriteDataXLCD 0001     ___ftmul@f3_as_product 0067  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8         __end_of_DelayXLCD 1732                __accesstop 0060  
 __end_of__initialization 1534           __CFG_PBADEN$OFF 000000                ___ftadd@f1 006C  
              ___ftadd@f2 006F             ___rparam_used 000001                ___ftdiv@f1 006C  
              ___ftdiv@f2 006F                ___ftdiv@f3 0076                ___ftneg@f1 0033  
              ___ftmul@f1 0060                ___ftmul@f2 0063                ___fttol@f1 007B  
          __pcstackCOMRAM 0001              __pidataBANK0 174C                ___lwtoft@c 0030  
  __size_of_DelayFor18TCY 000A                __pbssBANK0 009A                 ?_BusyXLCD 0001  
         WriteCmdXLCD@cmd 0028      __end_of_SetDDRamAddr 15C8                 ?_OpenXLCD 0001  
       WriteDataXLCD@data 0028                   ?___wmul 0028           ??_WriteDataXLCD 0028  
               ?___ftpack 0028                 ?___lwtoft 0030        __size_of_putrsXLCD 0034  
              ??_BusyXLCD 0028                ??_OpenXLCD 0029                   __Hparam 0000  
                 __Lparam 0000                   ___awdiv 13BA             _DelayFor18TCY 1742  
                 ___ftadd 0D18                   ___awmod 1440                   ___ftdiv 10B4  
                 ___ftneg 16FC           __size_of___wmul 0026                   ___ftmul 0FBE  
                 ___fttol 0EC6                   ___lwdiv 14B2                   ___lwmod 1546  
            __psmallconst 0800                   __pcinit 1504                ??___ftpack 002D  
         putrsXLCD@buffer 0029                   __ramtop 0800                   __ptext0 0816  
                 __ptext1 167E                   __ptext2 15C8                   __ptext3 16B2  
                 __ptext4 16D8                   __ptext5 1546                   __ptext6 14B2  
                 __ptext7 0EC6                   __ptext8 16FC                   __ptext9 0FBE  
                 _diminui 00A5                ??___lwtoft 0033                 _T0CONbits 000FD5  
                 _aumenta 00A7                 _T2CONbits 000FCA          ___awmod@dividend 008A  
                 _voltage 00AF            __pintcode_body 119C      end_of_initialization 1534  
                 int_func 119C            ?_DelayFor18TCY 0001                _valorLido1 00AB  
              _valorLido2 00A9                   postdec1 000FE5                   postinc0 000FEE  
       __end_of_putrsXLCD 16B2                 _TRISAbits 000F92                 _TRISBbits 000F93  
               _TRISCbits 000F94                 _TRISEbits 000F96     __size_of_SetDDRamAddr 0040  
__size_of_HighPriorityISR 125C               _CCP1CONbits 000FBD               ___ftdiv@exp 0079  
             _CCP2CONbits 000FBA                 _DelayXLCD 1720               ___ftmul@exp 0066  
          __end_of___wmul 16D8              _SetDDRamAddr 1588      _controleProporcional 00AD  
      SetDDRamAddr@DDaddr 0028       start_initialization 1504          _temperaturaAtual 009A  
       __size_of_BusyXLCD 003A                ?_DelayXLCD 0001           ??_DelayFor18TCY 0028  
 __size_of_LowPriorityISR 00F8         __size_of_OpenXLCD 00A8                  ??___wmul 002C  
           ?_WriteCmdXLCD 0001               __pdataBANK0 00B2         __size_of___ftpack 00AE  
             __pbssCOMRAM 0036         __size_of___lwtoft 0024             __pcstackBANK0 0060  
               __pnvBANK0 00B8         ??_HighPriorityISR 0001          ___lwdiv@dividend 002E  
        _razaoCiclicaCCP1 00B6     _temperaturaReferencia 00B2                 __pintcode 0008  
          ??_WriteCmdXLCD 0028                  ?___awdiv 008A                  ?___ftadd 006C  
                ?___awmod 008A                  ?___ftdiv 006C                  ?___ftneg 0033  
                ?___ftmul 0060                  ?___fttol 007B                  ?___lwdiv 002E  
                ?___lwmod 0028               __pintcodelo 0018     __end_of_WriteDataXLCD 1606  
             __smallconst 0800          ___lwdiv@quotient 0032            ___wmul@product 002C  
                _LATEbits 000F8D               ??_DelayXLCD 0028                  _IPR1bits 000F9F  
                _PIE1bits 000F9D             ?_DelayPORXLCD 0001                  _PIR1bits 000F9E  
         OpenXLCD@lcdtype 0029                  _RCONbits 000FD0                _ADCON0bits 000FC2  
              _ADCON1bits 000FC1                _ADCON2bits 000FC0         ___wmul@multiplier 0028  
               _putrsXLCD 167E               _INTCON2bits 000FF1               _INTCON3bits 000FF0  
               copy_data0 1518               _controlador 009F                  _BusyXLCD 1644  
          ??_DelayPORXLCD 0028                  _OpenXLCD 1312                  __Hrparam 0000  
          _LowPriorityISR 0018                  __Lrparam 0000              __Lsmallconst 0800  
        __size_of___awdiv 0086          __size_of___ftadd 01AE          __size_of___awmod 0072  
        __size_of___ftdiv 00E8          __size_of___ftneg 0024          __size_of___ftmul 00F6  
        __size_of___fttol 00F8          __size_of___lwdiv 0052          __size_of___lwmod 0042  
                ___ftpack 1264                  ___lwtoft 16D8                ?_putrsXLCD 0029  
         ___lwdiv@divisor 0030           ___lwdiv@counter 0034                  __ptext10 10B4  
                __ptext11 0D18                  __ptext20 1644                  __ptext12 1264  
                __ptext21 1742                  __ptext13 1440                  __ptext14 13BA  
                __ptext15 1312                  __ptext16 1606                  __ptext17 1588  
                __ptext18 1720                  __ptext19 1732      __end_of_WriteCmdXLCD 1644  
           __size_of_main 0502                  _funcdisp 00A3    __end_of_LowPriorityISR 0110  
                _estouros 0036                  _potencia 009D                  int$flags 0038  
                main@erro 0098     __CFG_CPUDIV$OSC1_PLL2 000000                _INTCONbits 000FF2  
         _HighPriorityISR 0008                  intlevel1 0000                  intlevel2 0000  
        ___lwmod@dividend 0028           ?_LowPriorityISR 0001     __end_of_DelayFor18TCY 174C  
    __end_of_DelayPORXLCD 1742               ??_putrsXLCD 002B           ___lwmod@divisor 002A  
         ___lwmod@counter 002C  
